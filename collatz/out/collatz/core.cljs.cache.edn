;; Analyzed by ClojureScript 0.0-3169
{:defs {sum-up-to {:protocol-inline nil, :meta {:file nil, :arglists (quote ([n total])), :end-column 16, :end-line 34, :column 7, :line 34}, :name collatz.core/sum-up-to, :variadic false, :file "src/collatz/core.cljs", :end-column 16, :method-params ([n total]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n total])), :test true}, count-steps-loop {:protocol-inline nil, :meta {:file nil, :arglists (quote ([start])), :end-column 23, :end-line 25, :column 7, :line 25}, :name collatz.core/count-steps-loop, :variadic false, :file "src/collatz/core.cljs", :end-column 23, :method-params ([start]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 1}), :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([start])), :test true}, count-steps-arity {:protocol-inline nil, :meta {:file nil, :arglists (quote ([n] [n total])), :doc "Use a multi-arity function to allow count-steps to need\n   only one parameter", :end-column 24, :end-line 15, :column 7, :line 15}, :name collatz.core/count-steps-arity, :variadic false, :file "src/collatz/core.cljs", :end-column 24, :method-params ([n] [n total]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1} {:variadic false, :max-fixed-arity 2}), :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n] [n total])), :doc "Use a multi-arity function to allow count-steps to need\n   only one parameter", :test true}, count-steps {:protocol-inline nil, :meta {:file nil, :arglists (quote ([n total])), :end-column 18, :end-line 9, :column 7, :line 9}, :name collatz.core/count-steps, :variadic false, :file "src/collatz/core.cljs", :end-column 18, :method-params ([n total]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:variadic false, :max-fixed-arity 2}), :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n total])), :test true}, conn {:file "src/collatz/core.cljs", :meta {:file nil, :end-column 14, :end-line 4, :column 10, :line 4}, :line 4, :column 1, :end-line 4, :end-column 14, :test true, :name collatz.core/conn}}, :imports nil, :requires {clojure.browser.repl clojure.browser.repl, repl clojure.browser.repl}, :uses nil, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name collatz.core}