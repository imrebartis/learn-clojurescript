;; Analyzed by ClojureScript 0.0-3169
{:use-macros nil, :excludes #{}, :name destructuring.core, :imports nil, :requires {ev domina.events, domina.events domina.events, dom domina, domina domina, cstr clojure.string, clojure.string clojure.string, clojure.browser.repl clojure.browser.repl, repl clojure.browser.repl}, :uses nil, :defs {make-table {:protocol-inline nil, :meta {:file nil, :arglists (quote ([node city-map])), :end-column 17, :end-line 36, :column 7, :line 36}, :name destructuring.core/make-table, :variadic false, :file "src/destructuring/core.cljs", :end-column 17, :method-params ([node city-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 2}), :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([node city-map])), :test true}, create-row {:protocol-inline nil, :meta {:file nil, :arglists (quote ([item])), :end-column 17, :end-line 18, :column 7, :line 18}, :name destructuring.core/create-row, :variadic false, :file "src/destructuring/core.cljs", :end-column 17, :method-params ([item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([item])), :test true}, cities {:file "src/destructuring/core.cljs", :meta {:file nil, :end-column 12, :end-line 12, :column 6, :line 12}, :line 12, :column 1, :end-line 12, :end-column 12, :test true, :name destructuring.core/cities}, conn {:file "src/destructuring/core.cljs", :meta {:file nil, :end-column 14, :end-line 9, :column 10, :line 9}, :line 9, :column 1, :end-line 9, :end-column 14, :test true, :name destructuring.core/conn}}, :require-macros nil, :cljs.analyzer/constants {:order [:Tokyo :Paris :Toronto :Lima], :seen #{:Lima :Tokyo :Paris :Toronto}}, :doc nil}