// Compiled by ClojureScript 0.0-3169 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3169";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * Var bound to the name value of the compiler build :target option.
 * For example, if the compiler build :target is :nodejs, *target* will be bound
 * to "nodejs". *target* is a Google Closure define and can be set by compiler
 * :closure-defines option.
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
/**
 * When set to true, output will be flushed whenever a newline is printed.
 * 
 * Defaults to true.
 */
cljs.core._STAR_flush_on_newline_STAR_ = true;
/**
 * When set to logical false will drop newlines from printing calls.
 * This is to work around the implicit newlines emitted by standard JavaScript
 * console objects.
 */
cljs.core._STAR_print_newline_STAR_ = true;
/**
 * When set to logical false, strings and characters will be printed with
 * non-alphanumeric characters converted to the appropriate escape sequences.
 * 
 * Defaults to true
 */
cljs.core._STAR_print_readably_STAR_ = true;
/**
 * If set to logical true, when printing an object, its metadata will also
 * be printed in a form that can be read back by the reader.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_meta_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_dup_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_length_STAR_ = null;
/**
 * *print-level* controls how many levels deep the printer will
 * print nested objects. If it is bound to logical false, there is no
 * limit. Otherwise, it must be bound to an integer indicating the maximum
 * level to print. Each argument to print is at level 0; if an argument is a
 * collection, its items are at level 1; and so on. If an object is a
 * collection and is at a level greater than or equal to the value bound to
 * *print-level*, the printer prints '#' to represent it. The root binding
 * is nil indicating no limit.
 */
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__111__delegate = function (args){
return console.log.apply(console,(function (){var G__110 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__110) : cljs.core.into_array.call(null,G__110));
})());
};
var G__111 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__112__i = 0, G__112__a = new Array(arguments.length -  0);
while (G__112__i < G__112__a.length) {G__112__a[G__112__i] = arguments[G__112__i + 0]; ++G__112__i;}
  args = new cljs.core.IndexedSeq(G__112__a,0);
} 
return G__111__delegate.call(this,args);};
G__111.cljs$lang$maxFixedArity = 0;
G__111.cljs$lang$applyTo = (function (arglist__113){
var args = cljs.core.seq(arglist__113);
return G__111__delegate(args);
});
G__111.cljs$core$IFn$_invoke$arity$variadic = G__111__delegate;
return G__111;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
if((cljs.core._STAR_target_STAR_ === "nodejs")){
return Array.isArray(x);
} else {
return (x instanceof Array);
}
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__115 = x;
return goog.isString(G__115);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__117 = x__$1;
return goog.typeOf(G__117);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3949__auto__ = ty;
if(cljs.core.truth_(and__3949__auto__)){
return ty.cljs$lang$type;
} else {
return and__3949__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__119 = obj;
return goog.typeOf(G__119);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.nodeGlobalRequire(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__121 = Symbol;
return goog.typeOf(G__121);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4378__auto___123 = len;
var i_124 = (0);
while(true){
if((i_124 < n__4378__auto___123)){
(new_arr[i_124] = (arr[i_124]));

var G__125 = (i_124 + (1));
i_124 = G__125;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__126 = (i + (1));
i = G__126;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__135__delegate = function (array,i,idxs){
var G__132 = cljs$core$aget;
var G__133 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__134 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__132,G__133,G__134) : cljs.core.apply.call(null,G__132,G__133,G__134));
};
var G__135 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__136__i = 0, G__136__a = new Array(arguments.length -  2);
while (G__136__i < G__136__a.length) {G__136__a[G__136__i] = arguments[G__136__i + 2]; ++G__136__i;}
  idxs = new cljs.core.IndexedSeq(G__136__a,0);
} 
return G__135__delegate.call(this,array,i,idxs);};
G__135.cljs$lang$maxFixedArity = 2;
G__135.cljs$lang$applyTo = (function (arglist__137){
var array = cljs.core.first(arglist__137);
arglist__137 = cljs.core.next(arglist__137);
var i = cljs.core.first(arglist__137);
var idxs = cljs.core.rest(arglist__137);
return G__135__delegate(array,i,idxs);
});
G__135.cljs$core$IFn$_invoke$arity$variadic = G__135__delegate;
return G__135;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__138 = null;
if (arguments.length > 2) {
var G__139__i = 0, G__139__a = new Array(arguments.length -  2);
while (G__139__i < G__139__a.length) {G__139__a[G__139__i] = arguments[G__139__i + 2]; ++G__139__i;}
G__138 = new cljs.core.IndexedSeq(G__139__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__138);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__148__delegate = function (array,idx,idx2,idxv){
var G__144 = cljs$core$aset;
var G__145 = (array[idx]);
var G__146 = idx2;
var G__147 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__144,G__145,G__146,G__147) : cljs.core.apply.call(null,G__144,G__145,G__146,G__147));
};
var G__148 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__149__i = 0, G__149__a = new Array(arguments.length -  3);
while (G__149__i < G__149__a.length) {G__149__a[G__149__i] = arguments[G__149__i + 3]; ++G__149__i;}
  idxv = new cljs.core.IndexedSeq(G__149__a,0);
} 
return G__148__delegate.call(this,array,idx,idx2,idxv);};
G__148.cljs$lang$maxFixedArity = 3;
G__148.cljs$lang$applyTo = (function (arglist__150){
var array = cljs.core.first(arglist__150);
arglist__150 = cljs.core.next(arglist__150);
var idx = cljs.core.first(arglist__150);
arglist__150 = cljs.core.next(arglist__150);
var idx2 = cljs.core.first(arglist__150);
var idxv = cljs.core.rest(arglist__150);
return G__148__delegate(array,idx,idx2,idxv);
});
G__148.cljs$core$IFn$_invoke$arity$variadic = G__148__delegate;
return G__148;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__151 = null;
if (arguments.length > 3) {
var G__152__i = 0, G__152__a = new Array(arguments.length -  3);
while (G__152__i < G__152__a.length) {G__152__a[G__152__i] = arguments[G__152__i + 3]; ++G__152__i;}
G__151 = new cljs.core.IndexedSeq(G__152__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__151);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__158 = (function (a,x){
a.push(x);

return a;
});
var G__159 = [];
var G__160 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__158,G__159,G__160) : cljs.core.reduce.call(null,G__158,G__159,G__160));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__161__i = 0, G__161__a = new Array(arguments.length -  2);
while (G__161__i < G__161__a.length) {G__161__a[G__161__i] = arguments[G__161__i + 2]; ++G__161__i;}
  args = new cljs.core.IndexedSeq(G__161__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__162){
var obj = cljs.core.first(arglist__162);
arglist__162 = cljs.core.next(arglist__162);
var s = cljs.core.first(arglist__162);
var args = cljs.core.rest(arglist__162);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

/**
 * Marker protocol
 */
cljs.core.Fn = (function (){var obj164 = {};
return obj164;
})();


/**
 * Protocol for adding the ability to invoke an object as a function.
 * For example, a vector can also be used to look up a value:
 * ([1 2 3 4] 1) => 2
 */
cljs.core.IFn = (function (){var obj166 = {};
return obj166;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__212 = x__4221__auto__;
return goog.typeOf(G__212);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__214 = x__4221__auto__;
return goog.typeOf(G__214);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__216 = x__4221__auto__;
return goog.typeOf(G__216);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__218 = x__4221__auto__;
return goog.typeOf(G__218);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__220 = x__4221__auto__;
return goog.typeOf(G__220);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__222 = x__4221__auto__;
return goog.typeOf(G__222);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__224 = x__4221__auto__;
return goog.typeOf(G__224);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__226 = x__4221__auto__;
return goog.typeOf(G__226);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__228 = x__4221__auto__;
return goog.typeOf(G__228);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__230 = x__4221__auto__;
return goog.typeOf(G__230);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__232 = x__4221__auto__;
return goog.typeOf(G__232);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__234 = x__4221__auto__;
return goog.typeOf(G__234);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__236 = x__4221__auto__;
return goog.typeOf(G__236);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__238 = x__4221__auto__;
return goog.typeOf(G__238);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__240 = x__4221__auto__;
return goog.typeOf(G__240);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__242 = x__4221__auto__;
return goog.typeOf(G__242);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__244 = x__4221__auto__;
return goog.typeOf(G__244);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__246 = x__4221__auto__;
return goog.typeOf(G__246);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__248 = x__4221__auto__;
return goog.typeOf(G__248);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__250 = x__4221__auto__;
return goog.typeOf(G__250);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__252 = x__4221__auto__;
return goog.typeOf(G__252);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._invoke[(function (){var G__254 = x__4221__auto__;
return goog.typeOf(G__254);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._invoke["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


/**
 * Protocol for cloning a value.
 */
cljs.core.ICloneable = (function (){var obj256 = {};
return obj256;
})();

/**
 * Creates a clone of value.
 */
cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__3949__auto__ = value;
if(and__3949__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3949__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4221__auto__ = (((value == null))?null:value);
return (function (){var or__3957__auto__ = (cljs.core._clone[(function (){var G__260 = x__4221__auto__;
return goog.typeOf(G__260);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._clone["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


/**
 * Protocol for adding the ability to count a collection in constant time.
 */
cljs.core.ICounted = (function (){var obj262 = {};
return obj262;
})();

/**
 * Calculates the count of coll in constant time. Used by cljs.core/count.
 */
cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._count[(function (){var G__266 = x__4221__auto__;
return goog.typeOf(G__266);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._count["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for creating an empty collection.
 */
cljs.core.IEmptyableCollection = (function (){var obj268 = {};
return obj268;
})();

/**
 * Returns an empty collection of the same category as coll. Used
 * by cljs.core/count.
 */
cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._empty[(function (){var G__272 = x__4221__auto__;
return goog.typeOf(G__272);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._empty["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding to a collection.
 */
cljs.core.ICollection = (function (){var obj274 = {};
return obj274;
})();

/**
 * Returns a new collection of coll with o added to it. The new item
 * should be added to the most efficient place, e.g.
 * (conj [1 2 3 4] 5) => [1 2 3 4 5]
 * (conj '(2 3 4 5) 1) => '(1 2 3 4 5)
 */
cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._conj[(function (){var G__278 = x__4221__auto__;
return goog.typeOf(G__278);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._conj["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


/**
 * Protocol for collections to provide idexed-based access to their items.
 */
cljs.core.IIndexed = (function (){var obj280 = {};
return obj280;
})();

/**
 * Returns the value at the index n in the collection coll.
 * Returns not-found if index n is out of bounds and not-found is supplied.
 */
cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._nth[(function (){var G__286 = x__4221__auto__;
return goog.typeOf(G__286);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._nth["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._nth[(function (){var G__288 = x__4221__auto__;
return goog.typeOf(G__288);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._nth["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


/**
 * Marker protocol indicating an array sequence.
 */
cljs.core.ASeq = (function (){var obj290 = {};
return obj290;
})();


/**
 * Protocol for collections to provide access to their items as sequences.
 */
cljs.core.ISeq = (function (){var obj292 = {};
return obj292;
})();

/**
 * Returns the first item in the collection coll. Used by cljs.core/first.
 */
cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._first[(function (){var G__296 = x__4221__auto__;
return goog.typeOf(G__296);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._first["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new collection of coll without the first item. It should
 * always return a seq, e.g.
 * (rest []) => ()
 * (rest nil) => ()
 */
cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._rest[(function (){var G__300 = x__4221__auto__;
return goog.typeOf(G__300);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._rest["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the next items of a collection.
 */
cljs.core.INext = (function (){var obj302 = {};
return obj302;
})();

/**
 * Returns a new collection of coll without the first item. In contrast to
 * rest, it should return nil if there are no more items, e.g.
 * (next []) => nil
 * (next nil) => nil
 */
cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._next[(function (){var G__306 = x__4221__auto__;
return goog.typeOf(G__306);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._next["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for looking up a value in a data structure.
 */
cljs.core.ILookup = (function (){var obj308 = {};
return obj308;
})();

/**
 * Use k to look up a value in o. If not-found is supplied and k is not
 * a valid value that can be used for look up, not-found is returned.
 */
cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._lookup[(function (){var G__314 = x__4221__auto__;
return goog.typeOf(G__314);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._lookup["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._lookup[(function (){var G__316 = x__4221__auto__;
return goog.typeOf(G__316);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._lookup["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


/**
 * Protocol for adding associativity to collections.
 */
cljs.core.IAssociative = (function (){var obj318 = {};
return obj318;
})();

/**
 * Returns true if k is a key in coll.
 */
cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__322 = x__4221__auto__;
return goog.typeOf(G__322);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

/**
 * Returns a new collection of coll with a mapping from key k to
 * value v added to it.
 */
cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._assoc[(function (){var G__326 = x__4221__auto__;
return goog.typeOf(G__326);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._assoc["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


/**
 * Protocol for adding mapping functionality to collections.
 */
cljs.core.IMap = (function (){var obj328 = {};
return obj328;
})();

/**
 * Returns a new collection of coll without the mapping for key k.
 */
cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._dissoc[(function (){var G__332 = x__4221__auto__;
return goog.typeOf(G__332);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


/**
 * Protocol for examining a map entry.
 */
cljs.core.IMapEntry = (function (){var obj334 = {};
return obj334;
})();

/**
 * Returns the key of the map entry.
 */
cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._key[(function (){var G__338 = x__4221__auto__;
return goog.typeOf(G__338);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._key["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns the value of the map entry.
 */
cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._val[(function (){var G__342 = x__4221__auto__;
return goog.typeOf(G__342);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._val["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding set functionality to a collection.
 */
cljs.core.ISet = (function (){var obj344 = {};
return obj344;
})();

/**
 * Returns a new collection of coll that does not contain v.
 */
cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._disjoin[(function (){var G__348 = x__4221__auto__;
return goog.typeOf(G__348);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


/**
 * Protocol for collections to provide access to their items as stacks. The top
 * of the stack should be accessed in the most efficient way for the different
 * data structures.
 */
cljs.core.IStack = (function (){var obj350 = {};
return obj350;
})();

/**
 * Returns the item from the top of the stack. Is used by cljs.core/peek.
 */
cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._peek[(function (){var G__354 = x__4221__auto__;
return goog.typeOf(G__354);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._peek["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new stack without the item on top of the stack. Is used
 * by cljs.core/pop.
 */
cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._pop[(function (){var G__358 = x__4221__auto__;
return goog.typeOf(G__358);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._pop["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding vector functionality to collections.
 */
cljs.core.IVector = (function (){var obj360 = {};
return obj360;
})();

/**
 * Returns a new vector with value val added at position n.
 */
cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._assoc_n[(function (){var G__364 = x__4221__auto__;
return goog.typeOf(G__364);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


/**
 * Protocol for adding dereference functionality to a reference.
 */
cljs.core.IDeref = (function (){var obj366 = {};
return obj366;
})();

/**
 * Returns the value of the reference o.
 */
cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._deref[(function (){var G__370 = x__4221__auto__;
return goog.typeOf(G__370);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._deref["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj372 = {};
return obj372;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._deref_with_timeout[(function (){var G__376 = x__4221__auto__;
return goog.typeOf(G__376);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


/**
 * Protocol for accessing the metadata of an object.
 */
cljs.core.IMeta = (function (){var obj378 = {};
return obj378;
})();

/**
 * Returns the metadata of object o.
 */
cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._meta[(function (){var G__382 = x__4221__auto__;
return goog.typeOf(G__382);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._meta["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding metadata to an object.
 */
cljs.core.IWithMeta = (function (){var obj384 = {};
return obj384;
})();

/**
 * Returns a new object with value of o and metadata meta added to it.
 */
cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._with_meta[(function (){var G__388 = x__4221__auto__;
return goog.typeOf(G__388);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


/**
 * Protocol for seq types that can reduce themselves.
 * Called by cljs.core/reduce.
 */
cljs.core.IReduce = (function (){var obj390 = {};
return obj390;
})();

/**
 * f should be a function of 2 arguments. If start is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc.
 */
cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._reduce[(function (){var G__396 = x__4221__auto__;
return goog.typeOf(G__396);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._reduce["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._reduce[(function (){var G__398 = x__4221__auto__;
return goog.typeOf(G__398);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._reduce["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


/**
 * Protocol for associative types that can reduce themselves
 * via a function of key and val. Called by cljs.core/reduce-kv.
 */
cljs.core.IKVReduce = (function (){var obj400 = {};
return obj400;
})();

/**
 * Reduces an associative collection and returns the result. f should be
 * a function that takes three arguments.
 */
cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._kv_reduce[(function (){var G__404 = x__4221__auto__;
return goog.typeOf(G__404);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


/**
 * Protocol for adding value comparison functionality to a type.
 */
cljs.core.IEquiv = (function (){var obj406 = {};
return obj406;
})();

/**
 * Returns true if o and other are equal, false otherwise.
 */
cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._equiv[(function (){var G__410 = x__4221__auto__;
return goog.typeOf(G__410);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._equiv["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


/**
 * Protocol for adding hashing functionality to a type.
 */
cljs.core.IHash = (function (){var obj412 = {};
return obj412;
})();

/**
 * Returns the hash code of o.
 */
cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._hash[(function (){var G__416 = x__4221__auto__;
return goog.typeOf(G__416);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._hash["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding the ability to a type to be transformed into a sequence.
 */
cljs.core.ISeqable = (function (){var obj418 = {};
return obj418;
})();

/**
 * Returns a seq of o, or nil if o is empty.
 */
cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._seq[(function (){var G__422 = x__4221__auto__;
return goog.typeOf(G__422);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._seq["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


/**
 * Marker interface indicating a persistent collection of sequential items
 */
cljs.core.ISequential = (function (){var obj424 = {};
return obj424;
})();


/**
 * Marker interface indicating a persistent list
 */
cljs.core.IList = (function (){var obj426 = {};
return obj426;
})();


/**
 * Marker interface indicating a record object
 */
cljs.core.IRecord = (function (){var obj428 = {};
return obj428;
})();


/**
 * Protocol for reversing a seq.
 */
cljs.core.IReversible = (function (){var obj430 = {};
return obj430;
})();

/**
 * Returns a seq of the items in coll in reversed order.
 */
cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._rseq[(function (){var G__434 = x__4221__auto__;
return goog.typeOf(G__434);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._rseq["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for a collection which can represent their items
 * in a sorted manner.
 */
cljs.core.ISorted = (function (){var obj436 = {};
return obj436;
})();

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 */
cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._sorted_seq[(function (){var G__440 = x__4221__auto__;
return goog.typeOf(G__440);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 * If ascending is true, the result should contain all items which are > or >=
 * than k. If ascending is false, the result should contain all items which
 * are < or <= than k, e.g.
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)
 */
cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._sorted_seq_from[(function (){var G__444 = x__4221__auto__;
return goog.typeOf(G__444);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

/**
 * Returns the key for entry.
 */
cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._entry_key[(function (){var G__448 = x__4221__auto__;
return goog.typeOf(G__448);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

/**
 * Returns the comparator for coll.
 */
cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._comparator[(function (){var G__452 = x__4221__auto__;
return goog.typeOf(G__452);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._comparator["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for writing. Currently only implemented by StringBufferWriter.
 */
cljs.core.IWriter = (function (){var obj454 = {};
return obj454;
})();

/**
 * Writes s with writer and returns the result.
 */
cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__3949__auto__ = writer;
if(and__3949__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3949__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4221__auto__ = (((writer == null))?null:writer);
return (function (){var or__3957__auto__ = (cljs.core._write[(function (){var G__458 = x__4221__auto__;
return goog.typeOf(G__458);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._write["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

/**
 * Flush writer.
 */
cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__3949__auto__ = writer;
if(and__3949__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3949__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4221__auto__ = (((writer == null))?null:writer);
return (function (){var or__3957__auto__ = (cljs.core._flush[(function (){var G__462 = x__4221__auto__;
return goog.typeOf(G__462);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._flush["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


/**
 * The old IPrintable protocol's implementation consisted of building a giant
 * list of strings to concatenate.  This involved lots of concat calls,
 * intermediate vectors, and lazy-seqs, and was very slow in some older JS
 * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it
 * be implemented efficiently in terms of e.g. a StringBuffer append.
 */
cljs.core.IPrintWithWriter = (function (){var obj464 = {};
return obj464;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._pr_writer[(function (){var G__468 = x__4221__auto__;
return goog.typeOf(G__468);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


/**
 * Protocol for types which can have a deferred realization. Currently only
 * implemented by Delay.
 */
cljs.core.IPending = (function (){var obj470 = {};
return obj470;
})();

/**
 * Returns true if a value for d has been produced, false otherwise.
 */
cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__3949__auto__ = d;
if(and__3949__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3949__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4221__auto__ = (((d == null))?null:d);
return (function (){var or__3957__auto__ = (cljs.core._realized_QMARK_[(function (){var G__474 = x__4221__auto__;
return goog.typeOf(G__474);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


/**
 * Protocol for types that can be watched. Currently only implemented by Atom.
 */
cljs.core.IWatchable = (function (){var obj476 = {};
return obj476;
})();

/**
 * Calls all watchers with this, oldval and newval.
 */
cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._notify_watches[(function (){var G__480 = x__4221__auto__;
return goog.typeOf(G__480);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

/**
 * Adds a watcher function f to this. Keys must be unique per reference,
 * and can be used to remove the watch with -remove-watch.
 */
cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._add_watch[(function (){var G__484 = x__4221__auto__;
return goog.typeOf(G__484);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

/**
 * Removes watcher that corresponds to key from this.
 */
cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__3949__auto__ = this$;
if(and__3949__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3949__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4221__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3957__auto__ = (cljs.core._remove_watch[(function (){var G__488 = x__4221__auto__;
return goog.typeOf(G__488);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


/**
 * Protocol for collections which can transformed to transients.
 */
cljs.core.IEditableCollection = (function (){var obj490 = {};
return obj490;
})();

/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._as_transient[(function (){var G__494 = x__4221__auto__;
return goog.typeOf(G__494);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding basic functionality to transient collections.
 */
cljs.core.ITransientCollection = (function (){var obj496 = {};
return obj496;
})();

/**
 * Adds value val to tcoll and returns tcoll.
 */
cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__3949__auto__ = tcoll;
if(and__3949__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3949__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4221__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3957__auto__ = (cljs.core._conj_BANG_[(function (){var G__500 = x__4221__auto__;
return goog.typeOf(G__500);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

/**
 * Creates a persistent data structure from tcoll and returns it.
 */
cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__3949__auto__ = tcoll;
if(and__3949__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3949__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4221__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3957__auto__ = (cljs.core._persistent_BANG_[(function (){var G__504 = x__4221__auto__;
return goog.typeOf(G__504);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding associativity to transient collections.
 */
cljs.core.ITransientAssociative = (function (){var obj506 = {};
return obj506;
})();

/**
 * Returns a new transient collection of tcoll with a mapping from key to
 * val added to it.
 */
cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__3949__auto__ = tcoll;
if(and__3949__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3949__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4221__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3957__auto__ = (cljs.core._assoc_BANG_[(function (){var G__510 = x__4221__auto__;
return goog.typeOf(G__510);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


/**
 * Protocol for adding mapping functionality to transient collections.
 */
cljs.core.ITransientMap = (function (){var obj512 = {};
return obj512;
})();

/**
 * Returns a new transient collection of tcoll without the mapping for key.
 */
cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__3949__auto__ = tcoll;
if(and__3949__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3949__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4221__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3957__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__516 = x__4221__auto__;
return goog.typeOf(G__516);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


/**
 * Protocol for adding vector functionality to transient collections.
 */
cljs.core.ITransientVector = (function (){var obj518 = {};
return obj518;
})();

/**
 * Returns tcoll with value val added at position n.
 */
cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3949__auto__ = tcoll;
if(and__3949__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3949__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4221__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3957__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__522 = x__4221__auto__;
return goog.typeOf(G__522);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

/**
 * Returns tcoll with the last item removed from it.
 */
cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__3949__auto__ = tcoll;
if(and__3949__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3949__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4221__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3957__auto__ = (cljs.core._pop_BANG_[(function (){var G__526 = x__4221__auto__;
return goog.typeOf(G__526);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding set functionality to a transient collection.
 */
cljs.core.ITransientSet = (function (){var obj528 = {};
return obj528;
})();

/**
 * Returns tcoll without v.
 */
cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__3949__auto__ = tcoll;
if(and__3949__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3949__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4221__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3957__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__532 = x__4221__auto__;
return goog.typeOf(G__532);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


/**
 * Protocol for values that can be compared.
 */
cljs.core.IComparable = (function (){var obj534 = {};
return obj534;
})();

/**
 * Returns a negative number, zero, or a positive number when x is logically
 * 'less than', 'equal to', or 'greater than' y.
 */
cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__3949__auto__ = x;
if(and__3949__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3949__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4221__auto__ = (((x == null))?null:x);
return (function (){var or__3957__auto__ = (cljs.core._compare[(function (){var G__538 = x__4221__auto__;
return goog.typeOf(G__538);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._compare["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


/**
 * Protocol for accessing the items of a chunk.
 */
cljs.core.IChunk = (function (){var obj540 = {};
return obj540;
})();

/**
 * Return a new chunk of coll with the first item removed.
 */
cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._drop_first[(function (){var G__544 = x__4221__auto__;
return goog.typeOf(G__544);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing a collection as sequential chunks.
 */
cljs.core.IChunkedSeq = (function (){var obj546 = {};
return obj546;
})();

/**
 * Returns the first chunk in coll.
 */
cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._chunked_first[(function (){var G__550 = x__4221__auto__;
return goog.typeOf(G__550);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Return a new collection of coll with the first chunk removed.
 */
cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._chunked_rest[(function (){var G__554 = x__4221__auto__;
return goog.typeOf(G__554);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the chunks of a collection.
 */
cljs.core.IChunkedNext = (function (){var obj556 = {};
return obj556;
})();

/**
 * Returns a new collection of coll without the first chunk.
 */
cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._chunked_next[(function (){var G__560 = x__4221__auto__;
return goog.typeOf(G__560);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding a name.
 */
cljs.core.INamed = (function (){var obj562 = {};
return obj562;
})();

/**
 * Returns the name String of x.
 */
cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__3949__auto__ = x;
if(and__3949__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3949__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4221__auto__ = (((x == null))?null:x);
return (function (){var or__3957__auto__ = (cljs.core._name[(function (){var G__566 = x__4221__auto__;
return goog.typeOf(G__566);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._name["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

/**
 * Returns the namespace String of x.
 */
cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__3949__auto__ = x;
if(and__3949__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3949__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4221__auto__ = (((x == null))?null:x);
return (function (){var or__3957__auto__ = (cljs.core._namespace[(function (){var G__570 = x__4221__auto__;
return goog.typeOf(G__570);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._namespace["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


/**
 * Marker protocol indicating an atom.
 */
cljs.core.IAtom = (function (){var obj572 = {};
return obj572;
})();


/**
 * Protocol for adding resetting functionality.
 */
cljs.core.IReset = (function (){var obj574 = {};
return obj574;
})();

/**
 * Sets the value of o to new-value.
 */
cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._reset_BANG_[(function (){var G__578 = x__4221__auto__;
return goog.typeOf(G__578);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for adding swapping functionality.
 */
cljs.core.ISwap = (function (){var obj580 = {};
return obj580;
})();

/**
 * Swaps the value of o to be (apply f current-value-of-atom args).
 */
cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._swap_BANG_[(function (){var G__590 = x__4221__auto__;
return goog.typeOf(G__590);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._swap_BANG_[(function (){var G__592 = x__4221__auto__;
return goog.typeOf(G__592);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._swap_BANG_[(function (){var G__594 = x__4221__auto__;
return goog.typeOf(G__594);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._swap_BANG_[(function (){var G__596 = x__4221__auto__;
return goog.typeOf(G__596);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


/**
 * Protocol for adding volatile functionality.
 */
cljs.core.IVolatile = (function (){var obj598 = {};
return obj598;
})();

/**
 * Sets the value of volatile o to new-value without regard for the
 * current value. Returns new-value.
 */
cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__3949__auto__ = o;
if(and__3949__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3949__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4221__auto__ = (((o == null))?null:o);
return (function (){var or__3957__auto__ = (cljs.core._vreset_BANG_[(function (){var G__602 = x__4221__auto__;
return goog.typeOf(G__602);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for iterating over a collection.
 */
cljs.core.IIterable = (function (){var obj604 = {};
return obj604;
})();

/**
 * Returns an iterator for coll.
 */
cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__3949__auto__ = coll;
if(and__3949__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3949__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4221__auto__ = (((coll == null))?null:coll);
return (function (){var or__3957__auto__ = (cljs.core._iterator[(function (){var G__608 = x__4221__auto__;
return goog.typeOf(G__608);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._iterator["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__611 = (4294967295);
var G__612 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__611,G__612) : Math.imul.call(null,G__611,G__612));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__615 = a;
var G__616 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__615,G__616) : Math.imul.call(null,G__615,G__616));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__617 = (i + (2));
var G__618 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__617;
h1 = G__618;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj620 = {};
return obj620;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__621 = (i + (1));
var G__622 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__621;
hash = G__622;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj626 = {};
return obj626;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__629 = o;
if(G__629){
var bit__4248__auto__ = (G__629.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4248__auto__) || (G__629.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__630 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__630) : Math.floor.call(null,G__630));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3949__auto__ = cljs.core.not(a.ns);
if(and__3949__auto__){
return b.ns;
} else {
return and__3949__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__637 = a.ns;
var G__638 = b.ns;
return goog.array.defaultCompare(G__637,G__638);
})();
if(((0) === nsc)){
var G__639 = a.name;
var G__640 = b.name;
return goog.array.defaultCompare(G__639,G__640);
} else {
return nsc;
}
}
} else {
var G__641 = a.name;
var G__642 = b.name;
return goog.array.defaultCompare(G__641,G__642);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4049__auto__ = self__._hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__644 = null;
var G__644__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__644__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__644 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__644__2.call(this,self__,coll);
case 3:
return G__644__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__644.cljs$core$IFn$_invoke$arity$2 = G__644__2;
G__644.cljs$core$IFn$_invoke$arity$3 = G__644__3;
return G__644;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args643){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args643)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__692 = null;
var G__692__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__692__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__692__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__692__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__692__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__692__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__692__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__692__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__692__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__692__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__692__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__692__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__692__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__692__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__692__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__692__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__692__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__692__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__692__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__692__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__692__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__692__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__648 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__649 = a;
var G__650 = b;
var G__651 = c;
var G__652 = d;
var G__653 = e;
var G__654 = f;
var G__655 = g;
var G__656 = h;
var G__657 = i;
var G__658 = j;
var G__659 = k;
var G__660 = l;
var G__661 = m;
var G__662 = n;
var G__663 = o;
var G__664 = p;
var G__665 = q;
var G__666 = r;
var G__667 = s;
var G__668 = t;
var G__669 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__648,G__649,G__650,G__651,G__652,G__653,G__654,G__655,G__656,G__657,G__658,G__659,G__660,G__661,G__662,G__663,G__664,G__665,G__666,G__667,G__668,G__669) : cljs.core.apply.call(null,G__648,G__649,G__650,G__651,G__652,G__653,G__654,G__655,G__656,G__657,G__658,G__659,G__660,G__661,G__662,G__663,G__664,G__665,G__666,G__667,G__668,G__669));
});
G__692 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__692__1.call(this,self__);
case 2:
return G__692__2.call(this,self__,a);
case 3:
return G__692__3.call(this,self__,a,b);
case 4:
return G__692__4.call(this,self__,a,b,c);
case 5:
return G__692__5.call(this,self__,a,b,c,d);
case 6:
return G__692__6.call(this,self__,a,b,c,d,e);
case 7:
return G__692__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__692__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__692__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__692__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__692__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__692__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__692__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__692__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__692__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__692__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__692__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__692__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__692__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__692__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__692__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__692__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__692.cljs$core$IFn$_invoke$arity$1 = G__692__1;
G__692.cljs$core$IFn$_invoke$arity$2 = G__692__2;
G__692.cljs$core$IFn$_invoke$arity$3 = G__692__3;
G__692.cljs$core$IFn$_invoke$arity$4 = G__692__4;
G__692.cljs$core$IFn$_invoke$arity$5 = G__692__5;
G__692.cljs$core$IFn$_invoke$arity$6 = G__692__6;
G__692.cljs$core$IFn$_invoke$arity$7 = G__692__7;
G__692.cljs$core$IFn$_invoke$arity$8 = G__692__8;
G__692.cljs$core$IFn$_invoke$arity$9 = G__692__9;
G__692.cljs$core$IFn$_invoke$arity$10 = G__692__10;
G__692.cljs$core$IFn$_invoke$arity$11 = G__692__11;
G__692.cljs$core$IFn$_invoke$arity$12 = G__692__12;
G__692.cljs$core$IFn$_invoke$arity$13 = G__692__13;
G__692.cljs$core$IFn$_invoke$arity$14 = G__692__14;
G__692.cljs$core$IFn$_invoke$arity$15 = G__692__15;
G__692.cljs$core$IFn$_invoke$arity$16 = G__692__16;
G__692.cljs$core$IFn$_invoke$arity$17 = G__692__17;
G__692.cljs$core$IFn$_invoke$arity$18 = G__692__18;
G__692.cljs$core$IFn$_invoke$arity$19 = G__692__19;
G__692.cljs$core$IFn$_invoke$arity$20 = G__692__20;
G__692.cljs$core$IFn$_invoke$arity$21 = G__692__21;
G__692.cljs$core$IFn$_invoke$arity$22 = G__692__22;
return G__692;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args647){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args647)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__670 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__671 = a;
var G__672 = b;
var G__673 = c;
var G__674 = d;
var G__675 = e;
var G__676 = f;
var G__677 = g;
var G__678 = h;
var G__679 = i;
var G__680 = j;
var G__681 = k;
var G__682 = l;
var G__683 = m;
var G__684 = n;
var G__685 = o;
var G__686 = p;
var G__687 = q;
var G__688 = r;
var G__689 = s;
var G__690 = t;
var G__691 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__670,G__671,G__672,G__673,G__674,G__675,G__676,G__677,G__678,G__679,G__680,G__681,G__682,G__683,G__684,G__685,G__686,G__687,G__688,G__689,G__690,G__691) : cljs.core.apply.call(null,G__670,G__671,G__672,G__673,G__674,G__675,G__676,G__677,G__678,G__679,G__680,G__681,G__682,G__683,G__684,G__685,G__686,G__687,G__688,G__689,G__690,G__691));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__694 = x;
if(G__694){
var bit__4251__auto__ = null;
if(cljs.core.truth_((function (){var or__3957__auto__ = bit__4251__auto__;
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return G__694.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__694.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__694);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__694);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__696 = value;
if(G__696){
var bit__4251__auto__ = (G__696.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4251__auto__) || (G__696.cljs$core$ICloneable$)){
return true;
} else {
if((!G__696.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__696);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__696);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__698 = coll;
if(G__698){
var bit__4248__auto__ = (G__698.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4248__auto__) || (G__698.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__700 = coll;
if(G__700){
var bit__4248__auto__ = (G__700.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4248__auto__) || (G__700.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__702 = coll;
if(G__702){
var bit__4248__auto__ = (G__702.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4248__auto__) || (G__702.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__704 = coll;
if(G__704){
var bit__4248__auto__ = (G__704.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4248__auto__) || (G__704.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__709__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__710 = y;
var G__711 = cljs.core.first(more);
var G__712 = cljs.core.next(more);
x = G__710;
y = G__711;
more = G__712;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__709 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__713__i = 0, G__713__a = new Array(arguments.length -  2);
while (G__713__i < G__713__a.length) {G__713__a[G__713__i] = arguments[G__713__i + 2]; ++G__713__i;}
  more = new cljs.core.IndexedSeq(G__713__a,0);
} 
return G__709__delegate.call(this,x,y,more);};
G__709.cljs$lang$maxFixedArity = 2;
G__709.cljs$lang$applyTo = (function (arglist__714){
var x = cljs.core.first(arglist__714);
arglist__714 = cljs.core.next(arglist__714);
var y = cljs.core.first(arglist__714);
var more = cljs.core.rest(arglist__714);
return G__709__delegate(x,y,more);
});
G__709.cljs$core$IFn$_invoke$arity$variadic = G__709__delegate;
return G__709;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__715 = null;
if (arguments.length > 2) {
var G__716__i = 0, G__716__a = new Array(arguments.length -  2);
while (G__716__i < G__716__a.length) {G__716__a[G__716__i] = arguments[G__716__i + 2]; ++G__716__i;}
G__715 = new cljs.core.IndexedSeq(G__716__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__715);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__717 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__717) : cljs.core.es6_iterator_seq.call(null,G__717));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__718 = (n + (1));
var G__719 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__720 = cljs.core.next(coll__$1);
n = G__718;
hash_code = G__719;
coll__$1 = G__720;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__721 = (n + (1));
var G__722 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__723 = cljs.core.next(coll__$1);
n = G__721;
hash_code = G__722;
coll__$1 = G__723;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IComparable$ = true;

Date.prototype.cljs$core$IComparable$_compare$arity$2 = (function (this$,other){
var this$__$1 = this;
var G__724 = this$__$1.valueOf();
var G__725 = other.valueOf();
return goog.array.defaultCompare(G__724,G__725);
});

Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.valueOf() === other.valueOf()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__726 = o;
return goog.getUid(G__726);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__728 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__728) : cljs.core.deref.call(null,G__728));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__735 = val;
var G__736 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__735,G__736) : f.call(null,G__735,G__736));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__741 = nval;
var G__742 = (n + (1));
val = G__741;
n = G__742;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__737 = val__$1;
var G__738 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__737,G__738) : f.call(null,G__737,G__738));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__743 = nval;
var G__744 = (n + (1));
val__$1 = G__743;
n = G__744;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__739 = val__$1;
var G__740 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__739,G__740) : f.call(null,G__739,G__740));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__745 = nval;
var G__746 = (n + (1));
val__$1 = G__745;
n = G__746;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__753 = val;
var G__754 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__753,G__754) : f.call(null,G__753,G__754));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__759 = nval;
var G__760 = (n + (1));
val = G__759;
n = G__760;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__755 = val__$1;
var G__756 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__755,G__756) : f.call(null,G__755,G__756));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__761 = nval;
var G__762 = (n + (1));
val__$1 = G__761;
n = G__762;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__757 = val__$1;
var G__758 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__757,G__758) : f.call(null,G__757,G__758));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__763 = nval;
var G__764 = (n + (1));
val__$1 = G__763;
n = G__764;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__766 = x;
if(G__766){
var bit__4251__auto__ = (G__766.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4251__auto__) || (G__766.cljs$core$ICounted$)){
return true;
} else {
if((!G__766.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__766);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__766);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__768 = x;
if(G__768){
var bit__4251__auto__ = (G__768.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4251__auto__) || (G__768.cljs$core$IIndexed$)){
return true;
} else {
if((!G__768.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__768);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__768);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__769 = coll__$1;
var G__770 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__769,G__770) : cljs.core.equiv_sequential.call(null,G__769,G__770));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__771 = o;
var G__772 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__771,G__772) : cljs.core.cons.call(null,G__771,G__772));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__775 = coll__$1;
var G__776 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__775,G__776) : cljs.core.equiv_sequential.call(null,G__775,G__776));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__777 = cljs.core.List.EMPTY;
var G__778 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__777,G__778) : cljs.core.with_meta.call(null,G__777,G__778));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__779 = f;
var G__780 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__779,G__780) : cljs.core.seq_reduce.call(null,G__779,G__780));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__781 = f;
var G__782 = start;
var G__783 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__781,G__782,G__783) : cljs.core.seq_reduce.call(null,G__781,G__782,G__783));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__784 = o;
var G__785 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__784,G__785) : cljs.core.cons.call(null,G__784,G__785));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__786 = sn;
s = G__786;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__791__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__792 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__793 = cljs.core.first(xs);
var G__794 = cljs.core.next(xs);
coll = G__792;
x = G__793;
xs = G__794;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__791 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__795__i = 0, G__795__a = new Array(arguments.length -  2);
while (G__795__i < G__795__a.length) {G__795__a[G__795__i] = arguments[G__795__i + 2]; ++G__795__i;}
  xs = new cljs.core.IndexedSeq(G__795__a,0);
} 
return G__791__delegate.call(this,coll,x,xs);};
G__791.cljs$lang$maxFixedArity = 2;
G__791.cljs$lang$applyTo = (function (arglist__796){
var coll = cljs.core.first(arglist__796);
arglist__796 = cljs.core.next(arglist__796);
var x = cljs.core.first(arglist__796);
var xs = cljs.core.rest(arglist__796);
return G__791__delegate(coll,x,xs);
});
G__791.cljs$core$IFn$_invoke$arity$variadic = G__791__delegate;
return G__791;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__797 = null;
if (arguments.length > 2) {
var G__798__i = 0, G__798__a = new Array(arguments.length -  2);
while (G__798__i < G__798__a.length) {G__798__a[G__798__i] = arguments[G__798__i + 2]; ++G__798__i;}
G__797 = new cljs.core.IndexedSeq(G__798__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__797);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__799 = cljs.core.next(s);
var G__800 = (acc + (1));
s = G__799;
acc = G__800;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__802 = coll;
if(G__802){
var bit__4248__auto__ = (G__802.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4248__auto__) || (G__802.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__803 = cljs.core.next(coll);
var G__804 = (n - (1));
coll = G__803;
n = G__804;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__805 = cljs.core.next(coll);
var G__806 = (n - (1));
var G__807 = not_found;
coll = G__805;
n = G__806;
not_found = G__807;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__812 = coll;
if(G__812){
var bit__4248__auto__ = (G__812.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4248__auto__) || (G__812.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__813 = coll;
if(G__813){
var bit__4251__auto__ = (G__813.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4251__auto__) || (G__813.cljs$core$ISeq$)){
return true;
} else {
if((!G__813.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__813);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__813);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__814 = coll;
if(G__814){
var bit__4248__auto__ = (G__814.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4248__auto__) || (G__814.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__815 = coll;
if(G__815){
var bit__4251__auto__ = (G__815.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4251__auto__) || (G__815.cljs$core$ISeq$)){
return true;
} else {
if((!G__815.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__815);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__815);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__816 = (n__$1 - (1));
var G__817 = cljs.core.rest(xs);
n__$1 = G__816;
xs = G__817;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__820 = o;
if(G__820){
var bit__4248__auto__ = (G__820.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4248__auto__) || (G__820.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__821 = o;
if(G__821){
var bit__4248__auto__ = (G__821.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4248__auto__) || (G__821.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__825__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__826 = ret;
var G__827 = cljs.core.first(kvs);
var G__828 = cljs.core.second(kvs);
var G__829 = cljs.core.nnext(kvs);
coll = G__826;
k = G__827;
v = G__828;
kvs = G__829;
continue;
} else {
return ret;
}
break;
}
};
var G__825 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__830__i = 0, G__830__a = new Array(arguments.length -  3);
while (G__830__i < G__830__a.length) {G__830__a[G__830__i] = arguments[G__830__i + 3]; ++G__830__i;}
  kvs = new cljs.core.IndexedSeq(G__830__a,0);
} 
return G__825__delegate.call(this,coll,k,v,kvs);};
G__825.cljs$lang$maxFixedArity = 3;
G__825.cljs$lang$applyTo = (function (arglist__831){
var coll = cljs.core.first(arglist__831);
arglist__831 = cljs.core.next(arglist__831);
var k = cljs.core.first(arglist__831);
arglist__831 = cljs.core.next(arglist__831);
var v = cljs.core.first(arglist__831);
var kvs = cljs.core.rest(arglist__831);
return G__825__delegate(coll,k,v,kvs);
});
G__825.cljs$core$IFn$_invoke$arity$variadic = G__825__delegate;
return G__825;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__832 = null;
if (arguments.length > 3) {
var G__833__i = 0, G__833__a = new Array(arguments.length -  3);
while (G__833__i < G__833__a.length) {G__833__a[G__833__i] = arguments[G__833__i + 3]; ++G__833__i;}
G__832 = new cljs.core.IndexedSeq(G__833__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__836__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__837 = ret;
var G__838 = cljs.core.first(ks);
var G__839 = cljs.core.next(ks);
coll = G__837;
k = G__838;
ks = G__839;
continue;
} else {
return ret;
}
}
break;
}
};
var G__836 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__840__i = 0, G__840__a = new Array(arguments.length -  2);
while (G__840__i < G__840__a.length) {G__840__a[G__840__i] = arguments[G__840__i + 2]; ++G__840__i;}
  ks = new cljs.core.IndexedSeq(G__840__a,0);
} 
return G__836__delegate.call(this,coll,k,ks);};
G__836.cljs$lang$maxFixedArity = 2;
G__836.cljs$lang$applyTo = (function (arglist__841){
var coll = cljs.core.first(arglist__841);
arglist__841 = cljs.core.next(arglist__841);
var k = cljs.core.first(arglist__841);
var ks = cljs.core.rest(arglist__841);
return G__836__delegate(coll,k,ks);
});
G__836.cljs$core$IFn$_invoke$arity$variadic = G__836__delegate;
return G__836;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__842 = null;
if (arguments.length > 2) {
var G__843__i = 0, G__843__a = new Array(arguments.length -  2);
while (G__843__i < G__843__a.length) {G__843__a[G__843__i] = arguments[G__843__i + 2]; ++G__843__i;}
G__842 = new cljs.core.IndexedSeq(G__843__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__842);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__3957__auto__ = (function (){var G__848 = f;
return goog.isFunction(G__848);
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var G__849 = f;
if(G__849){
var bit__4251__auto__ = null;
if(cljs.core.truth_((function (){var or__3957__auto____$1 = bit__4251__auto__;
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
return G__849.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__849.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__849);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__849);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__1315 = null;
var G__1315__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__1315__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__851 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__851) : self__.afn.call(null,G__851));
});
var G__1315__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__852 = a;
var G__853 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__852,G__853) : self__.afn.call(null,G__852,G__853));
});
var G__1315__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__854 = a;
var G__855 = b;
var G__856 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__854,G__855,G__856) : self__.afn.call(null,G__854,G__855,G__856));
});
var G__1315__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__857 = a;
var G__858 = b;
var G__859 = c;
var G__860 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__857,G__858,G__859,G__860) : self__.afn.call(null,G__857,G__858,G__859,G__860));
});
var G__1315__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__861 = a;
var G__862 = b;
var G__863 = c;
var G__864 = d;
var G__865 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__861,G__862,G__863,G__864,G__865) : self__.afn.call(null,G__861,G__862,G__863,G__864,G__865));
});
var G__1315__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__866 = a;
var G__867 = b;
var G__868 = c;
var G__869 = d;
var G__870 = e;
var G__871 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__866,G__867,G__868,G__869,G__870,G__871) : self__.afn.call(null,G__866,G__867,G__868,G__869,G__870,G__871));
});
var G__1315__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__872 = a;
var G__873 = b;
var G__874 = c;
var G__875 = d;
var G__876 = e;
var G__877 = f;
var G__878 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__872,G__873,G__874,G__875,G__876,G__877,G__878) : self__.afn.call(null,G__872,G__873,G__874,G__875,G__876,G__877,G__878));
});
var G__1315__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__879 = a;
var G__880 = b;
var G__881 = c;
var G__882 = d;
var G__883 = e;
var G__884 = f;
var G__885 = g;
var G__886 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__879,G__880,G__881,G__882,G__883,G__884,G__885,G__886) : self__.afn.call(null,G__879,G__880,G__881,G__882,G__883,G__884,G__885,G__886));
});
var G__1315__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__887 = a;
var G__888 = b;
var G__889 = c;
var G__890 = d;
var G__891 = e;
var G__892 = f;
var G__893 = g;
var G__894 = h;
var G__895 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__887,G__888,G__889,G__890,G__891,G__892,G__893,G__894,G__895) : self__.afn.call(null,G__887,G__888,G__889,G__890,G__891,G__892,G__893,G__894,G__895));
});
var G__1315__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__896 = a;
var G__897 = b;
var G__898 = c;
var G__899 = d;
var G__900 = e;
var G__901 = f;
var G__902 = g;
var G__903 = h;
var G__904 = i;
var G__905 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__896,G__897,G__898,G__899,G__900,G__901,G__902,G__903,G__904,G__905) : self__.afn.call(null,G__896,G__897,G__898,G__899,G__900,G__901,G__902,G__903,G__904,G__905));
});
var G__1315__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__906 = a;
var G__907 = b;
var G__908 = c;
var G__909 = d;
var G__910 = e;
var G__911 = f;
var G__912 = g;
var G__913 = h;
var G__914 = i;
var G__915 = j;
var G__916 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__906,G__907,G__908,G__909,G__910,G__911,G__912,G__913,G__914,G__915,G__916) : self__.afn.call(null,G__906,G__907,G__908,G__909,G__910,G__911,G__912,G__913,G__914,G__915,G__916));
});
var G__1315__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__917 = a;
var G__918 = b;
var G__919 = c;
var G__920 = d;
var G__921 = e;
var G__922 = f;
var G__923 = g;
var G__924 = h;
var G__925 = i;
var G__926 = j;
var G__927 = k;
var G__928 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__917,G__918,G__919,G__920,G__921,G__922,G__923,G__924,G__925,G__926,G__927,G__928) : self__.afn.call(null,G__917,G__918,G__919,G__920,G__921,G__922,G__923,G__924,G__925,G__926,G__927,G__928));
});
var G__1315__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__929 = a;
var G__930 = b;
var G__931 = c;
var G__932 = d;
var G__933 = e;
var G__934 = f;
var G__935 = g;
var G__936 = h;
var G__937 = i;
var G__938 = j;
var G__939 = k;
var G__940 = l;
var G__941 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__929,G__930,G__931,G__932,G__933,G__934,G__935,G__936,G__937,G__938,G__939,G__940,G__941) : self__.afn.call(null,G__929,G__930,G__931,G__932,G__933,G__934,G__935,G__936,G__937,G__938,G__939,G__940,G__941));
});
var G__1315__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__942 = a;
var G__943 = b;
var G__944 = c;
var G__945 = d;
var G__946 = e;
var G__947 = f;
var G__948 = g;
var G__949 = h;
var G__950 = i;
var G__951 = j;
var G__952 = k;
var G__953 = l;
var G__954 = m;
var G__955 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__942,G__943,G__944,G__945,G__946,G__947,G__948,G__949,G__950,G__951,G__952,G__953,G__954,G__955) : self__.afn.call(null,G__942,G__943,G__944,G__945,G__946,G__947,G__948,G__949,G__950,G__951,G__952,G__953,G__954,G__955));
});
var G__1315__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__956 = a;
var G__957 = b;
var G__958 = c;
var G__959 = d;
var G__960 = e;
var G__961 = f;
var G__962 = g;
var G__963 = h;
var G__964 = i;
var G__965 = j;
var G__966 = k;
var G__967 = l;
var G__968 = m;
var G__969 = n;
var G__970 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__956,G__957,G__958,G__959,G__960,G__961,G__962,G__963,G__964,G__965,G__966,G__967,G__968,G__969,G__970) : self__.afn.call(null,G__956,G__957,G__958,G__959,G__960,G__961,G__962,G__963,G__964,G__965,G__966,G__967,G__968,G__969,G__970));
});
var G__1315__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__971 = a;
var G__972 = b;
var G__973 = c;
var G__974 = d;
var G__975 = e;
var G__976 = f;
var G__977 = g;
var G__978 = h;
var G__979 = i;
var G__980 = j;
var G__981 = k;
var G__982 = l;
var G__983 = m;
var G__984 = n;
var G__985 = o;
var G__986 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__971,G__972,G__973,G__974,G__975,G__976,G__977,G__978,G__979,G__980,G__981,G__982,G__983,G__984,G__985,G__986) : self__.afn.call(null,G__971,G__972,G__973,G__974,G__975,G__976,G__977,G__978,G__979,G__980,G__981,G__982,G__983,G__984,G__985,G__986));
});
var G__1315__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__987 = a;
var G__988 = b;
var G__989 = c;
var G__990 = d;
var G__991 = e;
var G__992 = f;
var G__993 = g;
var G__994 = h;
var G__995 = i;
var G__996 = j;
var G__997 = k;
var G__998 = l;
var G__999 = m;
var G__1000 = n;
var G__1001 = o;
var G__1002 = p;
var G__1003 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__987,G__988,G__989,G__990,G__991,G__992,G__993,G__994,G__995,G__996,G__997,G__998,G__999,G__1000,G__1001,G__1002,G__1003) : self__.afn.call(null,G__987,G__988,G__989,G__990,G__991,G__992,G__993,G__994,G__995,G__996,G__997,G__998,G__999,G__1000,G__1001,G__1002,G__1003));
});
var G__1315__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1004 = a;
var G__1005 = b;
var G__1006 = c;
var G__1007 = d;
var G__1008 = e;
var G__1009 = f;
var G__1010 = g;
var G__1011 = h;
var G__1012 = i;
var G__1013 = j;
var G__1014 = k;
var G__1015 = l;
var G__1016 = m;
var G__1017 = n;
var G__1018 = o;
var G__1019 = p;
var G__1020 = q;
var G__1021 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__1004,G__1005,G__1006,G__1007,G__1008,G__1009,G__1010,G__1011,G__1012,G__1013,G__1014,G__1015,G__1016,G__1017,G__1018,G__1019,G__1020,G__1021) : self__.afn.call(null,G__1004,G__1005,G__1006,G__1007,G__1008,G__1009,G__1010,G__1011,G__1012,G__1013,G__1014,G__1015,G__1016,G__1017,G__1018,G__1019,G__1020,G__1021));
});
var G__1315__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1022 = a;
var G__1023 = b;
var G__1024 = c;
var G__1025 = d;
var G__1026 = e;
var G__1027 = f;
var G__1028 = g;
var G__1029 = h;
var G__1030 = i;
var G__1031 = j;
var G__1032 = k;
var G__1033 = l;
var G__1034 = m;
var G__1035 = n;
var G__1036 = o;
var G__1037 = p;
var G__1038 = q;
var G__1039 = r;
var G__1040 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__1022,G__1023,G__1024,G__1025,G__1026,G__1027,G__1028,G__1029,G__1030,G__1031,G__1032,G__1033,G__1034,G__1035,G__1036,G__1037,G__1038,G__1039,G__1040) : self__.afn.call(null,G__1022,G__1023,G__1024,G__1025,G__1026,G__1027,G__1028,G__1029,G__1030,G__1031,G__1032,G__1033,G__1034,G__1035,G__1036,G__1037,G__1038,G__1039,G__1040));
});
var G__1315__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1041 = a;
var G__1042 = b;
var G__1043 = c;
var G__1044 = d;
var G__1045 = e;
var G__1046 = f;
var G__1047 = g;
var G__1048 = h;
var G__1049 = i;
var G__1050 = j;
var G__1051 = k;
var G__1052 = l;
var G__1053 = m;
var G__1054 = n;
var G__1055 = o;
var G__1056 = p;
var G__1057 = q;
var G__1058 = r;
var G__1059 = s;
var G__1060 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__1041,G__1042,G__1043,G__1044,G__1045,G__1046,G__1047,G__1048,G__1049,G__1050,G__1051,G__1052,G__1053,G__1054,G__1055,G__1056,G__1057,G__1058,G__1059,G__1060) : self__.afn.call(null,G__1041,G__1042,G__1043,G__1044,G__1045,G__1046,G__1047,G__1048,G__1049,G__1050,G__1051,G__1052,G__1053,G__1054,G__1055,G__1056,G__1057,G__1058,G__1059,G__1060));
});
var G__1315__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__1061 = self__.afn;
var G__1062 = a;
var G__1063 = b;
var G__1064 = c;
var G__1065 = d;
var G__1066 = e;
var G__1067 = f;
var G__1068 = g;
var G__1069 = h;
var G__1070 = i;
var G__1071 = j;
var G__1072 = k;
var G__1073 = l;
var G__1074 = m;
var G__1075 = n;
var G__1076 = o;
var G__1077 = p;
var G__1078 = q;
var G__1079 = r;
var G__1080 = s;
var G__1081 = t;
var G__1082 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__1061,G__1062,G__1063,G__1064,G__1065,G__1066,G__1067,G__1068,G__1069,G__1070,G__1071,G__1072,G__1073,G__1074,G__1075,G__1076,G__1077,G__1078,G__1079,G__1080,G__1081,G__1082) : cljs.core.apply.call(null,G__1061,G__1062,G__1063,G__1064,G__1065,G__1066,G__1067,G__1068,G__1069,G__1070,G__1071,G__1072,G__1073,G__1074,G__1075,G__1076,G__1077,G__1078,G__1079,G__1080,G__1081,G__1082));
});
G__1315 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__1315__1.call(this,self__);
case 2:
return G__1315__2.call(this,self__,a);
case 3:
return G__1315__3.call(this,self__,a,b);
case 4:
return G__1315__4.call(this,self__,a,b,c);
case 5:
return G__1315__5.call(this,self__,a,b,c,d);
case 6:
return G__1315__6.call(this,self__,a,b,c,d,e);
case 7:
return G__1315__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__1315__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__1315__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__1315__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__1315__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__1315__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__1315__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__1315__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__1315__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__1315__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__1315__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__1315__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__1315__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__1315__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__1315__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__1315__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__1315.cljs$core$IFn$_invoke$arity$1 = G__1315__1;
G__1315.cljs$core$IFn$_invoke$arity$2 = G__1315__2;
G__1315.cljs$core$IFn$_invoke$arity$3 = G__1315__3;
G__1315.cljs$core$IFn$_invoke$arity$4 = G__1315__4;
G__1315.cljs$core$IFn$_invoke$arity$5 = G__1315__5;
G__1315.cljs$core$IFn$_invoke$arity$6 = G__1315__6;
G__1315.cljs$core$IFn$_invoke$arity$7 = G__1315__7;
G__1315.cljs$core$IFn$_invoke$arity$8 = G__1315__8;
G__1315.cljs$core$IFn$_invoke$arity$9 = G__1315__9;
G__1315.cljs$core$IFn$_invoke$arity$10 = G__1315__10;
G__1315.cljs$core$IFn$_invoke$arity$11 = G__1315__11;
G__1315.cljs$core$IFn$_invoke$arity$12 = G__1315__12;
G__1315.cljs$core$IFn$_invoke$arity$13 = G__1315__13;
G__1315.cljs$core$IFn$_invoke$arity$14 = G__1315__14;
G__1315.cljs$core$IFn$_invoke$arity$15 = G__1315__15;
G__1315.cljs$core$IFn$_invoke$arity$16 = G__1315__16;
G__1315.cljs$core$IFn$_invoke$arity$17 = G__1315__17;
G__1315.cljs$core$IFn$_invoke$arity$18 = G__1315__18;
G__1315.cljs$core$IFn$_invoke$arity$19 = G__1315__19;
G__1315.cljs$core$IFn$_invoke$arity$20 = G__1315__20;
G__1315.cljs$core$IFn$_invoke$arity$21 = G__1315__21;
G__1315.cljs$core$IFn$_invoke$arity$22 = G__1315__22;
return G__1315;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args850){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args850)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__1083 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__1083) : self__.afn.call(null,G__1083));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__1084 = a;
var G__1085 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__1084,G__1085) : self__.afn.call(null,G__1084,G__1085));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__1086 = a;
var G__1087 = b;
var G__1088 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__1086,G__1087,G__1088) : self__.afn.call(null,G__1086,G__1087,G__1088));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__1089 = a;
var G__1090 = b;
var G__1091 = c;
var G__1092 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__1089,G__1090,G__1091,G__1092) : self__.afn.call(null,G__1089,G__1090,G__1091,G__1092));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__1093 = a;
var G__1094 = b;
var G__1095 = c;
var G__1096 = d;
var G__1097 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__1093,G__1094,G__1095,G__1096,G__1097) : self__.afn.call(null,G__1093,G__1094,G__1095,G__1096,G__1097));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__1098 = a;
var G__1099 = b;
var G__1100 = c;
var G__1101 = d;
var G__1102 = e;
var G__1103 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__1098,G__1099,G__1100,G__1101,G__1102,G__1103) : self__.afn.call(null,G__1098,G__1099,G__1100,G__1101,G__1102,G__1103));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__1104 = a;
var G__1105 = b;
var G__1106 = c;
var G__1107 = d;
var G__1108 = e;
var G__1109 = f;
var G__1110 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__1104,G__1105,G__1106,G__1107,G__1108,G__1109,G__1110) : self__.afn.call(null,G__1104,G__1105,G__1106,G__1107,G__1108,G__1109,G__1110));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__1111 = a;
var G__1112 = b;
var G__1113 = c;
var G__1114 = d;
var G__1115 = e;
var G__1116 = f;
var G__1117 = g;
var G__1118 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__1111,G__1112,G__1113,G__1114,G__1115,G__1116,G__1117,G__1118) : self__.afn.call(null,G__1111,G__1112,G__1113,G__1114,G__1115,G__1116,G__1117,G__1118));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__1119 = a;
var G__1120 = b;
var G__1121 = c;
var G__1122 = d;
var G__1123 = e;
var G__1124 = f;
var G__1125 = g;
var G__1126 = h;
var G__1127 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__1119,G__1120,G__1121,G__1122,G__1123,G__1124,G__1125,G__1126,G__1127) : self__.afn.call(null,G__1119,G__1120,G__1121,G__1122,G__1123,G__1124,G__1125,G__1126,G__1127));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__1128 = a;
var G__1129 = b;
var G__1130 = c;
var G__1131 = d;
var G__1132 = e;
var G__1133 = f;
var G__1134 = g;
var G__1135 = h;
var G__1136 = i;
var G__1137 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__1128,G__1129,G__1130,G__1131,G__1132,G__1133,G__1134,G__1135,G__1136,G__1137) : self__.afn.call(null,G__1128,G__1129,G__1130,G__1131,G__1132,G__1133,G__1134,G__1135,G__1136,G__1137));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__1138 = a;
var G__1139 = b;
var G__1140 = c;
var G__1141 = d;
var G__1142 = e;
var G__1143 = f;
var G__1144 = g;
var G__1145 = h;
var G__1146 = i;
var G__1147 = j;
var G__1148 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__1138,G__1139,G__1140,G__1141,G__1142,G__1143,G__1144,G__1145,G__1146,G__1147,G__1148) : self__.afn.call(null,G__1138,G__1139,G__1140,G__1141,G__1142,G__1143,G__1144,G__1145,G__1146,G__1147,G__1148));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__1149 = a;
var G__1150 = b;
var G__1151 = c;
var G__1152 = d;
var G__1153 = e;
var G__1154 = f;
var G__1155 = g;
var G__1156 = h;
var G__1157 = i;
var G__1158 = j;
var G__1159 = k;
var G__1160 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__1149,G__1150,G__1151,G__1152,G__1153,G__1154,G__1155,G__1156,G__1157,G__1158,G__1159,G__1160) : self__.afn.call(null,G__1149,G__1150,G__1151,G__1152,G__1153,G__1154,G__1155,G__1156,G__1157,G__1158,G__1159,G__1160));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__1161 = a;
var G__1162 = b;
var G__1163 = c;
var G__1164 = d;
var G__1165 = e;
var G__1166 = f;
var G__1167 = g;
var G__1168 = h;
var G__1169 = i;
var G__1170 = j;
var G__1171 = k;
var G__1172 = l;
var G__1173 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__1161,G__1162,G__1163,G__1164,G__1165,G__1166,G__1167,G__1168,G__1169,G__1170,G__1171,G__1172,G__1173) : self__.afn.call(null,G__1161,G__1162,G__1163,G__1164,G__1165,G__1166,G__1167,G__1168,G__1169,G__1170,G__1171,G__1172,G__1173));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__1174 = a;
var G__1175 = b;
var G__1176 = c;
var G__1177 = d;
var G__1178 = e;
var G__1179 = f;
var G__1180 = g;
var G__1181 = h;
var G__1182 = i;
var G__1183 = j;
var G__1184 = k;
var G__1185 = l;
var G__1186 = m;
var G__1187 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__1174,G__1175,G__1176,G__1177,G__1178,G__1179,G__1180,G__1181,G__1182,G__1183,G__1184,G__1185,G__1186,G__1187) : self__.afn.call(null,G__1174,G__1175,G__1176,G__1177,G__1178,G__1179,G__1180,G__1181,G__1182,G__1183,G__1184,G__1185,G__1186,G__1187));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__1188 = a;
var G__1189 = b;
var G__1190 = c;
var G__1191 = d;
var G__1192 = e;
var G__1193 = f;
var G__1194 = g;
var G__1195 = h;
var G__1196 = i;
var G__1197 = j;
var G__1198 = k;
var G__1199 = l;
var G__1200 = m;
var G__1201 = n;
var G__1202 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__1188,G__1189,G__1190,G__1191,G__1192,G__1193,G__1194,G__1195,G__1196,G__1197,G__1198,G__1199,G__1200,G__1201,G__1202) : self__.afn.call(null,G__1188,G__1189,G__1190,G__1191,G__1192,G__1193,G__1194,G__1195,G__1196,G__1197,G__1198,G__1199,G__1200,G__1201,G__1202));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__1203 = a;
var G__1204 = b;
var G__1205 = c;
var G__1206 = d;
var G__1207 = e;
var G__1208 = f;
var G__1209 = g;
var G__1210 = h;
var G__1211 = i;
var G__1212 = j;
var G__1213 = k;
var G__1214 = l;
var G__1215 = m;
var G__1216 = n;
var G__1217 = o;
var G__1218 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__1203,G__1204,G__1205,G__1206,G__1207,G__1208,G__1209,G__1210,G__1211,G__1212,G__1213,G__1214,G__1215,G__1216,G__1217,G__1218) : self__.afn.call(null,G__1203,G__1204,G__1205,G__1206,G__1207,G__1208,G__1209,G__1210,G__1211,G__1212,G__1213,G__1214,G__1215,G__1216,G__1217,G__1218));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__1219 = a;
var G__1220 = b;
var G__1221 = c;
var G__1222 = d;
var G__1223 = e;
var G__1224 = f;
var G__1225 = g;
var G__1226 = h;
var G__1227 = i;
var G__1228 = j;
var G__1229 = k;
var G__1230 = l;
var G__1231 = m;
var G__1232 = n;
var G__1233 = o;
var G__1234 = p;
var G__1235 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__1219,G__1220,G__1221,G__1222,G__1223,G__1224,G__1225,G__1226,G__1227,G__1228,G__1229,G__1230,G__1231,G__1232,G__1233,G__1234,G__1235) : self__.afn.call(null,G__1219,G__1220,G__1221,G__1222,G__1223,G__1224,G__1225,G__1226,G__1227,G__1228,G__1229,G__1230,G__1231,G__1232,G__1233,G__1234,G__1235));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__1236 = a;
var G__1237 = b;
var G__1238 = c;
var G__1239 = d;
var G__1240 = e;
var G__1241 = f;
var G__1242 = g;
var G__1243 = h;
var G__1244 = i;
var G__1245 = j;
var G__1246 = k;
var G__1247 = l;
var G__1248 = m;
var G__1249 = n;
var G__1250 = o;
var G__1251 = p;
var G__1252 = q;
var G__1253 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__1236,G__1237,G__1238,G__1239,G__1240,G__1241,G__1242,G__1243,G__1244,G__1245,G__1246,G__1247,G__1248,G__1249,G__1250,G__1251,G__1252,G__1253) : self__.afn.call(null,G__1236,G__1237,G__1238,G__1239,G__1240,G__1241,G__1242,G__1243,G__1244,G__1245,G__1246,G__1247,G__1248,G__1249,G__1250,G__1251,G__1252,G__1253));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__1254 = a;
var G__1255 = b;
var G__1256 = c;
var G__1257 = d;
var G__1258 = e;
var G__1259 = f;
var G__1260 = g;
var G__1261 = h;
var G__1262 = i;
var G__1263 = j;
var G__1264 = k;
var G__1265 = l;
var G__1266 = m;
var G__1267 = n;
var G__1268 = o;
var G__1269 = p;
var G__1270 = q;
var G__1271 = r;
var G__1272 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__1254,G__1255,G__1256,G__1257,G__1258,G__1259,G__1260,G__1261,G__1262,G__1263,G__1264,G__1265,G__1266,G__1267,G__1268,G__1269,G__1270,G__1271,G__1272) : self__.afn.call(null,G__1254,G__1255,G__1256,G__1257,G__1258,G__1259,G__1260,G__1261,G__1262,G__1263,G__1264,G__1265,G__1266,G__1267,G__1268,G__1269,G__1270,G__1271,G__1272));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__1273 = a;
var G__1274 = b;
var G__1275 = c;
var G__1276 = d;
var G__1277 = e;
var G__1278 = f;
var G__1279 = g;
var G__1280 = h;
var G__1281 = i;
var G__1282 = j;
var G__1283 = k;
var G__1284 = l;
var G__1285 = m;
var G__1286 = n;
var G__1287 = o;
var G__1288 = p;
var G__1289 = q;
var G__1290 = r;
var G__1291 = s;
var G__1292 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__1273,G__1274,G__1275,G__1276,G__1277,G__1278,G__1279,G__1280,G__1281,G__1282,G__1283,G__1284,G__1285,G__1286,G__1287,G__1288,G__1289,G__1290,G__1291,G__1292) : self__.afn.call(null,G__1273,G__1274,G__1275,G__1276,G__1277,G__1278,G__1279,G__1280,G__1281,G__1282,G__1283,G__1284,G__1285,G__1286,G__1287,G__1288,G__1289,G__1290,G__1291,G__1292));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__1293 = self__.afn;
var G__1294 = a;
var G__1295 = b;
var G__1296 = c;
var G__1297 = d;
var G__1298 = e;
var G__1299 = f;
var G__1300 = g;
var G__1301 = h;
var G__1302 = i;
var G__1303 = j;
var G__1304 = k;
var G__1305 = l;
var G__1306 = m;
var G__1307 = n;
var G__1308 = o;
var G__1309 = p;
var G__1310 = q;
var G__1311 = r;
var G__1312 = s;
var G__1313 = t;
var G__1314 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__1293,G__1294,G__1295,G__1296,G__1297,G__1298,G__1299,G__1300,G__1301,G__1302,G__1303,G__1304,G__1305,G__1306,G__1307,G__1308,G__1309,G__1310,G__1311,G__1312,G__1313,G__1314) : cljs.core.apply.call(null,G__1293,G__1294,G__1295,G__1296,G__1297,G__1298,G__1299,G__1300,G__1301,G__1302,G__1303,G__1304,G__1305,G__1306,G__1307,G__1308,G__1309,G__1310,G__1311,G__1312,G__1313,G__1314));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__1319 = o;
if(G__1319){
var bit__4251__auto__ = (G__1319.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4251__auto__) || (G__1319.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__1319.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__1319);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__1319);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__3949__auto__ = !((o == null));
if(and__3949__auto__){
var G__1323 = o;
if(G__1323){
var bit__4251__auto__ = (G__1323.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4251__auto__) || (G__1323.cljs$core$IMeta$)){
return true;
} else {
if((!G__1323.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__1323);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__1323);
}
} else {
return and__3949__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__1326__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__1327 = ret;
var G__1328 = cljs.core.first(ks);
var G__1329 = cljs.core.next(ks);
coll = G__1327;
k = G__1328;
ks = G__1329;
continue;
} else {
return ret;
}
}
break;
}
};
var G__1326 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__1330__i = 0, G__1330__a = new Array(arguments.length -  2);
while (G__1330__i < G__1330__a.length) {G__1330__a[G__1330__i] = arguments[G__1330__i + 2]; ++G__1330__i;}
  ks = new cljs.core.IndexedSeq(G__1330__a,0);
} 
return G__1326__delegate.call(this,coll,k,ks);};
G__1326.cljs$lang$maxFixedArity = 2;
G__1326.cljs$lang$applyTo = (function (arglist__1331){
var coll = cljs.core.first(arglist__1331);
arglist__1331 = cljs.core.next(arglist__1331);
var k = cljs.core.first(arglist__1331);
var ks = cljs.core.rest(arglist__1331);
return G__1326__delegate(coll,k,ks);
});
G__1326.cljs$core$IFn$_invoke$arity$variadic = G__1326__delegate;
return G__1326;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__1332 = null;
if (arguments.length > 2) {
var G__1333__i = 0, G__1333__a = new Array(arguments.length -  2);
while (G__1333__i < G__1333__a.length) {G__1333__a[G__1333__i] = arguments[G__1333__i + 2]; ++G__1333__i;}
G__1332 = new cljs.core.IndexedSeq(G__1333__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__1332);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__1335 = x;
if(G__1335){
var bit__4251__auto__ = (G__1335.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4251__auto__) || (G__1335.cljs$core$ICollection$)){
return true;
} else {
if((!G__1335.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__1335);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__1335);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__1337 = x;
if(G__1337){
var bit__4251__auto__ = (G__1337.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4251__auto__) || (G__1337.cljs$core$ISet$)){
return true;
} else {
if((!G__1337.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__1337);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__1337);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__1339 = x;
if(G__1339){
var bit__4251__auto__ = (G__1339.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4251__auto__) || (G__1339.cljs$core$IAssociative$)){
return true;
} else {
if((!G__1339.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__1339);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__1339);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__1341 = x;
if(G__1341){
var bit__4251__auto__ = (G__1341.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4251__auto__) || (G__1341.cljs$core$ISequential$)){
return true;
} else {
if((!G__1341.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__1341);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__1341);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__1343 = x;
if(G__1343){
var bit__4251__auto__ = (G__1343.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4251__auto__) || (G__1343.cljs$core$ISorted$)){
return true;
} else {
if((!G__1343.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__1343);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__1343);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__1345 = x;
if(G__1345){
var bit__4251__auto__ = (G__1345.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4251__auto__) || (G__1345.cljs$core$IReduce$)){
return true;
} else {
if((!G__1345.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__1345);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__1345);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__1347 = x;
if(G__1347){
var bit__4251__auto__ = (G__1347.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4251__auto__) || (G__1347.cljs$core$IMap$)){
return true;
} else {
if((!G__1347.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__1347);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__1347);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__1349 = x;
if(G__1349){
var bit__4251__auto__ = (G__1349.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4251__auto__) || (G__1349.cljs$core$IVector$)){
return true;
} else {
if((!G__1349.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__1349);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__1349);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__1351 = x;
if(G__1351){
var bit__4248__auto__ = (G__1351.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4248__auto__) || (G__1351.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj1357 = {};
return obj1357;
});
var cljs$core$js_obj__1 = (function() { 
var G__1360__delegate = function (keyvals){
var G__1358 = goog.object.create;
var G__1359 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__1358,G__1359) : cljs.core.apply.call(null,G__1358,G__1359));
};
var G__1360 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__1361__i = 0, G__1361__a = new Array(arguments.length -  0);
while (G__1361__i < G__1361__a.length) {G__1361__a[G__1361__i] = arguments[G__1361__i + 0]; ++G__1361__i;}
  keyvals = new cljs.core.IndexedSeq(G__1361__a,0);
} 
return G__1360__delegate.call(this,keyvals);};
G__1360.cljs$lang$maxFixedArity = 0;
G__1360.cljs$lang$applyTo = (function (arglist__1362){
var keyvals = cljs.core.seq(arglist__1362);
return G__1360__delegate(keyvals);
});
G__1360.cljs$core$IFn$_invoke$arity$variadic = G__1360__delegate;
return G__1360;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__1363 = null;
if (arguments.length > 0) {
var G__1364__i = 0, G__1364__a = new Array(arguments.length -  0);
while (G__1364__i < G__1364__a.length) {G__1364__a[G__1364__i] = arguments[G__1364__i + 0]; ++G__1364__i;}
G__1363 = new cljs.core.IndexedSeq(G__1364__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__1363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__1367_1369 = obj;
var G__1368_1370 = ((function (G__1367_1369,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__1367_1369,keys))
;
goog.object.forEach(G__1367_1369,G__1368_1370);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__1371 = (i__$1 + (1));
var G__1372 = (j__$1 + (1));
var G__1373 = (len__$1 - (1));
i__$1 = G__1371;
j__$1 = G__1372;
len__$1 = G__1373;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__1374 = (i__$1 - (1));
var G__1375 = (j__$1 - (1));
var G__1376 = (len__$1 - (1));
i__$1 = G__1374;
j__$1 = G__1375;
len__$1 = G__1376;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj1378 = {};
return obj1378;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__1380 = s;
if(G__1380){
var bit__4251__auto__ = (G__1380.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4251__auto__) || (G__1380.cljs$core$ISeq$)){
return true;
} else {
if((!G__1380.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1380);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__1380);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__1382 = s;
if(G__1382){
var bit__4251__auto__ = (G__1382.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4251__auto__) || (G__1382.cljs$core$ISeqable$)){
return true;
} else {
if((!G__1382.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__1382);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__1382);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__3957__auto__ = cljs.core.fn_QMARK_(f);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var G__1386 = f;
if(G__1386){
var bit__4251__auto__ = (G__1386.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4251__auto__) || (G__1386.cljs$core$IFn$)){
return true;
} else {
if((!G__1386.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__1386);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__1386);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__1399 = n;
return isNaN(G__1399);
})())) && (!((n === Infinity))) && (((function (){var G__1400 = n;
return parseFloat(G__1400);
})() === (function (){var G__1401 = n;
var G__1402 = (10);
return parseInt(G__1401,G__1402);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__1403__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__1404 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__1405 = etc;
s = G__1404;
xs = G__1405;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__1403 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1406__i = 0, G__1406__a = new Array(arguments.length -  2);
while (G__1406__i < G__1406__a.length) {G__1406__a[G__1406__i] = arguments[G__1406__i + 2]; ++G__1406__i;}
  more = new cljs.core.IndexedSeq(G__1406__a,0);
} 
return G__1403__delegate.call(this,x,y,more);};
G__1403.cljs$lang$maxFixedArity = 2;
G__1403.cljs$lang$applyTo = (function (arglist__1407){
var x = cljs.core.first(arglist__1407);
arglist__1407 = cljs.core.next(arglist__1407);
var y = cljs.core.first(arglist__1407);
var more = cljs.core.rest(arglist__1407);
return G__1403__delegate(x,y,more);
});
G__1403.cljs$core$IFn$_invoke$arity$variadic = G__1403__delegate;
return G__1403;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__1408 = null;
if (arguments.length > 2) {
var G__1409__i = 0, G__1409__a = new Array(arguments.length -  2);
while (G__1409__i < G__1409__a.length) {G__1409__a[G__1409__i] = arguments[G__1409__i + 2]; ++G__1409__i;}
G__1408 = new cljs.core.IndexedSeq(G__1409__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__1413 = x;
if(G__1413){
var bit__4248__auto__ = (G__1413.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4248__auto__) || (G__1413.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__1414 = x;
var G__1415 = y;
return goog.array.defaultCompare(G__1414,G__1415);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__1420 = xs;
var G__1421 = ys;
var G__1422 = len;
var G__1423 = (n + (1));
xs = G__1420;
ys = G__1421;
len = G__1422;
n = G__1423;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__1428 = x;
var G__1429 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1428,G__1429) : f.call(null,G__1428,G__1429));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__1430 = y;
var G__1431 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1430,G__1431) : f.call(null,G__1430,G__1431));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__1437 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__1437) : cljs.core.to_array.call(null,G__1437));
})();
var G__1438_1440 = a;
var G__1439_1441 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__1438_1440,G__1439_1441);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__1447 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__1447) : keyfn.call(null,G__1447));
})(),(function (){var G__1448 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__1448) : keyfn.call(null,G__1448));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__1454 = f;
var G__1455 = cljs.core.first(s);
var G__1456 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__1454,G__1455,G__1456) : cljs.core.reduce.call(null,G__1454,G__1455,G__1456));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__1457 = val__$1;
var G__1458 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1457,G__1458) : f.call(null,G__1457,G__1458));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__1459 = nval;
var G__1460 = cljs.core.next(coll__$1);
val__$1 = G__1459;
coll__$1 = G__1460;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__1464 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__1464) : cljs.core.to_array.call(null,G__1464));
})();
var G__1465_1467 = a;
goog.array.shuffle(G__1465_1467);

var G__1466 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__1466) : cljs.core.vec.call(null,G__1466));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__1470 = coll;
if(G__1470){
var bit__4248__auto__ = (G__1470.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4248__auto__) || (G__1470.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__1471 = coll;
if(G__1471){
var bit__4248__auto__ = (G__1471.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4248__auto__) || (G__1471.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__1480 = null;
var G__1480__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__1480__1 = (function (x){
var G__1477 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__1477) : cf.call(null,G__1477));
});
var G__1480__2 = (function (x,y){
var G__1478 = x;
var G__1479 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__1478,G__1479) : f.call(null,G__1478,G__1479));
});
G__1480 = function(x,y){
switch(arguments.length){
case 0:
return G__1480__0.call(this);
case 1:
return G__1480__1.call(this,x);
case 2:
return G__1480__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__1480.cljs$core$IFn$_invoke$arity$0 = G__1480__0;
G__1480.cljs$core$IFn$_invoke$arity$1 = G__1480__1;
G__1480.cljs$core$IFn$_invoke$arity$2 = G__1480__2;
return G__1480;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__1487 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__1487) : xform.call(null,G__1487));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__1488 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__1488) : f__$1.call(null,G__1488));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__1489__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__1489 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1490__i = 0, G__1490__a = new Array(arguments.length -  2);
while (G__1490__i < G__1490__a.length) {G__1490__a[G__1490__i] = arguments[G__1490__i + 2]; ++G__1490__i;}
  more = new cljs.core.IndexedSeq(G__1490__a,0);
} 
return G__1489__delegate.call(this,x,y,more);};
G__1489.cljs$lang$maxFixedArity = 2;
G__1489.cljs$lang$applyTo = (function (arglist__1491){
var x = cljs.core.first(arglist__1491);
arglist__1491 = cljs.core.next(arglist__1491);
var y = cljs.core.first(arglist__1491);
var more = cljs.core.rest(arglist__1491);
return G__1489__delegate(x,y,more);
});
G__1489.cljs$core$IFn$_invoke$arity$variadic = G__1489__delegate;
return G__1489;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__1492 = null;
if (arguments.length > 2) {
var G__1493__i = 0, G__1493__a = new Array(arguments.length -  2);
while (G__1493__i < G__1493__a.length) {G__1493__a[G__1493__i] = arguments[G__1493__i + 2]; ++G__1493__i;}
G__1492 = new cljs.core.IndexedSeq(G__1493__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1492);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__1494__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__1494 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1495__i = 0, G__1495__a = new Array(arguments.length -  2);
while (G__1495__i < G__1495__a.length) {G__1495__a[G__1495__i] = arguments[G__1495__i + 2]; ++G__1495__i;}
  more = new cljs.core.IndexedSeq(G__1495__a,0);
} 
return G__1494__delegate.call(this,x,y,more);};
G__1494.cljs$lang$maxFixedArity = 2;
G__1494.cljs$lang$applyTo = (function (arglist__1496){
var x = cljs.core.first(arglist__1496);
arglist__1496 = cljs.core.next(arglist__1496);
var y = cljs.core.first(arglist__1496);
var more = cljs.core.rest(arglist__1496);
return G__1494__delegate(x,y,more);
});
G__1494.cljs$core$IFn$_invoke$arity$variadic = G__1494__delegate;
return G__1494;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__1497 = null;
if (arguments.length > 2) {
var G__1498__i = 0, G__1498__a = new Array(arguments.length -  2);
while (G__1498__i < G__1498__a.length) {G__1498__a[G__1498__i] = arguments[G__1498__i + 2]; ++G__1498__i;}
G__1497 = new cljs.core.IndexedSeq(G__1498__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__1499__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__1499 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1500__i = 0, G__1500__a = new Array(arguments.length -  2);
while (G__1500__i < G__1500__a.length) {G__1500__a[G__1500__i] = arguments[G__1500__i + 2]; ++G__1500__i;}
  more = new cljs.core.IndexedSeq(G__1500__a,0);
} 
return G__1499__delegate.call(this,x,y,more);};
G__1499.cljs$lang$maxFixedArity = 2;
G__1499.cljs$lang$applyTo = (function (arglist__1501){
var x = cljs.core.first(arglist__1501);
arglist__1501 = cljs.core.next(arglist__1501);
var y = cljs.core.first(arglist__1501);
var more = cljs.core.rest(arglist__1501);
return G__1499__delegate(x,y,more);
});
G__1499.cljs$core$IFn$_invoke$arity$variadic = G__1499__delegate;
return G__1499;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__1502 = null;
if (arguments.length > 2) {
var G__1503__i = 0, G__1503__a = new Array(arguments.length -  2);
while (G__1503__i < G__1503__a.length) {G__1503__a[G__1503__i] = arguments[G__1503__i + 2]; ++G__1503__i;}
G__1502 = new cljs.core.IndexedSeq(G__1503__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__1508__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__1508 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1509__i = 0, G__1509__a = new Array(arguments.length -  2);
while (G__1509__i < G__1509__a.length) {G__1509__a[G__1509__i] = arguments[G__1509__i + 2]; ++G__1509__i;}
  more = new cljs.core.IndexedSeq(G__1509__a,0);
} 
return G__1508__delegate.call(this,x,y,more);};
G__1508.cljs$lang$maxFixedArity = 2;
G__1508.cljs$lang$applyTo = (function (arglist__1510){
var x = cljs.core.first(arglist__1510);
arglist__1510 = cljs.core.next(arglist__1510);
var y = cljs.core.first(arglist__1510);
var more = cljs.core.rest(arglist__1510);
return G__1508__delegate(x,y,more);
});
G__1508.cljs$core$IFn$_invoke$arity$variadic = G__1508__delegate;
return G__1508;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__1511 = null;
if (arguments.length > 2) {
var G__1512__i = 0, G__1512__a = new Array(arguments.length -  2);
while (G__1512__i < G__1512__a.length) {G__1512__a[G__1512__i] = arguments[G__1512__i + 2]; ++G__1512__i;}
G__1511 = new cljs.core.IndexedSeq(G__1512__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1511);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__1513__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__1514 = y;
var G__1515 = cljs.core.first(more);
var G__1516 = cljs.core.next(more);
x = G__1514;
y = G__1515;
more = G__1516;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__1513 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1517__i = 0, G__1517__a = new Array(arguments.length -  2);
while (G__1517__i < G__1517__a.length) {G__1517__a[G__1517__i] = arguments[G__1517__i + 2]; ++G__1517__i;}
  more = new cljs.core.IndexedSeq(G__1517__a,0);
} 
return G__1513__delegate.call(this,x,y,more);};
G__1513.cljs$lang$maxFixedArity = 2;
G__1513.cljs$lang$applyTo = (function (arglist__1518){
var x = cljs.core.first(arglist__1518);
arglist__1518 = cljs.core.next(arglist__1518);
var y = cljs.core.first(arglist__1518);
var more = cljs.core.rest(arglist__1518);
return G__1513__delegate(x,y,more);
});
G__1513.cljs$core$IFn$_invoke$arity$variadic = G__1513__delegate;
return G__1513;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__1519 = null;
if (arguments.length > 2) {
var G__1520__i = 0, G__1520__a = new Array(arguments.length -  2);
while (G__1520__i < G__1520__a.length) {G__1520__a[G__1520__i] = arguments[G__1520__i + 2]; ++G__1520__i;}
G__1519 = new cljs.core.IndexedSeq(G__1520__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__1521__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__1522 = y;
var G__1523 = cljs.core.first(more);
var G__1524 = cljs.core.next(more);
x = G__1522;
y = G__1523;
more = G__1524;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__1521 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1525__i = 0, G__1525__a = new Array(arguments.length -  2);
while (G__1525__i < G__1525__a.length) {G__1525__a[G__1525__i] = arguments[G__1525__i + 2]; ++G__1525__i;}
  more = new cljs.core.IndexedSeq(G__1525__a,0);
} 
return G__1521__delegate.call(this,x,y,more);};
G__1521.cljs$lang$maxFixedArity = 2;
G__1521.cljs$lang$applyTo = (function (arglist__1526){
var x = cljs.core.first(arglist__1526);
arglist__1526 = cljs.core.next(arglist__1526);
var y = cljs.core.first(arglist__1526);
var more = cljs.core.rest(arglist__1526);
return G__1521__delegate(x,y,more);
});
G__1521.cljs$core$IFn$_invoke$arity$variadic = G__1521__delegate;
return G__1521;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__1527 = null;
if (arguments.length > 2) {
var G__1528__i = 0, G__1528__a = new Array(arguments.length -  2);
while (G__1528__i < G__1528__a.length) {G__1528__a[G__1528__i] = arguments[G__1528__i + 2]; ++G__1528__i;}
G__1527 = new cljs.core.IndexedSeq(G__1528__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__1529__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__1530 = y;
var G__1531 = cljs.core.first(more);
var G__1532 = cljs.core.next(more);
x = G__1530;
y = G__1531;
more = G__1532;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__1529 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1533__i = 0, G__1533__a = new Array(arguments.length -  2);
while (G__1533__i < G__1533__a.length) {G__1533__a[G__1533__i] = arguments[G__1533__i + 2]; ++G__1533__i;}
  more = new cljs.core.IndexedSeq(G__1533__a,0);
} 
return G__1529__delegate.call(this,x,y,more);};
G__1529.cljs$lang$maxFixedArity = 2;
G__1529.cljs$lang$applyTo = (function (arglist__1534){
var x = cljs.core.first(arglist__1534);
arglist__1534 = cljs.core.next(arglist__1534);
var y = cljs.core.first(arglist__1534);
var more = cljs.core.rest(arglist__1534);
return G__1529__delegate(x,y,more);
});
G__1529.cljs$core$IFn$_invoke$arity$variadic = G__1529__delegate;
return G__1529;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__1535 = null;
if (arguments.length > 2) {
var G__1536__i = 0, G__1536__a = new Array(arguments.length -  2);
while (G__1536__i < G__1536__a.length) {G__1536__a[G__1536__i] = arguments[G__1536__i + 2]; ++G__1536__i;}
G__1535 = new cljs.core.IndexedSeq(G__1536__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__1537__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__1538 = y;
var G__1539 = cljs.core.first(more);
var G__1540 = cljs.core.next(more);
x = G__1538;
y = G__1539;
more = G__1540;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__1537 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1541__i = 0, G__1541__a = new Array(arguments.length -  2);
while (G__1541__i < G__1541__a.length) {G__1541__a[G__1541__i] = arguments[G__1541__i + 2]; ++G__1541__i;}
  more = new cljs.core.IndexedSeq(G__1541__a,0);
} 
return G__1537__delegate.call(this,x,y,more);};
G__1537.cljs$lang$maxFixedArity = 2;
G__1537.cljs$lang$applyTo = (function (arglist__1542){
var x = cljs.core.first(arglist__1542);
arglist__1542 = cljs.core.next(arglist__1542);
var y = cljs.core.first(arglist__1542);
var more = cljs.core.rest(arglist__1542);
return G__1537__delegate(x,y,more);
});
G__1537.cljs$core$IFn$_invoke$arity$variadic = G__1537__delegate;
return G__1537;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__1543 = null;
if (arguments.length > 2) {
var G__1544__i = 0, G__1544__a = new Array(arguments.length -  2);
while (G__1544__i < G__1544__a.length) {G__1544__a[G__1544__i] = arguments[G__1544__i + 2]; ++G__1544__i;}
G__1543 = new cljs.core.IndexedSeq(G__1544__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__4025__auto__ = x;
var y__4026__auto__ = y;
return ((x__4025__auto__ > y__4026__auto__) ? x__4025__auto__ : y__4026__auto__);
});
var cljs$core$max__3 = (function() { 
var G__1545__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__4025__auto__ = x;
var y__4026__auto__ = y;
return ((x__4025__auto__ > y__4026__auto__) ? x__4025__auto__ : y__4026__auto__);
})(),more);
};
var G__1545 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1546__i = 0, G__1546__a = new Array(arguments.length -  2);
while (G__1546__i < G__1546__a.length) {G__1546__a[G__1546__i] = arguments[G__1546__i + 2]; ++G__1546__i;}
  more = new cljs.core.IndexedSeq(G__1546__a,0);
} 
return G__1545__delegate.call(this,x,y,more);};
G__1545.cljs$lang$maxFixedArity = 2;
G__1545.cljs$lang$applyTo = (function (arglist__1547){
var x = cljs.core.first(arglist__1547);
arglist__1547 = cljs.core.next(arglist__1547);
var y = cljs.core.first(arglist__1547);
var more = cljs.core.rest(arglist__1547);
return G__1545__delegate(x,y,more);
});
G__1545.cljs$core$IFn$_invoke$arity$variadic = G__1545__delegate;
return G__1545;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__1548 = null;
if (arguments.length > 2) {
var G__1549__i = 0, G__1549__a = new Array(arguments.length -  2);
while (G__1549__i < G__1549__a.length) {G__1549__a[G__1549__i] = arguments[G__1549__i + 2]; ++G__1549__i;}
G__1548 = new cljs.core.IndexedSeq(G__1549__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__4028__auto__ = x;
var y__4029__auto__ = y;
return ((x__4028__auto__ < y__4029__auto__) ? x__4028__auto__ : y__4029__auto__);
});
var cljs$core$min__3 = (function() { 
var G__1550__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__4028__auto__ = x;
var y__4029__auto__ = y;
return ((x__4028__auto__ < y__4029__auto__) ? x__4028__auto__ : y__4029__auto__);
})(),more);
};
var G__1550 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1551__i = 0, G__1551__a = new Array(arguments.length -  2);
while (G__1551__i < G__1551__a.length) {G__1551__a[G__1551__i] = arguments[G__1551__i + 2]; ++G__1551__i;}
  more = new cljs.core.IndexedSeq(G__1551__a,0);
} 
return G__1550__delegate.call(this,x,y,more);};
G__1550.cljs$lang$maxFixedArity = 2;
G__1550.cljs$lang$applyTo = (function (arglist__1552){
var x = cljs.core.first(arglist__1552);
arglist__1552 = cljs.core.next(arglist__1552);
var y = cljs.core.first(arglist__1552);
var more = cljs.core.rest(arglist__1552);
return G__1550__delegate(x,y,more);
});
G__1550.cljs$core$IFn$_invoke$arity$variadic = G__1550__delegate;
return G__1550;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__1553 = null;
if (arguments.length > 2) {
var G__1554__i = 0, G__1554__a = new Array(arguments.length -  2);
while (G__1554__i < G__1554__a.length) {G__1554__a[G__1554__i] = arguments[G__1554__i + 2]; ++G__1554__i;}
G__1553 = new cljs.core.IndexedSeq(G__1554__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__1555__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__1555 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1556__i = 0, G__1556__a = new Array(arguments.length -  2);
while (G__1556__i < G__1556__a.length) {G__1556__a[G__1556__i] = arguments[G__1556__i + 2]; ++G__1556__i;}
  more = new cljs.core.IndexedSeq(G__1556__a,0);
} 
return G__1555__delegate.call(this,x,y,more);};
G__1555.cljs$lang$maxFixedArity = 2;
G__1555.cljs$lang$applyTo = (function (arglist__1557){
var x = cljs.core.first(arglist__1557);
arglist__1557 = cljs.core.next(arglist__1557);
var y = cljs.core.first(arglist__1557);
var more = cljs.core.rest(arglist__1557);
return G__1555__delegate(x,y,more);
});
G__1555.cljs$core$IFn$_invoke$arity$variadic = G__1555__delegate;
return G__1555;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__1558 = null;
if (arguments.length > 2) {
var G__1559__i = 0, G__1559__a = new Array(arguments.length -  2);
while (G__1559__i < G__1559__a.length) {G__1559__a[G__1559__i] = arguments[G__1559__i + 2]; ++G__1559__i;}
G__1558 = new cljs.core.IndexedSeq(G__1559__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1558);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__1560__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__1560 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1561__i = 0, G__1561__a = new Array(arguments.length -  2);
while (G__1561__i < G__1561__a.length) {G__1561__a[G__1561__i] = arguments[G__1561__i + 2]; ++G__1561__i;}
  more = new cljs.core.IndexedSeq(G__1561__a,0);
} 
return G__1560__delegate.call(this,x,y,more);};
G__1560.cljs$lang$maxFixedArity = 2;
G__1560.cljs$lang$applyTo = (function (arglist__1562){
var x = cljs.core.first(arglist__1562);
arglist__1562 = cljs.core.next(arglist__1562);
var y = cljs.core.first(arglist__1562);
var more = cljs.core.rest(arglist__1562);
return G__1560__delegate(x,y,more);
});
G__1560.cljs$core$IFn$_invoke$arity$variadic = G__1560__delegate;
return G__1560;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__1563 = null;
if (arguments.length > 2) {
var G__1564__i = 0, G__1564__a = new Array(arguments.length -  2);
while (G__1564__i < G__1564__a.length) {G__1564__a[G__1564__i] = arguments[G__1564__i + 2]; ++G__1564__i;}
G__1563 = new cljs.core.IndexedSeq(G__1564__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__1569__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__1569 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1570__i = 0, G__1570__a = new Array(arguments.length -  2);
while (G__1570__i < G__1570__a.length) {G__1570__a[G__1570__i] = arguments[G__1570__i + 2]; ++G__1570__i;}
  more = new cljs.core.IndexedSeq(G__1570__a,0);
} 
return G__1569__delegate.call(this,x,y,more);};
G__1569.cljs$lang$maxFixedArity = 2;
G__1569.cljs$lang$applyTo = (function (arglist__1571){
var x = cljs.core.first(arglist__1571);
arglist__1571 = cljs.core.next(arglist__1571);
var y = cljs.core.first(arglist__1571);
var more = cljs.core.rest(arglist__1571);
return G__1569__delegate(x,y,more);
});
G__1569.cljs$core$IFn$_invoke$arity$variadic = G__1569__delegate;
return G__1569;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__1572 = null;
if (arguments.length > 2) {
var G__1573__i = 0, G__1573__a = new Array(arguments.length -  2);
while (G__1573__i < G__1573__a.length) {G__1573__a[G__1573__i] = arguments[G__1573__i + 2]; ++G__1573__i;}
G__1572 = new cljs.core.IndexedSeq(G__1573__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1572);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__1574__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__1574 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1575__i = 0, G__1575__a = new Array(arguments.length -  2);
while (G__1575__i < G__1575__a.length) {G__1575__a[G__1575__i] = arguments[G__1575__i + 2]; ++G__1575__i;}
  more = new cljs.core.IndexedSeq(G__1575__a,0);
} 
return G__1574__delegate.call(this,x,y,more);};
G__1574.cljs$lang$maxFixedArity = 2;
G__1574.cljs$lang$applyTo = (function (arglist__1576){
var x = cljs.core.first(arglist__1576);
arglist__1576 = cljs.core.next(arglist__1576);
var y = cljs.core.first(arglist__1576);
var more = cljs.core.rest(arglist__1576);
return G__1574__delegate(x,y,more);
});
G__1574.cljs$core$IFn$_invoke$arity$variadic = G__1574__delegate;
return G__1574;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__1577 = null;
if (arguments.length > 2) {
var G__1578__i = 0, G__1578__a = new Array(arguments.length -  2);
while (G__1578__i < G__1578__a.length) {G__1578__a[G__1578__i] = arguments[G__1578__i + 2]; ++G__1578__i;}
G__1577 = new cljs.core.IndexedSeq(G__1578__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1577);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__1579__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__1579 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1580__i = 0, G__1580__a = new Array(arguments.length -  2);
while (G__1580__i < G__1580__a.length) {G__1580__a[G__1580__i] = arguments[G__1580__i + 2]; ++G__1580__i;}
  more = new cljs.core.IndexedSeq(G__1580__a,0);
} 
return G__1579__delegate.call(this,x,y,more);};
G__1579.cljs$lang$maxFixedArity = 2;
G__1579.cljs$lang$applyTo = (function (arglist__1581){
var x = cljs.core.first(arglist__1581);
arglist__1581 = cljs.core.next(arglist__1581);
var y = cljs.core.first(arglist__1581);
var more = cljs.core.rest(arglist__1581);
return G__1579__delegate(x,y,more);
});
G__1579.cljs$core$IFn$_invoke$arity$variadic = G__1579__delegate;
return G__1579;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__1582 = null;
if (arguments.length > 2) {
var G__1583__i = 0, G__1583__a = new Array(arguments.length -  2);
while (G__1583__i < G__1583__a.length) {G__1583__a[G__1583__i] = arguments[G__1583__i + 2]; ++G__1583__i;}
G__1582 = new cljs.core.IndexedSeq(G__1583__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1582);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__1586 = x;
var G__1587 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__1586,G__1587) : cljs.core.mod.call(null,G__1586,G__1587));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__1588__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__1588 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1589__i = 0, G__1589__a = new Array(arguments.length -  2);
while (G__1589__i < G__1589__a.length) {G__1589__a[G__1589__i] = arguments[G__1589__i + 2]; ++G__1589__i;}
  more = new cljs.core.IndexedSeq(G__1589__a,0);
} 
return G__1588__delegate.call(this,x,y,more);};
G__1588.cljs$lang$maxFixedArity = 2;
G__1588.cljs$lang$applyTo = (function (arglist__1590){
var x = cljs.core.first(arglist__1590);
arglist__1590 = cljs.core.next(arglist__1590);
var y = cljs.core.first(arglist__1590);
var more = cljs.core.rest(arglist__1590);
return G__1588__delegate(x,y,more);
});
G__1588.cljs$core$IFn$_invoke$arity$variadic = G__1588__delegate;
return G__1588;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__1591 = null;
if (arguments.length > 2) {
var G__1592__i = 0, G__1592__a = new Array(arguments.length -  2);
while (G__1592__i < G__1592__a.length) {G__1592__a[G__1592__i] = arguments[G__1592__i + 2]; ++G__1592__i;}
G__1591 = new cljs.core.IndexedSeq(G__1592__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__1593__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__1593 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1594__i = 0, G__1594__a = new Array(arguments.length -  2);
while (G__1594__i < G__1594__a.length) {G__1594__a[G__1594__i] = arguments[G__1594__i + 2]; ++G__1594__i;}
  more = new cljs.core.IndexedSeq(G__1594__a,0);
} 
return G__1593__delegate.call(this,x,y,more);};
G__1593.cljs$lang$maxFixedArity = 2;
G__1593.cljs$lang$applyTo = (function (arglist__1595){
var x = cljs.core.first(arglist__1595);
arglist__1595 = cljs.core.next(arglist__1595);
var y = cljs.core.first(arglist__1595);
var more = cljs.core.rest(arglist__1595);
return G__1593__delegate(x,y,more);
});
G__1593.cljs$core$IFn$_invoke$arity$variadic = G__1593__delegate;
return G__1593;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__1596 = null;
if (arguments.length > 2) {
var G__1597__i = 0, G__1597__a = new Array(arguments.length -  2);
while (G__1597__i < G__1597__a.length) {G__1597__a[G__1597__i] = arguments[G__1597__i + 2]; ++G__1597__i;}
G__1596 = new cljs.core.IndexedSeq(G__1597__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1596);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__1600 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__1600) : Math.floor.call(null,G__1600));
} else {
var G__1601 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__1601) : Math.ceil.call(null,G__1601));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__1602__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__1602 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1603__i = 0, G__1603__a = new Array(arguments.length -  2);
while (G__1603__i < G__1603__a.length) {G__1603__a[G__1603__i] = arguments[G__1603__i + 2]; ++G__1603__i;}
  more = new cljs.core.IndexedSeq(G__1603__a,0);
} 
return G__1602__delegate.call(this,x,y,more);};
G__1602.cljs$lang$maxFixedArity = 2;
G__1602.cljs$lang$applyTo = (function (arglist__1604){
var x = cljs.core.first(arglist__1604);
arglist__1604 = cljs.core.next(arglist__1604);
var y = cljs.core.first(arglist__1604);
var more = cljs.core.rest(arglist__1604);
return G__1602__delegate(x,y,more);
});
G__1602.cljs$core$IFn$_invoke$arity$variadic = G__1602__delegate;
return G__1602;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__1605 = null;
if (arguments.length > 2) {
var G__1606__i = 0, G__1606__a = new Array(arguments.length -  2);
while (G__1606__i < G__1606__a.length) {G__1606__a[G__1606__i] = arguments[G__1606__i + 2]; ++G__1606__i;}
G__1605 = new cljs.core.IndexedSeq(G__1606__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1605);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__1607__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__1607 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1608__i = 0, G__1608__a = new Array(arguments.length -  2);
while (G__1608__i < G__1608__a.length) {G__1608__a[G__1608__i] = arguments[G__1608__i + 2]; ++G__1608__i;}
  more = new cljs.core.IndexedSeq(G__1608__a,0);
} 
return G__1607__delegate.call(this,x,y,more);};
G__1607.cljs$lang$maxFixedArity = 2;
G__1607.cljs$lang$applyTo = (function (arglist__1609){
var x = cljs.core.first(arglist__1609);
arglist__1609 = cljs.core.next(arglist__1609);
var y = cljs.core.first(arglist__1609);
var more = cljs.core.rest(arglist__1609);
return G__1607__delegate(x,y,more);
});
G__1607.cljs$core$IFn$_invoke$arity$variadic = G__1607__delegate;
return G__1607;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__1610 = null;
if (arguments.length > 2) {
var G__1611__i = 0, G__1611__a = new Array(arguments.length -  2);
while (G__1611__i < G__1611__a.length) {G__1611__a[G__1611__i] = arguments[G__1611__i + 2]; ++G__1611__i;}
G__1610 = new cljs.core.IndexedSeq(G__1611__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1610);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__1612__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__1612 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1613__i = 0, G__1613__a = new Array(arguments.length -  2);
while (G__1613__i < G__1613__a.length) {G__1613__a[G__1613__i] = arguments[G__1613__i + 2]; ++G__1613__i;}
  more = new cljs.core.IndexedSeq(G__1613__a,0);
} 
return G__1612__delegate.call(this,x,y,more);};
G__1612.cljs$lang$maxFixedArity = 2;
G__1612.cljs$lang$applyTo = (function (arglist__1614){
var x = cljs.core.first(arglist__1614);
arglist__1614 = cljs.core.next(arglist__1614);
var y = cljs.core.first(arglist__1614);
var more = cljs.core.rest(arglist__1614);
return G__1612__delegate(x,y,more);
});
G__1612.cljs$core$IFn$_invoke$arity$variadic = G__1612__delegate;
return G__1612;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__1615 = null;
if (arguments.length > 2) {
var G__1616__i = 0, G__1616__a = new Array(arguments.length -  2);
while (G__1616__i < G__1616__a.length) {G__1616__a[G__1616__i] = arguments[G__1616__i + 2]; ++G__1616__i;}
G__1615 = new cljs.core.IndexedSeq(G__1616__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1615);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__1617__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__1617 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1618__i = 0, G__1618__a = new Array(arguments.length -  2);
while (G__1618__i < G__1618__a.length) {G__1618__a[G__1618__i] = arguments[G__1618__i + 2]; ++G__1618__i;}
  more = new cljs.core.IndexedSeq(G__1618__a,0);
} 
return G__1617__delegate.call(this,x,y,more);};
G__1617.cljs$lang$maxFixedArity = 2;
G__1617.cljs$lang$applyTo = (function (arglist__1619){
var x = cljs.core.first(arglist__1619);
arglist__1619 = cljs.core.next(arglist__1619);
var y = cljs.core.first(arglist__1619);
var more = cljs.core.rest(arglist__1619);
return G__1617__delegate(x,y,more);
});
G__1617.cljs$core$IFn$_invoke$arity$variadic = G__1617__delegate;
return G__1617;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__1620 = null;
if (arguments.length > 2) {
var G__1621__i = 0, G__1621__a = new Array(arguments.length -  2);
while (G__1621__i < G__1621__a.length) {G__1621__a[G__1621__i] = arguments[G__1621__i + 2]; ++G__1621__i;}
G__1620 = new cljs.core.IndexedSeq(G__1621__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1620);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__1626__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__1627 = y;
var G__1628 = cljs.core.first(more);
var G__1629 = cljs.core.next(more);
x = G__1627;
y = G__1628;
more = G__1629;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__1626 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__1630__i = 0, G__1630__a = new Array(arguments.length -  2);
while (G__1630__i < G__1630__a.length) {G__1630__a[G__1630__i] = arguments[G__1630__i + 2]; ++G__1630__i;}
  more = new cljs.core.IndexedSeq(G__1630__a,0);
} 
return G__1626__delegate.call(this,x,y,more);};
G__1626.cljs$lang$maxFixedArity = 2;
G__1626.cljs$lang$applyTo = (function (arglist__1631){
var x = cljs.core.first(arglist__1631);
arglist__1631 = cljs.core.next(arglist__1631);
var y = cljs.core.first(arglist__1631);
var more = cljs.core.rest(arglist__1631);
return G__1626__delegate(x,y,more);
});
G__1626.cljs$core$IFn$_invoke$arity$variadic = G__1626__delegate;
return G__1626;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__1632 = null;
if (arguments.length > 2) {
var G__1633__i = 0, G__1633__a = new Array(arguments.length -  2);
while (G__1633__i < G__1633__a.length) {G__1633__a[G__1633__i] = arguments[G__1633__i + 2]; ++G__1633__i;}
G__1632 = new cljs.core.IndexedSeq(G__1633__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1632);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__1634 = (n__$1 - (1));
var G__1635 = cljs.core.next(xs);
n__$1 = G__1634;
xs = G__1635;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__1639 = x;
return goog.string.buildString(G__1639);
}
});
var cljs$core$str__2 = (function() { 
var G__1640__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__1641 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__1642 = cljs.core.next(more);
sb = G__1641;
more = G__1642;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__1640 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__1643__i = 0, G__1643__a = new Array(arguments.length -  1);
while (G__1643__i < G__1643__a.length) {G__1643__a[G__1643__i] = arguments[G__1643__i + 1]; ++G__1643__i;}
  ys = new cljs.core.IndexedSeq(G__1643__a,0);
} 
return G__1640__delegate.call(this,x,ys);};
G__1640.cljs$lang$maxFixedArity = 1;
G__1640.cljs$lang$applyTo = (function (arglist__1644){
var x = cljs.core.first(arglist__1644);
var ys = cljs.core.rest(arglist__1644);
return G__1640__delegate(x,ys);
});
G__1640.cljs$core$IFn$_invoke$arity$variadic = G__1640__delegate;
return G__1640;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__1645 = null;
if (arguments.length > 1) {
var G__1646__i = 0, G__1646__a = new Array(arguments.length -  1);
while (G__1646__i < G__1646__a.length) {G__1646__a[G__1646__i] = arguments[G__1646__i + 1]; ++G__1646__i;}
G__1645 = new cljs.core.IndexedSeq(G__1646__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__1645);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__1647 = cljs.core.next(xs);
var G__1648 = cljs.core.next(ys);
xs = G__1647;
ys = G__1648;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__1649 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__1650 = cljs.core.next(s);
res = G__1649;
s = G__1650;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__1655 = ((h + (cljs.core.hash((function (){var G__1653 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__1653) : cljs.core.key.call(null,G__1653));
})()) ^ cljs.core.hash((function (){var G__1654 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__1654) : cljs.core.val.call(null,G__1654));
})()))) % (4503599627370496));
var G__1656 = cljs.core.next(s);
h = G__1655;
s = G__1656;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__1657 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__1658 = cljs.core.next(s__$1);
h = G__1657;
s__$1 = G__1658;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__1669_1679 = cljs.core.seq(fn_map);
var chunk__1670_1680 = null;
var count__1671_1681 = (0);
var i__1672_1682 = (0);
while(true){
if((i__1672_1682 < count__1671_1681)){
var vec__1673_1683 = chunk__1670_1680.cljs$core$IIndexed$_nth$arity$2(null,i__1672_1682);
var key_name_1684 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__1673_1683,(0),null);
var f_1685 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__1673_1683,(1),null);
var str_name_1686 = (function (){var G__1674 = key_name_1684;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__1674) : cljs.core.name.call(null,G__1674));
})();
(obj[str_name_1686] = f_1685);

var G__1687 = seq__1669_1679;
var G__1688 = chunk__1670_1680;
var G__1689 = count__1671_1681;
var G__1690 = (i__1672_1682 + (1));
seq__1669_1679 = G__1687;
chunk__1670_1680 = G__1688;
count__1671_1681 = G__1689;
i__1672_1682 = G__1690;
continue;
} else {
var temp__4126__auto___1691 = cljs.core.seq(seq__1669_1679);
if(temp__4126__auto___1691){
var seq__1669_1692__$1 = temp__4126__auto___1691;
if(cljs.core.chunked_seq_QMARK_(seq__1669_1692__$1)){
var c__4326__auto___1693 = (function (){var G__1675 = seq__1669_1692__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__1675) : cljs.core.chunk_first.call(null,G__1675));
})();
var G__1694 = (function (){var G__1676 = seq__1669_1692__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__1676) : cljs.core.chunk_rest.call(null,G__1676));
})();
var G__1695 = c__4326__auto___1693;
var G__1696 = cljs.core.count(c__4326__auto___1693);
var G__1697 = (0);
seq__1669_1679 = G__1694;
chunk__1670_1680 = G__1695;
count__1671_1681 = G__1696;
i__1672_1682 = G__1697;
continue;
} else {
var vec__1677_1698 = cljs.core.first(seq__1669_1692__$1);
var key_name_1699 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__1677_1698,(0),null);
var f_1700 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__1677_1698,(1),null);
var str_name_1701 = (function (){var G__1678 = key_name_1699;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__1678) : cljs.core.name.call(null,G__1678));
})();
(obj[str_name_1701] = f_1700);

var G__1702 = cljs.core.next(seq__1669_1692__$1);
var G__1703 = null;
var G__1704 = (0);
var G__1705 = (0);
seq__1669_1679 = G__1702;
chunk__1670_1680 = G__1703;
count__1671_1681 = G__1704;
i__1672_1682 = G__1705;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__1707 = coll;
if(G__1707){
var bit__4251__auto__ = (G__1707.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4251__auto__) || (G__1707.cljs$core$IReversible$)){
return true;
} else {
if((!G__1707.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__1707);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__1707);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__1708 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__1708;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__1709 = (i - (1));
var G__1710 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__1709;
r = G__1710;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__1711__i = 0, G__1711__a = new Array(arguments.length -  0);
while (G__1711__i < G__1711__a.length) {G__1711__a[G__1711__i] = arguments[G__1711__i + 0]; ++G__1711__i;}
  xs = new cljs.core.IndexedSeq(G__1711__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__1712){
var xs = cljs.core.seq(arglist__1712);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__3957__auto__ = (coll == null);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var G__1716 = coll;
if(G__1716){
var bit__4248__auto__ = (G__1716.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4248__auto__) || (G__1716.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__1718 = x;
if(G__1718){
var bit__4251__auto__ = (G__1718.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4251__auto__) || (G__1718.cljs$core$IList$)){
return true;
} else {
if((!G__1718.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__1718);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__1718);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3949__auto__ = cljs.core.not(a.ns);
if(and__3949__auto__){
return b.ns;
} else {
return and__3949__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__1725 = a.ns;
var G__1726 = b.ns;
return goog.array.defaultCompare(G__1725,G__1726);
})();
if(((0) === nsc)){
var G__1727 = a.name;
var G__1728 = b.name;
return goog.array.defaultCompare(G__1727,G__1728);
} else {
return nsc;
}
}
} else {
var G__1729 = a.name;
var G__1730 = b.name;
return goog.array.defaultCompare(G__1729,G__1730);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4049__auto__ = self__._hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__1732 = null;
var G__1732__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__1732__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__1732 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__1732__2.call(this,self__,coll);
case 3:
return G__1732__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__1732.cljs$core$IFn$_invoke$arity$2 = G__1732__2;
G__1732.cljs$core$IFn$_invoke$arity$3 = G__1732__3;
return G__1732;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args1731){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args1731)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__1734 = x;
if(G__1734){
var bit__4248__auto__ = (G__1734.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4248__auto__) || (G__1734.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__1736 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__1736) : cljs.core.name.call(null,G__1736));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__1737 = ls.sval();
ls = G__1737;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__1739 = s;
if(G__1739){
var bit__4248__auto__ = (G__1739.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4248__auto__) || (G__1739.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__1740 = cljs.core.next(s__$1);
s__$1 = G__1740;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_1741 = (0);
var xs_1742 = cljs.core.seq(coll);
while(true){
if(xs_1742){
(ret[i_1741] = cljs.core.to_array(cljs.core.first(xs_1742)));

var G__1743 = (i_1741 + (1));
var G__1744 = cljs.core.next(xs_1742);
i_1741 = G__1743;
xs_1742 = G__1744;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__1747 = (i + (1));
var G__1748 = cljs.core.next(s__$1);
i = G__1747;
s__$1 = G__1748;
continue;
} else {
return a;
}
break;
}
} else {
var n__4378__auto___1749 = size;
var i_1750 = (0);
while(true){
if((i_1750 < n__4378__auto___1749)){
(a[i_1750] = init_val_or_seq);

var G__1751 = (i_1750 + (1));
i_1750 = G__1751;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__1754 = (i + (1));
var G__1755 = cljs.core.next(s__$1);
i = G__1754;
s__$1 = G__1755;
continue;
} else {
return a;
}
break;
}
} else {
var n__4378__auto___1756 = size;
var i_1757 = (0);
while(true){
if((i_1757 < n__4378__auto___1756)){
(a[i_1757] = init_val_or_seq);

var G__1758 = (i_1757 + (1));
i_1757 = G__1758;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__1761 = (i + (1));
var G__1762 = cljs.core.next(s__$1);
i = G__1761;
s__$1 = G__1762;
continue;
} else {
return a;
}
break;
}
} else {
var n__4378__auto___1763 = size;
var i_1764 = (0);
while(true){
if((i_1764 < n__4378__auto___1763)){
(a[i_1764] = init_val_or_seq);

var G__1765 = (i_1764 + (1));
i_1764 = G__1765;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__1768 = (i + (1));
var G__1769 = cljs.core.next(s__$1);
i = G__1768;
s__$1 = G__1769;
continue;
} else {
return a;
}
break;
}
} else {
var n__4378__auto___1770 = size;
var i_1771 = (0);
while(true){
if((i_1771 < n__4378__auto___1770)){
(a[i_1771] = init_val_or_seq);

var G__1772 = (i_1771 + (1));
i_1771 = G__1772;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__1773 = cljs.core.next(s__$1);
var G__1774 = (i - (1));
var G__1775 = (sum + (1));
s__$1 = G__1773;
i = G__1774;
sum = G__1775;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__1795__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__1795 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__1796__i = 0, G__1796__a = new Array(arguments.length -  2);
while (G__1796__i < G__1796__a.length) {G__1796__a[G__1796__i] = arguments[G__1796__i + 2]; ++G__1796__i;}
  zs = new cljs.core.IndexedSeq(G__1796__a,0);
} 
return G__1795__delegate.call(this,x,y,zs);};
G__1795.cljs$lang$maxFixedArity = 2;
G__1795.cljs$lang$applyTo = (function (arglist__1797){
var x = cljs.core.first(arglist__1797);
arglist__1797 = cljs.core.next(arglist__1797);
var y = cljs.core.first(arglist__1797);
var zs = cljs.core.rest(arglist__1797);
return G__1795__delegate(x,y,zs);
});
G__1795.cljs$core$IFn$_invoke$arity$variadic = G__1795__delegate;
return G__1795;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__1798 = null;
if (arguments.length > 2) {
var G__1799__i = 0, G__1799__a = new Array(arguments.length -  2);
while (G__1799__i < G__1799__a.length) {G__1799__a[G__1799__i] = arguments[G__1799__i + 2]; ++G__1799__i;}
G__1798 = new cljs.core.IndexedSeq(G__1799__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__1798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__1800__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__1800 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__1801__i = 0, G__1801__a = new Array(arguments.length -  4);
while (G__1801__i < G__1801__a.length) {G__1801__a[G__1801__i] = arguments[G__1801__i + 4]; ++G__1801__i;}
  more = new cljs.core.IndexedSeq(G__1801__a,0);
} 
return G__1800__delegate.call(this,a,b,c,d,more);};
G__1800.cljs$lang$maxFixedArity = 4;
G__1800.cljs$lang$applyTo = (function (arglist__1802){
var a = cljs.core.first(arglist__1802);
arglist__1802 = cljs.core.next(arglist__1802);
var b = cljs.core.first(arglist__1802);
arglist__1802 = cljs.core.next(arglist__1802);
var c = cljs.core.first(arglist__1802);
arglist__1802 = cljs.core.next(arglist__1802);
var d = cljs.core.first(arglist__1802);
var more = cljs.core.rest(arglist__1802);
return G__1800__delegate(a,b,c,d,more);
});
G__1800.cljs$core$IFn$_invoke$arity$variadic = G__1800__delegate;
return G__1800;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__1803 = null;
if (arguments.length > 4) {
var G__1804__i = 0, G__1804__a = new Array(arguments.length -  4);
while (G__1804__i < G__1804__a.length) {G__1804__a[G__1804__i] = arguments[G__1804__i + 4]; ++G__1804__i;}
G__1803 = new cljs.core.IndexedSeq(G__1804__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__1803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__1805__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__1806 = ntcoll;
var G__1807 = cljs.core.first(vals);
var G__1808 = cljs.core.next(vals);
tcoll = G__1806;
val = G__1807;
vals = G__1808;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__1805 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__1809__i = 0, G__1809__a = new Array(arguments.length -  2);
while (G__1809__i < G__1809__a.length) {G__1809__a[G__1809__i] = arguments[G__1809__i + 2]; ++G__1809__i;}
  vals = new cljs.core.IndexedSeq(G__1809__a,0);
} 
return G__1805__delegate.call(this,tcoll,val,vals);};
G__1805.cljs$lang$maxFixedArity = 2;
G__1805.cljs$lang$applyTo = (function (arglist__1810){
var tcoll = cljs.core.first(arglist__1810);
arglist__1810 = cljs.core.next(arglist__1810);
var val = cljs.core.first(arglist__1810);
var vals = cljs.core.rest(arglist__1810);
return G__1805__delegate(tcoll,val,vals);
});
G__1805.cljs$core$IFn$_invoke$arity$variadic = G__1805__delegate;
return G__1805;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__1811 = null;
if (arguments.length > 2) {
var G__1812__i = 0, G__1812__a = new Array(arguments.length -  2);
while (G__1812__i < G__1812__a.length) {G__1812__a[G__1812__i] = arguments[G__1812__i + 2]; ++G__1812__i;}
G__1811 = new cljs.core.IndexedSeq(G__1812__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__1811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__1813__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__1814 = ntcoll;
var G__1815 = cljs.core.first(kvs);
var G__1816 = cljs.core.second(kvs);
var G__1817 = cljs.core.nnext(kvs);
tcoll = G__1814;
key = G__1815;
val = G__1816;
kvs = G__1817;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__1813 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__1818__i = 0, G__1818__a = new Array(arguments.length -  3);
while (G__1818__i < G__1818__a.length) {G__1818__a[G__1818__i] = arguments[G__1818__i + 3]; ++G__1818__i;}
  kvs = new cljs.core.IndexedSeq(G__1818__a,0);
} 
return G__1813__delegate.call(this,tcoll,key,val,kvs);};
G__1813.cljs$lang$maxFixedArity = 3;
G__1813.cljs$lang$applyTo = (function (arglist__1819){
var tcoll = cljs.core.first(arglist__1819);
arglist__1819 = cljs.core.next(arglist__1819);
var key = cljs.core.first(arglist__1819);
arglist__1819 = cljs.core.next(arglist__1819);
var val = cljs.core.first(arglist__1819);
var kvs = cljs.core.rest(arglist__1819);
return G__1813__delegate(tcoll,key,val,kvs);
});
G__1813.cljs$core$IFn$_invoke$arity$variadic = G__1813__delegate;
return G__1813;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__1820 = null;
if (arguments.length > 3) {
var G__1821__i = 0, G__1821__a = new Array(arguments.length -  3);
while (G__1821__i < G__1821__a.length) {G__1821__a[G__1821__i] = arguments[G__1821__i + 3]; ++G__1821__i;}
G__1820 = new cljs.core.IndexedSeq(G__1821__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__1820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__1822__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__1823 = ntcoll;
var G__1824 = cljs.core.first(ks);
var G__1825 = cljs.core.next(ks);
tcoll = G__1823;
key = G__1824;
ks = G__1825;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__1822 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__1826__i = 0, G__1826__a = new Array(arguments.length -  2);
while (G__1826__i < G__1826__a.length) {G__1826__a[G__1826__i] = arguments[G__1826__i + 2]; ++G__1826__i;}
  ks = new cljs.core.IndexedSeq(G__1826__a,0);
} 
return G__1822__delegate.call(this,tcoll,key,ks);};
G__1822.cljs$lang$maxFixedArity = 2;
G__1822.cljs$lang$applyTo = (function (arglist__1827){
var tcoll = cljs.core.first(arglist__1827);
arglist__1827 = cljs.core.next(arglist__1827);
var key = cljs.core.first(arglist__1827);
var ks = cljs.core.rest(arglist__1827);
return G__1822__delegate(tcoll,key,ks);
});
G__1822.cljs$core$IFn$_invoke$arity$variadic = G__1822__delegate;
return G__1822;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__1828 = null;
if (arguments.length > 2) {
var G__1829__i = 0, G__1829__a = new Array(arguments.length -  2);
while (G__1829__i < G__1829__a.length) {G__1829__a[G__1829__i] = arguments[G__1829__i + 2]; ++G__1829__i;}
G__1828 = new cljs.core.IndexedSeq(G__1829__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__1828);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__1830__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__1831 = ntcoll;
var G__1832 = cljs.core.first(vals);
var G__1833 = cljs.core.next(vals);
tcoll = G__1831;
val = G__1832;
vals = G__1833;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__1830 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__1834__i = 0, G__1834__a = new Array(arguments.length -  2);
while (G__1834__i < G__1834__a.length) {G__1834__a[G__1834__i] = arguments[G__1834__i + 2]; ++G__1834__i;}
  vals = new cljs.core.IndexedSeq(G__1834__a,0);
} 
return G__1830__delegate.call(this,tcoll,val,vals);};
G__1830.cljs$lang$maxFixedArity = 2;
G__1830.cljs$lang$applyTo = (function (arglist__1835){
var tcoll = cljs.core.first(arglist__1835);
arglist__1835 = cljs.core.next(arglist__1835);
var val = cljs.core.first(arglist__1835);
var vals = cljs.core.rest(arglist__1835);
return G__1830__delegate(tcoll,val,vals);
});
G__1830.cljs$core$IFn$_invoke$arity$variadic = G__1830__delegate;
return G__1830;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__1836 = null;
if (arguments.length > 2) {
var G__1837__i = 0, G__1837__a = new Array(arguments.length -  2);
while (G__1837__i < G__1837__a.length) {G__1837__a[G__1837__i] = arguments[G__1837__i + 2]; ++G__1837__i;}
G__1836 = new cljs.core.IndexedSeq(G__1837__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__1836);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a22 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a22);
} else {
var G__2048 = a22;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2048) : f.call(null,G__2048));
}
} else {
var b23 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a22,b23);
} else {
var G__2049 = a22;
var G__2050 = b23;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2049,G__2050) : f.call(null,G__2049,G__2050));
}
} else {
var c24 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a22,b23,c24);
} else {
var G__2051 = a22;
var G__2052 = b23;
var G__2053 = c24;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2051,G__2052,G__2053) : f.call(null,G__2051,G__2052,G__2053));
}
} else {
var d25 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a22,b23,c24,d25);
} else {
var G__2054 = a22;
var G__2055 = b23;
var G__2056 = c24;
var G__2057 = d25;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2054,G__2055,G__2056,G__2057) : f.call(null,G__2054,G__2055,G__2056,G__2057));
}
} else {
var e26 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a22,b23,c24,d25,e26);
} else {
var G__2058 = a22;
var G__2059 = b23;
var G__2060 = c24;
var G__2061 = d25;
var G__2062 = e26;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2058,G__2059,G__2060,G__2061,G__2062) : f.call(null,G__2058,G__2059,G__2060,G__2061,G__2062));
}
} else {
var f27 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a22,b23,c24,d25,e26,f27);
} else {
var G__2063 = a22;
var G__2064 = b23;
var G__2065 = c24;
var G__2066 = d25;
var G__2067 = e26;
var G__2068 = f27;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__2063,G__2064,G__2065,G__2066,G__2067,G__2068) : f.call(null,G__2063,G__2064,G__2065,G__2066,G__2067,G__2068));
}
} else {
var g28 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a22,b23,c24,d25,e26,f27,g28);
} else {
var G__2069 = a22;
var G__2070 = b23;
var G__2071 = c24;
var G__2072 = d25;
var G__2073 = e26;
var G__2074 = f27;
var G__2075 = g28;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__2069,G__2070,G__2071,G__2072,G__2073,G__2074,G__2075) : f.call(null,G__2069,G__2070,G__2071,G__2072,G__2073,G__2074,G__2075));
}
} else {
var h29 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a22,b23,c24,d25,e26,f27,g28,h29);
} else {
var G__2076 = a22;
var G__2077 = b23;
var G__2078 = c24;
var G__2079 = d25;
var G__2080 = e26;
var G__2081 = f27;
var G__2082 = g28;
var G__2083 = h29;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__2076,G__2077,G__2078,G__2079,G__2080,G__2081,G__2082,G__2083) : f.call(null,G__2076,G__2077,G__2078,G__2079,G__2080,G__2081,G__2082,G__2083));
}
} else {
var i30 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a22,b23,c24,d25,e26,f27,g28,h29,i30);
} else {
var G__2084 = a22;
var G__2085 = b23;
var G__2086 = c24;
var G__2087 = d25;
var G__2088 = e26;
var G__2089 = f27;
var G__2090 = g28;
var G__2091 = h29;
var G__2092 = i30;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__2084,G__2085,G__2086,G__2087,G__2088,G__2089,G__2090,G__2091,G__2092) : f.call(null,G__2084,G__2085,G__2086,G__2087,G__2088,G__2089,G__2090,G__2091,G__2092));
}
} else {
var j31 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31);
} else {
var G__2093 = a22;
var G__2094 = b23;
var G__2095 = c24;
var G__2096 = d25;
var G__2097 = e26;
var G__2098 = f27;
var G__2099 = g28;
var G__2100 = h29;
var G__2101 = i30;
var G__2102 = j31;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__2093,G__2094,G__2095,G__2096,G__2097,G__2098,G__2099,G__2100,G__2101,G__2102) : f.call(null,G__2093,G__2094,G__2095,G__2096,G__2097,G__2098,G__2099,G__2100,G__2101,G__2102));
}
} else {
var k32 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32);
} else {
var G__2103 = a22;
var G__2104 = b23;
var G__2105 = c24;
var G__2106 = d25;
var G__2107 = e26;
var G__2108 = f27;
var G__2109 = g28;
var G__2110 = h29;
var G__2111 = i30;
var G__2112 = j31;
var G__2113 = k32;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__2103,G__2104,G__2105,G__2106,G__2107,G__2108,G__2109,G__2110,G__2111,G__2112,G__2113) : f.call(null,G__2103,G__2104,G__2105,G__2106,G__2107,G__2108,G__2109,G__2110,G__2111,G__2112,G__2113));
}
} else {
var l33 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32,l33);
} else {
var G__2114 = a22;
var G__2115 = b23;
var G__2116 = c24;
var G__2117 = d25;
var G__2118 = e26;
var G__2119 = f27;
var G__2120 = g28;
var G__2121 = h29;
var G__2122 = i30;
var G__2123 = j31;
var G__2124 = k32;
var G__2125 = l33;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__2114,G__2115,G__2116,G__2117,G__2118,G__2119,G__2120,G__2121,G__2122,G__2123,G__2124,G__2125) : f.call(null,G__2114,G__2115,G__2116,G__2117,G__2118,G__2119,G__2120,G__2121,G__2122,G__2123,G__2124,G__2125));
}
} else {
var m34 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32,l33,m34);
} else {
var G__2126 = a22;
var G__2127 = b23;
var G__2128 = c24;
var G__2129 = d25;
var G__2130 = e26;
var G__2131 = f27;
var G__2132 = g28;
var G__2133 = h29;
var G__2134 = i30;
var G__2135 = j31;
var G__2136 = k32;
var G__2137 = l33;
var G__2138 = m34;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__2126,G__2127,G__2128,G__2129,G__2130,G__2131,G__2132,G__2133,G__2134,G__2135,G__2136,G__2137,G__2138) : f.call(null,G__2126,G__2127,G__2128,G__2129,G__2130,G__2131,G__2132,G__2133,G__2134,G__2135,G__2136,G__2137,G__2138));
}
} else {
var n35 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32,l33,m34,n35);
} else {
var G__2139 = a22;
var G__2140 = b23;
var G__2141 = c24;
var G__2142 = d25;
var G__2143 = e26;
var G__2144 = f27;
var G__2145 = g28;
var G__2146 = h29;
var G__2147 = i30;
var G__2148 = j31;
var G__2149 = k32;
var G__2150 = l33;
var G__2151 = m34;
var G__2152 = n35;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__2139,G__2140,G__2141,G__2142,G__2143,G__2144,G__2145,G__2146,G__2147,G__2148,G__2149,G__2150,G__2151,G__2152) : f.call(null,G__2139,G__2140,G__2141,G__2142,G__2143,G__2144,G__2145,G__2146,G__2147,G__2148,G__2149,G__2150,G__2151,G__2152));
}
} else {
var o36 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32,l33,m34,n35,o36);
} else {
var G__2153 = a22;
var G__2154 = b23;
var G__2155 = c24;
var G__2156 = d25;
var G__2157 = e26;
var G__2158 = f27;
var G__2159 = g28;
var G__2160 = h29;
var G__2161 = i30;
var G__2162 = j31;
var G__2163 = k32;
var G__2164 = l33;
var G__2165 = m34;
var G__2166 = n35;
var G__2167 = o36;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__2153,G__2154,G__2155,G__2156,G__2157,G__2158,G__2159,G__2160,G__2161,G__2162,G__2163,G__2164,G__2165,G__2166,G__2167) : f.call(null,G__2153,G__2154,G__2155,G__2156,G__2157,G__2158,G__2159,G__2160,G__2161,G__2162,G__2163,G__2164,G__2165,G__2166,G__2167));
}
} else {
var p37 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32,l33,m34,n35,o36,p37);
} else {
var G__2168 = a22;
var G__2169 = b23;
var G__2170 = c24;
var G__2171 = d25;
var G__2172 = e26;
var G__2173 = f27;
var G__2174 = g28;
var G__2175 = h29;
var G__2176 = i30;
var G__2177 = j31;
var G__2178 = k32;
var G__2179 = l33;
var G__2180 = m34;
var G__2181 = n35;
var G__2182 = o36;
var G__2183 = p37;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__2168,G__2169,G__2170,G__2171,G__2172,G__2173,G__2174,G__2175,G__2176,G__2177,G__2178,G__2179,G__2180,G__2181,G__2182,G__2183) : f.call(null,G__2168,G__2169,G__2170,G__2171,G__2172,G__2173,G__2174,G__2175,G__2176,G__2177,G__2178,G__2179,G__2180,G__2181,G__2182,G__2183));
}
} else {
var q38 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32,l33,m34,n35,o36,p37,q38);
} else {
var G__2184 = a22;
var G__2185 = b23;
var G__2186 = c24;
var G__2187 = d25;
var G__2188 = e26;
var G__2189 = f27;
var G__2190 = g28;
var G__2191 = h29;
var G__2192 = i30;
var G__2193 = j31;
var G__2194 = k32;
var G__2195 = l33;
var G__2196 = m34;
var G__2197 = n35;
var G__2198 = o36;
var G__2199 = p37;
var G__2200 = q38;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__2184,G__2185,G__2186,G__2187,G__2188,G__2189,G__2190,G__2191,G__2192,G__2193,G__2194,G__2195,G__2196,G__2197,G__2198,G__2199,G__2200) : f.call(null,G__2184,G__2185,G__2186,G__2187,G__2188,G__2189,G__2190,G__2191,G__2192,G__2193,G__2194,G__2195,G__2196,G__2197,G__2198,G__2199,G__2200));
}
} else {
var r39 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32,l33,m34,n35,o36,p37,q38,r39);
} else {
var G__2201 = a22;
var G__2202 = b23;
var G__2203 = c24;
var G__2204 = d25;
var G__2205 = e26;
var G__2206 = f27;
var G__2207 = g28;
var G__2208 = h29;
var G__2209 = i30;
var G__2210 = j31;
var G__2211 = k32;
var G__2212 = l33;
var G__2213 = m34;
var G__2214 = n35;
var G__2215 = o36;
var G__2216 = p37;
var G__2217 = q38;
var G__2218 = r39;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__2201,G__2202,G__2203,G__2204,G__2205,G__2206,G__2207,G__2208,G__2209,G__2210,G__2211,G__2212,G__2213,G__2214,G__2215,G__2216,G__2217,G__2218) : f.call(null,G__2201,G__2202,G__2203,G__2204,G__2205,G__2206,G__2207,G__2208,G__2209,G__2210,G__2211,G__2212,G__2213,G__2214,G__2215,G__2216,G__2217,G__2218));
}
} else {
var s40 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32,l33,m34,n35,o36,p37,q38,r39,s40);
} else {
var G__2219 = a22;
var G__2220 = b23;
var G__2221 = c24;
var G__2222 = d25;
var G__2223 = e26;
var G__2224 = f27;
var G__2225 = g28;
var G__2226 = h29;
var G__2227 = i30;
var G__2228 = j31;
var G__2229 = k32;
var G__2230 = l33;
var G__2231 = m34;
var G__2232 = n35;
var G__2233 = o36;
var G__2234 = p37;
var G__2235 = q38;
var G__2236 = r39;
var G__2237 = s40;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__2219,G__2220,G__2221,G__2222,G__2223,G__2224,G__2225,G__2226,G__2227,G__2228,G__2229,G__2230,G__2231,G__2232,G__2233,G__2234,G__2235,G__2236,G__2237) : f.call(null,G__2219,G__2220,G__2221,G__2222,G__2223,G__2224,G__2225,G__2226,G__2227,G__2228,G__2229,G__2230,G__2231,G__2232,G__2233,G__2234,G__2235,G__2236,G__2237));
}
} else {
var t41 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a22,b23,c24,d25,e26,f27,g28,h29,i30,j31,k32,l33,m34,n35,o36,p37,q38,r39,s40,t41);
} else {
var G__2238 = a22;
var G__2239 = b23;
var G__2240 = c24;
var G__2241 = d25;
var G__2242 = e26;
var G__2243 = f27;
var G__2244 = g28;
var G__2245 = h29;
var G__2246 = i30;
var G__2247 = j31;
var G__2248 = k32;
var G__2249 = l33;
var G__2250 = m34;
var G__2251 = n35;
var G__2252 = o36;
var G__2253 = p37;
var G__2254 = q38;
var G__2255 = r39;
var G__2256 = s40;
var G__2257 = t41;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__2238,G__2239,G__2240,G__2241,G__2242,G__2243,G__2244,G__2245,G__2246,G__2247,G__2248,G__2249,G__2250,G__2251,G__2252,G__2253,G__2254,G__2255,G__2256,G__2257) : f.call(null,G__2238,G__2239,G__2240,G__2241,G__2242,G__2243,G__2244,G__2245,G__2246,G__2247,G__2248,G__2249,G__2250,G__2251,G__2252,G__2253,G__2254,G__2255,G__2256,G__2257));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__2258__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__2258 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__2259__i = 0, G__2259__a = new Array(arguments.length -  5);
while (G__2259__i < G__2259__a.length) {G__2259__a[G__2259__i] = arguments[G__2259__i + 5]; ++G__2259__i;}
  args = new cljs.core.IndexedSeq(G__2259__a,0);
} 
return G__2258__delegate.call(this,f,a,b,c,d,args);};
G__2258.cljs$lang$maxFixedArity = 5;
G__2258.cljs$lang$applyTo = (function (arglist__2260){
var f = cljs.core.first(arglist__2260);
arglist__2260 = cljs.core.next(arglist__2260);
var a = cljs.core.first(arglist__2260);
arglist__2260 = cljs.core.next(arglist__2260);
var b = cljs.core.first(arglist__2260);
arglist__2260 = cljs.core.next(arglist__2260);
var c = cljs.core.first(arglist__2260);
arglist__2260 = cljs.core.next(arglist__2260);
var d = cljs.core.first(arglist__2260);
var args = cljs.core.rest(arglist__2260);
return G__2258__delegate(f,a,b,c,d,args);
});
G__2258.cljs$core$IFn$_invoke$arity$variadic = G__2258__delegate;
return G__2258;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__2261 = null;
if (arguments.length > 5) {
var G__2262__i = 0, G__2262__a = new Array(arguments.length -  5);
while (G__2262__i < G__2262__a.length) {G__2262__a[G__2262__i] = arguments[G__2262__i + 5]; ++G__2262__i;}
G__2261 = new cljs.core.IndexedSeq(G__2262__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__2261);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__2278 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2278) : f.call(null,G__2278));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__2279 = cljs.core.meta(obj);
var G__2280 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2279,G__2280) : f.call(null,G__2279,G__2280));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__2281 = cljs.core.meta(obj);
var G__2282 = a;
var G__2283 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2281,G__2282,G__2283) : f.call(null,G__2281,G__2282,G__2283));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__2284 = cljs.core.meta(obj);
var G__2285 = a;
var G__2286 = b;
var G__2287 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2284,G__2285,G__2286,G__2287) : f.call(null,G__2284,G__2285,G__2286,G__2287));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__2288 = cljs.core.meta(obj);
var G__2289 = a;
var G__2290 = b;
var G__2291 = c;
var G__2292 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2288,G__2289,G__2290,G__2291,G__2292) : f.call(null,G__2288,G__2289,G__2290,G__2291,G__2292));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__2293__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__2293 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__2294__i = 0, G__2294__a = new Array(arguments.length -  6);
while (G__2294__i < G__2294__a.length) {G__2294__a[G__2294__i] = arguments[G__2294__i + 6]; ++G__2294__i;}
  args = new cljs.core.IndexedSeq(G__2294__a,0);
} 
return G__2293__delegate.call(this,obj,f,a,b,c,d,args);};
G__2293.cljs$lang$maxFixedArity = 6;
G__2293.cljs$lang$applyTo = (function (arglist__2295){
var obj = cljs.core.first(arglist__2295);
arglist__2295 = cljs.core.next(arglist__2295);
var f = cljs.core.first(arglist__2295);
arglist__2295 = cljs.core.next(arglist__2295);
var a = cljs.core.first(arglist__2295);
arglist__2295 = cljs.core.next(arglist__2295);
var b = cljs.core.first(arglist__2295);
arglist__2295 = cljs.core.next(arglist__2295);
var c = cljs.core.first(arglist__2295);
arglist__2295 = cljs.core.next(arglist__2295);
var d = cljs.core.first(arglist__2295);
var args = cljs.core.rest(arglist__2295);
return G__2293__delegate(obj,f,a,b,c,d,args);
});
G__2293.cljs$core$IFn$_invoke$arity$variadic = G__2293__delegate;
return G__2293;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__2296 = null;
if (arguments.length > 6) {
var G__2297__i = 0, G__2297__a = new Array(arguments.length -  6);
while (G__2297__i < G__2297__a.length) {G__2297__a[G__2297__i] = arguments[G__2297__i + 6]; ++G__2297__i;}
G__2296 = new cljs.core.IndexedSeq(G__2297__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__2296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__2298__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__2298 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__2299__i = 0, G__2299__a = new Array(arguments.length -  2);
while (G__2299__i < G__2299__a.length) {G__2299__a[G__2299__i] = arguments[G__2299__i + 2]; ++G__2299__i;}
  more = new cljs.core.IndexedSeq(G__2299__a,0);
} 
return G__2298__delegate.call(this,x,y,more);};
G__2298.cljs$lang$maxFixedArity = 2;
G__2298.cljs$lang$applyTo = (function (arglist__2300){
var x = cljs.core.first(arglist__2300);
arglist__2300 = cljs.core.next(arglist__2300);
var y = cljs.core.first(arglist__2300);
var more = cljs.core.rest(arglist__2300);
return G__2298__delegate(x,y,more);
});
G__2298.cljs$core$IFn$_invoke$arity$variadic = G__2298__delegate;
return G__2298;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__2301 = null;
if (arguments.length > 2) {
var G__2302__i = 0, G__2302__a = new Array(arguments.length -  2);
while (G__2302__i < G__2302__a.length) {G__2302__a[G__2302__i] = arguments[G__2302__i + 2]; ++G__2302__i;}
G__2301 = new cljs.core.IndexedSeq(G__2302__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t2306 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t2306 = (function (nil_iter,meta2307){
this.nil_iter = nil_iter;
this.meta2307 = meta2307;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t2306.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t2306.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t2306.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t2306.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_2308){
var self__ = this;
var _2308__$1 = this;
return self__.meta2307;
});

cljs.core.t2306.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_2308,meta2307__$1){
var self__ = this;
var _2308__$1 = this;
return (new cljs.core.t2306(self__.nil_iter,meta2307__$1));
});

cljs.core.t2306.cljs$lang$type = true;

cljs.core.t2306.cljs$lang$ctorStr = "cljs.core/t2306";

cljs.core.t2306.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/t2306");
});

cljs.core.__GT_t2306 = (function cljs$core$nil_iter_$___GT_t2306(nil_iter__$1,meta2307){
return (new cljs.core.t2306(nil_iter__$1,meta2307));
});

}

return (new cljs.core.t2306(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3949__auto__ = !((lt.stepper == null));
if(and__3949__auto__){
return self__.iter.hasNext();
} else {
return and__3949__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__2309 = lt;
var G__2310 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__2309,G__2310) : self__.xform.call(null,G__2309,G__2310));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__2311 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__2311) : self__.xform.call(null,G__2311));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__2313 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2313) : xform.call(null,G__2313));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__2315 = cljs.core.next(iters__$1);
iters__$1 = G__2315;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4378__auto___2316 = self__.iters.length;
var i_2317 = (0);
while(true){
if((i_2317 < n__4378__auto___2316)){
(self__.nexts[i_2317] = (self__.iters[i_2317]).next());

var G__2318 = (i_2317 + (1));
i_2317 = G__2318;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3949__auto__ = !((lt.stepper == null));
if(and__3949__auto__){
return this$.hasNext();
} else {
return and__3949__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__2314 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__2314) : self__.xform.call(null,G__2314));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__2323 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__2323) : xform.call(null,G__2323));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__2324_2328 = cljs.core.seq(colls);
var chunk__2325_2329 = null;
var count__2326_2330 = (0);
var i__2327_2331 = (0);
while(true){
if((i__2327_2331 < count__2326_2330)){
var coll_2332 = chunk__2325_2329.cljs$core$IIndexed$_nth$arity$2(null,i__2327_2331);
iters.push(cljs.core.iter(coll_2332));

var G__2333 = seq__2324_2328;
var G__2334 = chunk__2325_2329;
var G__2335 = count__2326_2330;
var G__2336 = (i__2327_2331 + (1));
seq__2324_2328 = G__2333;
chunk__2325_2329 = G__2334;
count__2326_2330 = G__2335;
i__2327_2331 = G__2336;
continue;
} else {
var temp__4126__auto___2337 = cljs.core.seq(seq__2324_2328);
if(temp__4126__auto___2337){
var seq__2324_2338__$1 = temp__4126__auto___2337;
if(cljs.core.chunked_seq_QMARK_(seq__2324_2338__$1)){
var c__4326__auto___2339 = cljs.core.chunk_first(seq__2324_2338__$1);
var G__2340 = cljs.core.chunk_rest(seq__2324_2338__$1);
var G__2341 = c__4326__auto___2339;
var G__2342 = cljs.core.count(c__4326__auto___2339);
var G__2343 = (0);
seq__2324_2328 = G__2340;
chunk__2325_2329 = G__2341;
count__2326_2330 = G__2342;
i__2327_2331 = G__2343;
continue;
} else {
var coll_2344 = cljs.core.first(seq__2324_2338__$1);
iters.push(cljs.core.iter(coll_2344));

var G__2345 = cljs.core.next(seq__2324_2338__$1);
var G__2346 = null;
var G__2347 = (0);
var G__2348 = (0);
seq__2324_2328 = G__2345;
chunk__2325_2329 = G__2346;
count__2326_2330 = G__2347;
i__2327_2331 = G__2348;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3957__auto__ = cljs.core.seq(coll);
if(or__3957__auto__){
return or__3957__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__2349__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__2349 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__2350__i = 0, G__2350__a = new Array(arguments.length -  2);
while (G__2350__i < G__2350__a.length) {G__2350__a[G__2350__i] = arguments[G__2350__i + 2]; ++G__2350__i;}
  colls = new cljs.core.IndexedSeq(G__2350__a,0);
} 
return G__2349__delegate.call(this,xform,coll,colls);};
G__2349.cljs$lang$maxFixedArity = 2;
G__2349.cljs$lang$applyTo = (function (arglist__2351){
var xform = cljs.core.first(arglist__2351);
arglist__2351 = cljs.core.next(arglist__2351);
var coll = cljs.core.first(arglist__2351);
var colls = cljs.core.rest(arglist__2351);
return G__2349__delegate(xform,coll,colls);
});
G__2349.cljs$core$IFn$_invoke$arity$variadic = G__2349__delegate;
return G__2349;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__2352 = null;
if (arguments.length > 2) {
var G__2353__i = 0, G__2353__a = new Array(arguments.length -  2);
while (G__2353__i < G__2353__a.length) {G__2353__a[G__2353__i] = arguments[G__2353__i + 2]; ++G__2353__i;}
G__2352 = new cljs.core.IndexedSeq(G__2353__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__2352);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__2355 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2355) : pred.call(null,G__2355));
})())){
var G__2356 = pred;
var G__2357 = cljs.core.next(coll);
pred = G__2356;
coll = G__2357;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3957__auto__ = (function (){var G__2361 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__2361) : pred.call(null,G__2361));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var G__2362 = pred;
var G__2363 = cljs.core.next(coll);
pred = G__2362;
coll = G__2363;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__2370 = null;
var G__2370__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__2370__1 = (function (x){
return cljs.core.not((function (){var G__2367 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2367) : f.call(null,G__2367));
})());
});
var G__2370__2 = (function (x,y){
return cljs.core.not((function (){var G__2368 = x;
var G__2369 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2368,G__2369) : f.call(null,G__2368,G__2369));
})());
});
var G__2370__3 = (function() { 
var G__2371__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__2371 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__2372__i = 0, G__2372__a = new Array(arguments.length -  2);
while (G__2372__i < G__2372__a.length) {G__2372__a[G__2372__i] = arguments[G__2372__i + 2]; ++G__2372__i;}
  zs = new cljs.core.IndexedSeq(G__2372__a,0);
} 
return G__2371__delegate.call(this,x,y,zs);};
G__2371.cljs$lang$maxFixedArity = 2;
G__2371.cljs$lang$applyTo = (function (arglist__2373){
var x = cljs.core.first(arglist__2373);
arglist__2373 = cljs.core.next(arglist__2373);
var y = cljs.core.first(arglist__2373);
var zs = cljs.core.rest(arglist__2373);
return G__2371__delegate(x,y,zs);
});
G__2371.cljs$core$IFn$_invoke$arity$variadic = G__2371__delegate;
return G__2371;
})()
;
G__2370 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__2370__0.call(this);
case 1:
return G__2370__1.call(this,x);
case 2:
return G__2370__2.call(this,x,y);
default:
var G__2374 = null;
if (arguments.length > 2) {
var G__2375__i = 0, G__2375__a = new Array(arguments.length -  2);
while (G__2375__i < G__2375__a.length) {G__2375__a[G__2375__i] = arguments[G__2375__i + 2]; ++G__2375__i;}
G__2374 = new cljs.core.IndexedSeq(G__2375__a,0);
}
return G__2370__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__2374);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2370.cljs$lang$maxFixedArity = 2;
G__2370.cljs$lang$applyTo = G__2370__3.cljs$lang$applyTo;
G__2370.cljs$core$IFn$_invoke$arity$0 = G__2370__0;
G__2370.cljs$core$IFn$_invoke$arity$1 = G__2370__1;
G__2370.cljs$core$IFn$_invoke$arity$2 = G__2370__2;
G__2370.cljs$core$IFn$_invoke$arity$variadic = G__2370__3.cljs$core$IFn$_invoke$arity$variadic;
return G__2370;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__2376__delegate = function (args){
return x;
};
var G__2376 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__2377__i = 0, G__2377__a = new Array(arguments.length -  0);
while (G__2377__i < G__2377__a.length) {G__2377__a[G__2377__i] = arguments[G__2377__i + 0]; ++G__2377__i;}
  args = new cljs.core.IndexedSeq(G__2377__a,0);
} 
return G__2376__delegate.call(this,args);};
G__2376.cljs$lang$maxFixedArity = 0;
G__2376.cljs$lang$applyTo = (function (arglist__2378){
var args = cljs.core.seq(arglist__2378);
return G__2376__delegate(args);
});
G__2376.cljs$core$IFn$_invoke$arity$variadic = G__2376__delegate;
return G__2376;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__2433 = null;
var G__2433__0 = (function (){
var G__2406 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2406) : f.call(null,G__2406));
});
var G__2433__1 = (function (x){
var G__2407 = (function (){var G__2408 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2408) : g.call(null,G__2408));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2407) : f.call(null,G__2407));
});
var G__2433__2 = (function (x,y){
var G__2409 = (function (){var G__2410 = x;
var G__2411 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__2410,G__2411) : g.call(null,G__2410,G__2411));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2409) : f.call(null,G__2409));
});
var G__2433__3 = (function (x,y,z){
var G__2412 = (function (){var G__2413 = x;
var G__2414 = y;
var G__2415 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__2413,G__2414,G__2415) : g.call(null,G__2413,G__2414,G__2415));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2412) : f.call(null,G__2412));
});
var G__2433__4 = (function() { 
var G__2434__delegate = function (x,y,z,args){
var G__2416 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2416) : f.call(null,G__2416));
};
var G__2434 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2435__i = 0, G__2435__a = new Array(arguments.length -  3);
while (G__2435__i < G__2435__a.length) {G__2435__a[G__2435__i] = arguments[G__2435__i + 3]; ++G__2435__i;}
  args = new cljs.core.IndexedSeq(G__2435__a,0);
} 
return G__2434__delegate.call(this,x,y,z,args);};
G__2434.cljs$lang$maxFixedArity = 3;
G__2434.cljs$lang$applyTo = (function (arglist__2436){
var x = cljs.core.first(arglist__2436);
arglist__2436 = cljs.core.next(arglist__2436);
var y = cljs.core.first(arglist__2436);
arglist__2436 = cljs.core.next(arglist__2436);
var z = cljs.core.first(arglist__2436);
var args = cljs.core.rest(arglist__2436);
return G__2434__delegate(x,y,z,args);
});
G__2434.cljs$core$IFn$_invoke$arity$variadic = G__2434__delegate;
return G__2434;
})()
;
G__2433 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2433__0.call(this);
case 1:
return G__2433__1.call(this,x);
case 2:
return G__2433__2.call(this,x,y);
case 3:
return G__2433__3.call(this,x,y,z);
default:
var G__2437 = null;
if (arguments.length > 3) {
var G__2438__i = 0, G__2438__a = new Array(arguments.length -  3);
while (G__2438__i < G__2438__a.length) {G__2438__a[G__2438__i] = arguments[G__2438__i + 3]; ++G__2438__i;}
G__2437 = new cljs.core.IndexedSeq(G__2438__a,0);
}
return G__2433__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2433.cljs$lang$maxFixedArity = 3;
G__2433.cljs$lang$applyTo = G__2433__4.cljs$lang$applyTo;
G__2433.cljs$core$IFn$_invoke$arity$0 = G__2433__0;
G__2433.cljs$core$IFn$_invoke$arity$1 = G__2433__1;
G__2433.cljs$core$IFn$_invoke$arity$2 = G__2433__2;
G__2433.cljs$core$IFn$_invoke$arity$3 = G__2433__3;
G__2433.cljs$core$IFn$_invoke$arity$variadic = G__2433__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2433;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__2439 = null;
var G__2439__0 = (function (){
var G__2417 = (function (){var G__2418 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2418) : g.call(null,G__2418));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2417) : f.call(null,G__2417));
});
var G__2439__1 = (function (x){
var G__2419 = (function (){var G__2420 = (function (){var G__2421 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__2421) : h.call(null,G__2421));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2420) : g.call(null,G__2420));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2419) : f.call(null,G__2419));
});
var G__2439__2 = (function (x,y){
var G__2422 = (function (){var G__2423 = (function (){var G__2424 = x;
var G__2425 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__2424,G__2425) : h.call(null,G__2424,G__2425));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2423) : g.call(null,G__2423));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2422) : f.call(null,G__2422));
});
var G__2439__3 = (function (x,y,z){
var G__2426 = (function (){var G__2427 = (function (){var G__2428 = x;
var G__2429 = y;
var G__2430 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__2428,G__2429,G__2430) : h.call(null,G__2428,G__2429,G__2430));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2427) : g.call(null,G__2427));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2426) : f.call(null,G__2426));
});
var G__2439__4 = (function() { 
var G__2440__delegate = function (x,y,z,args){
var G__2431 = (function (){var G__2432 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__2432) : g.call(null,G__2432));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2431) : f.call(null,G__2431));
};
var G__2440 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2441__i = 0, G__2441__a = new Array(arguments.length -  3);
while (G__2441__i < G__2441__a.length) {G__2441__a[G__2441__i] = arguments[G__2441__i + 3]; ++G__2441__i;}
  args = new cljs.core.IndexedSeq(G__2441__a,0);
} 
return G__2440__delegate.call(this,x,y,z,args);};
G__2440.cljs$lang$maxFixedArity = 3;
G__2440.cljs$lang$applyTo = (function (arglist__2442){
var x = cljs.core.first(arglist__2442);
arglist__2442 = cljs.core.next(arglist__2442);
var y = cljs.core.first(arglist__2442);
arglist__2442 = cljs.core.next(arglist__2442);
var z = cljs.core.first(arglist__2442);
var args = cljs.core.rest(arglist__2442);
return G__2440__delegate(x,y,z,args);
});
G__2440.cljs$core$IFn$_invoke$arity$variadic = G__2440__delegate;
return G__2440;
})()
;
G__2439 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2439__0.call(this);
case 1:
return G__2439__1.call(this,x);
case 2:
return G__2439__2.call(this,x,y);
case 3:
return G__2439__3.call(this,x,y,z);
default:
var G__2443 = null;
if (arguments.length > 3) {
var G__2444__i = 0, G__2444__a = new Array(arguments.length -  3);
while (G__2444__i < G__2444__a.length) {G__2444__a[G__2444__i] = arguments[G__2444__i + 3]; ++G__2444__i;}
G__2443 = new cljs.core.IndexedSeq(G__2444__a,0);
}
return G__2439__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2439.cljs$lang$maxFixedArity = 3;
G__2439.cljs$lang$applyTo = G__2439__4.cljs$lang$applyTo;
G__2439.cljs$core$IFn$_invoke$arity$0 = G__2439__0;
G__2439.cljs$core$IFn$_invoke$arity$1 = G__2439__1;
G__2439.cljs$core$IFn$_invoke$arity$2 = G__2439__2;
G__2439.cljs$core$IFn$_invoke$arity$3 = G__2439__3;
G__2439.cljs$core$IFn$_invoke$arity$variadic = G__2439__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2439;
})()
});
var cljs$core$comp__4 = (function() { 
var G__2445__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__2446__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__2447 = cljs.core.first(fs__$2).call(null,ret);
var G__2448 = cljs.core.next(fs__$2);
ret = G__2447;
fs__$2 = G__2448;
continue;
} else {
return ret;
}
break;
}
};
var G__2446 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__2449__i = 0, G__2449__a = new Array(arguments.length -  0);
while (G__2449__i < G__2449__a.length) {G__2449__a[G__2449__i] = arguments[G__2449__i + 0]; ++G__2449__i;}
  args = new cljs.core.IndexedSeq(G__2449__a,0);
} 
return G__2446__delegate.call(this,args);};
G__2446.cljs$lang$maxFixedArity = 0;
G__2446.cljs$lang$applyTo = (function (arglist__2450){
var args = cljs.core.seq(arglist__2450);
return G__2446__delegate(args);
});
G__2446.cljs$core$IFn$_invoke$arity$variadic = G__2446__delegate;
return G__2446;
})()
;
;})(fs__$1))
};
var G__2445 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__2451__i = 0, G__2451__a = new Array(arguments.length -  3);
while (G__2451__i < G__2451__a.length) {G__2451__a[G__2451__i] = arguments[G__2451__i + 3]; ++G__2451__i;}
  fs = new cljs.core.IndexedSeq(G__2451__a,0);
} 
return G__2445__delegate.call(this,f1,f2,f3,fs);};
G__2445.cljs$lang$maxFixedArity = 3;
G__2445.cljs$lang$applyTo = (function (arglist__2452){
var f1 = cljs.core.first(arglist__2452);
arglist__2452 = cljs.core.next(arglist__2452);
var f2 = cljs.core.first(arglist__2452);
arglist__2452 = cljs.core.next(arglist__2452);
var f3 = cljs.core.first(arglist__2452);
var fs = cljs.core.rest(arglist__2452);
return G__2445__delegate(f1,f2,f3,fs);
});
G__2445.cljs$core$IFn$_invoke$arity$variadic = G__2445__delegate;
return G__2445;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__2453 = null;
if (arguments.length > 3) {
var G__2454__i = 0, G__2454__a = new Array(arguments.length -  3);
while (G__2454__i < G__2454__a.length) {G__2454__a[G__2454__i] = arguments[G__2454__i + 3]; ++G__2454__i;}
G__2453 = new cljs.core.IndexedSeq(G__2454__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__2453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__2539 = null;
var G__2539__0 = (function (){
var G__2497 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2497) : f.call(null,G__2497));
});
var G__2539__1 = (function (x){
var G__2498 = arg1;
var G__2499 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2498,G__2499) : f.call(null,G__2498,G__2499));
});
var G__2539__2 = (function (x,y){
var G__2500 = arg1;
var G__2501 = x;
var G__2502 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2500,G__2501,G__2502) : f.call(null,G__2500,G__2501,G__2502));
});
var G__2539__3 = (function (x,y,z){
var G__2503 = arg1;
var G__2504 = x;
var G__2505 = y;
var G__2506 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2503,G__2504,G__2505,G__2506) : f.call(null,G__2503,G__2504,G__2505,G__2506));
});
var G__2539__4 = (function() { 
var G__2540__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__2540 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2541__i = 0, G__2541__a = new Array(arguments.length -  3);
while (G__2541__i < G__2541__a.length) {G__2541__a[G__2541__i] = arguments[G__2541__i + 3]; ++G__2541__i;}
  args = new cljs.core.IndexedSeq(G__2541__a,0);
} 
return G__2540__delegate.call(this,x,y,z,args);};
G__2540.cljs$lang$maxFixedArity = 3;
G__2540.cljs$lang$applyTo = (function (arglist__2542){
var x = cljs.core.first(arglist__2542);
arglist__2542 = cljs.core.next(arglist__2542);
var y = cljs.core.first(arglist__2542);
arglist__2542 = cljs.core.next(arglist__2542);
var z = cljs.core.first(arglist__2542);
var args = cljs.core.rest(arglist__2542);
return G__2540__delegate(x,y,z,args);
});
G__2540.cljs$core$IFn$_invoke$arity$variadic = G__2540__delegate;
return G__2540;
})()
;
G__2539 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2539__0.call(this);
case 1:
return G__2539__1.call(this,x);
case 2:
return G__2539__2.call(this,x,y);
case 3:
return G__2539__3.call(this,x,y,z);
default:
var G__2543 = null;
if (arguments.length > 3) {
var G__2544__i = 0, G__2544__a = new Array(arguments.length -  3);
while (G__2544__i < G__2544__a.length) {G__2544__a[G__2544__i] = arguments[G__2544__i + 3]; ++G__2544__i;}
G__2543 = new cljs.core.IndexedSeq(G__2544__a,0);
}
return G__2539__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2539.cljs$lang$maxFixedArity = 3;
G__2539.cljs$lang$applyTo = G__2539__4.cljs$lang$applyTo;
G__2539.cljs$core$IFn$_invoke$arity$0 = G__2539__0;
G__2539.cljs$core$IFn$_invoke$arity$1 = G__2539__1;
G__2539.cljs$core$IFn$_invoke$arity$2 = G__2539__2;
G__2539.cljs$core$IFn$_invoke$arity$3 = G__2539__3;
G__2539.cljs$core$IFn$_invoke$arity$variadic = G__2539__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2539;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__2545 = null;
var G__2545__0 = (function (){
var G__2507 = arg1;
var G__2508 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2507,G__2508) : f.call(null,G__2507,G__2508));
});
var G__2545__1 = (function (x){
var G__2509 = arg1;
var G__2510 = arg2;
var G__2511 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2509,G__2510,G__2511) : f.call(null,G__2509,G__2510,G__2511));
});
var G__2545__2 = (function (x,y){
var G__2512 = arg1;
var G__2513 = arg2;
var G__2514 = x;
var G__2515 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2512,G__2513,G__2514,G__2515) : f.call(null,G__2512,G__2513,G__2514,G__2515));
});
var G__2545__3 = (function (x,y,z){
var G__2516 = arg1;
var G__2517 = arg2;
var G__2518 = x;
var G__2519 = y;
var G__2520 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2516,G__2517,G__2518,G__2519,G__2520) : f.call(null,G__2516,G__2517,G__2518,G__2519,G__2520));
});
var G__2545__4 = (function() { 
var G__2546__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__2546 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2547__i = 0, G__2547__a = new Array(arguments.length -  3);
while (G__2547__i < G__2547__a.length) {G__2547__a[G__2547__i] = arguments[G__2547__i + 3]; ++G__2547__i;}
  args = new cljs.core.IndexedSeq(G__2547__a,0);
} 
return G__2546__delegate.call(this,x,y,z,args);};
G__2546.cljs$lang$maxFixedArity = 3;
G__2546.cljs$lang$applyTo = (function (arglist__2548){
var x = cljs.core.first(arglist__2548);
arglist__2548 = cljs.core.next(arglist__2548);
var y = cljs.core.first(arglist__2548);
arglist__2548 = cljs.core.next(arglist__2548);
var z = cljs.core.first(arglist__2548);
var args = cljs.core.rest(arglist__2548);
return G__2546__delegate(x,y,z,args);
});
G__2546.cljs$core$IFn$_invoke$arity$variadic = G__2546__delegate;
return G__2546;
})()
;
G__2545 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2545__0.call(this);
case 1:
return G__2545__1.call(this,x);
case 2:
return G__2545__2.call(this,x,y);
case 3:
return G__2545__3.call(this,x,y,z);
default:
var G__2549 = null;
if (arguments.length > 3) {
var G__2550__i = 0, G__2550__a = new Array(arguments.length -  3);
while (G__2550__i < G__2550__a.length) {G__2550__a[G__2550__i] = arguments[G__2550__i + 3]; ++G__2550__i;}
G__2549 = new cljs.core.IndexedSeq(G__2550__a,0);
}
return G__2545__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2549);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2545.cljs$lang$maxFixedArity = 3;
G__2545.cljs$lang$applyTo = G__2545__4.cljs$lang$applyTo;
G__2545.cljs$core$IFn$_invoke$arity$0 = G__2545__0;
G__2545.cljs$core$IFn$_invoke$arity$1 = G__2545__1;
G__2545.cljs$core$IFn$_invoke$arity$2 = G__2545__2;
G__2545.cljs$core$IFn$_invoke$arity$3 = G__2545__3;
G__2545.cljs$core$IFn$_invoke$arity$variadic = G__2545__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2545;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__2551 = null;
var G__2551__0 = (function (){
var G__2521 = arg1;
var G__2522 = arg2;
var G__2523 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2521,G__2522,G__2523) : f.call(null,G__2521,G__2522,G__2523));
});
var G__2551__1 = (function (x){
var G__2524 = arg1;
var G__2525 = arg2;
var G__2526 = arg3;
var G__2527 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2524,G__2525,G__2526,G__2527) : f.call(null,G__2524,G__2525,G__2526,G__2527));
});
var G__2551__2 = (function (x,y){
var G__2528 = arg1;
var G__2529 = arg2;
var G__2530 = arg3;
var G__2531 = x;
var G__2532 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__2528,G__2529,G__2530,G__2531,G__2532) : f.call(null,G__2528,G__2529,G__2530,G__2531,G__2532));
});
var G__2551__3 = (function (x,y,z){
var G__2533 = arg1;
var G__2534 = arg2;
var G__2535 = arg3;
var G__2536 = x;
var G__2537 = y;
var G__2538 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__2533,G__2534,G__2535,G__2536,G__2537,G__2538) : f.call(null,G__2533,G__2534,G__2535,G__2536,G__2537,G__2538));
});
var G__2551__4 = (function() { 
var G__2552__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__2552 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__2553__i = 0, G__2553__a = new Array(arguments.length -  3);
while (G__2553__i < G__2553__a.length) {G__2553__a[G__2553__i] = arguments[G__2553__i + 3]; ++G__2553__i;}
  args = new cljs.core.IndexedSeq(G__2553__a,0);
} 
return G__2552__delegate.call(this,x,y,z,args);};
G__2552.cljs$lang$maxFixedArity = 3;
G__2552.cljs$lang$applyTo = (function (arglist__2554){
var x = cljs.core.first(arglist__2554);
arglist__2554 = cljs.core.next(arglist__2554);
var y = cljs.core.first(arglist__2554);
arglist__2554 = cljs.core.next(arglist__2554);
var z = cljs.core.first(arglist__2554);
var args = cljs.core.rest(arglist__2554);
return G__2552__delegate(x,y,z,args);
});
G__2552.cljs$core$IFn$_invoke$arity$variadic = G__2552__delegate;
return G__2552;
})()
;
G__2551 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__2551__0.call(this);
case 1:
return G__2551__1.call(this,x);
case 2:
return G__2551__2.call(this,x,y);
case 3:
return G__2551__3.call(this,x,y,z);
default:
var G__2555 = null;
if (arguments.length > 3) {
var G__2556__i = 0, G__2556__a = new Array(arguments.length -  3);
while (G__2556__i < G__2556__a.length) {G__2556__a[G__2556__i] = arguments[G__2556__i + 3]; ++G__2556__i;}
G__2555 = new cljs.core.IndexedSeq(G__2556__a,0);
}
return G__2551__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__2555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2551.cljs$lang$maxFixedArity = 3;
G__2551.cljs$lang$applyTo = G__2551__4.cljs$lang$applyTo;
G__2551.cljs$core$IFn$_invoke$arity$0 = G__2551__0;
G__2551.cljs$core$IFn$_invoke$arity$1 = G__2551__1;
G__2551.cljs$core$IFn$_invoke$arity$2 = G__2551__2;
G__2551.cljs$core$IFn$_invoke$arity$3 = G__2551__3;
G__2551.cljs$core$IFn$_invoke$arity$variadic = G__2551__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2551;
})()
});
var cljs$core$partial__5 = (function() { 
var G__2557__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__2558__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__2558 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__2559__i = 0, G__2559__a = new Array(arguments.length -  0);
while (G__2559__i < G__2559__a.length) {G__2559__a[G__2559__i] = arguments[G__2559__i + 0]; ++G__2559__i;}
  args = new cljs.core.IndexedSeq(G__2559__a,0);
} 
return G__2558__delegate.call(this,args);};
G__2558.cljs$lang$maxFixedArity = 0;
G__2558.cljs$lang$applyTo = (function (arglist__2560){
var args = cljs.core.seq(arglist__2560);
return G__2558__delegate(args);
});
G__2558.cljs$core$IFn$_invoke$arity$variadic = G__2558__delegate;
return G__2558;
})()
;
};
var G__2557 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__2561__i = 0, G__2561__a = new Array(arguments.length -  4);
while (G__2561__i < G__2561__a.length) {G__2561__a[G__2561__i] = arguments[G__2561__i + 4]; ++G__2561__i;}
  more = new cljs.core.IndexedSeq(G__2561__a,0);
} 
return G__2557__delegate.call(this,f,arg1,arg2,arg3,more);};
G__2557.cljs$lang$maxFixedArity = 4;
G__2557.cljs$lang$applyTo = (function (arglist__2562){
var f = cljs.core.first(arglist__2562);
arglist__2562 = cljs.core.next(arglist__2562);
var arg1 = cljs.core.first(arglist__2562);
arglist__2562 = cljs.core.next(arglist__2562);
var arg2 = cljs.core.first(arglist__2562);
arglist__2562 = cljs.core.next(arglist__2562);
var arg3 = cljs.core.first(arglist__2562);
var more = cljs.core.rest(arglist__2562);
return G__2557__delegate(f,arg1,arg2,arg3,more);
});
G__2557.cljs$core$IFn$_invoke$arity$variadic = G__2557__delegate;
return G__2557;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__2563 = null;
if (arguments.length > 4) {
var G__2564__i = 0, G__2564__a = new Array(arguments.length -  4);
while (G__2564__i < G__2564__a.length) {G__2564__a[G__2564__i] = arguments[G__2564__i + 4]; ++G__2564__i;}
G__2563 = new cljs.core.IndexedSeq(G__2564__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__2563);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__2597 = null;
var G__2597__1 = (function (a){
var G__2581 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2581) : f.call(null,G__2581));
});
var G__2597__2 = (function (a,b){
var G__2582 = (((a == null))?x:a);
var G__2583 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2582,G__2583) : f.call(null,G__2582,G__2583));
});
var G__2597__3 = (function (a,b,c){
var G__2584 = (((a == null))?x:a);
var G__2585 = b;
var G__2586 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2584,G__2585,G__2586) : f.call(null,G__2584,G__2585,G__2586));
});
var G__2597__4 = (function() { 
var G__2598__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__2598 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__2599__i = 0, G__2599__a = new Array(arguments.length -  3);
while (G__2599__i < G__2599__a.length) {G__2599__a[G__2599__i] = arguments[G__2599__i + 3]; ++G__2599__i;}
  ds = new cljs.core.IndexedSeq(G__2599__a,0);
} 
return G__2598__delegate.call(this,a,b,c,ds);};
G__2598.cljs$lang$maxFixedArity = 3;
G__2598.cljs$lang$applyTo = (function (arglist__2600){
var a = cljs.core.first(arglist__2600);
arglist__2600 = cljs.core.next(arglist__2600);
var b = cljs.core.first(arglist__2600);
arglist__2600 = cljs.core.next(arglist__2600);
var c = cljs.core.first(arglist__2600);
var ds = cljs.core.rest(arglist__2600);
return G__2598__delegate(a,b,c,ds);
});
G__2598.cljs$core$IFn$_invoke$arity$variadic = G__2598__delegate;
return G__2598;
})()
;
G__2597 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__2597__1.call(this,a);
case 2:
return G__2597__2.call(this,a,b);
case 3:
return G__2597__3.call(this,a,b,c);
default:
var G__2601 = null;
if (arguments.length > 3) {
var G__2602__i = 0, G__2602__a = new Array(arguments.length -  3);
while (G__2602__i < G__2602__a.length) {G__2602__a[G__2602__i] = arguments[G__2602__i + 3]; ++G__2602__i;}
G__2601 = new cljs.core.IndexedSeq(G__2602__a,0);
}
return G__2597__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__2601);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2597.cljs$lang$maxFixedArity = 3;
G__2597.cljs$lang$applyTo = G__2597__4.cljs$lang$applyTo;
G__2597.cljs$core$IFn$_invoke$arity$1 = G__2597__1;
G__2597.cljs$core$IFn$_invoke$arity$2 = G__2597__2;
G__2597.cljs$core$IFn$_invoke$arity$3 = G__2597__3;
G__2597.cljs$core$IFn$_invoke$arity$variadic = G__2597__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2597;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__2603 = null;
var G__2603__2 = (function (a,b){
var G__2587 = (((a == null))?x:a);
var G__2588 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2587,G__2588) : f.call(null,G__2587,G__2588));
});
var G__2603__3 = (function (a,b,c){
var G__2589 = (((a == null))?x:a);
var G__2590 = (((b == null))?y:b);
var G__2591 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2589,G__2590,G__2591) : f.call(null,G__2589,G__2590,G__2591));
});
var G__2603__4 = (function() { 
var G__2604__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__2604 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__2605__i = 0, G__2605__a = new Array(arguments.length -  3);
while (G__2605__i < G__2605__a.length) {G__2605__a[G__2605__i] = arguments[G__2605__i + 3]; ++G__2605__i;}
  ds = new cljs.core.IndexedSeq(G__2605__a,0);
} 
return G__2604__delegate.call(this,a,b,c,ds);};
G__2604.cljs$lang$maxFixedArity = 3;
G__2604.cljs$lang$applyTo = (function (arglist__2606){
var a = cljs.core.first(arglist__2606);
arglist__2606 = cljs.core.next(arglist__2606);
var b = cljs.core.first(arglist__2606);
arglist__2606 = cljs.core.next(arglist__2606);
var c = cljs.core.first(arglist__2606);
var ds = cljs.core.rest(arglist__2606);
return G__2604__delegate(a,b,c,ds);
});
G__2604.cljs$core$IFn$_invoke$arity$variadic = G__2604__delegate;
return G__2604;
})()
;
G__2603 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__2603__2.call(this,a,b);
case 3:
return G__2603__3.call(this,a,b,c);
default:
var G__2607 = null;
if (arguments.length > 3) {
var G__2608__i = 0, G__2608__a = new Array(arguments.length -  3);
while (G__2608__i < G__2608__a.length) {G__2608__a[G__2608__i] = arguments[G__2608__i + 3]; ++G__2608__i;}
G__2607 = new cljs.core.IndexedSeq(G__2608__a,0);
}
return G__2603__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__2607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2603.cljs$lang$maxFixedArity = 3;
G__2603.cljs$lang$applyTo = G__2603__4.cljs$lang$applyTo;
G__2603.cljs$core$IFn$_invoke$arity$2 = G__2603__2;
G__2603.cljs$core$IFn$_invoke$arity$3 = G__2603__3;
G__2603.cljs$core$IFn$_invoke$arity$variadic = G__2603__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2603;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__2609 = null;
var G__2609__2 = (function (a,b){
var G__2592 = (((a == null))?x:a);
var G__2593 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2592,G__2593) : f.call(null,G__2592,G__2593));
});
var G__2609__3 = (function (a,b,c){
var G__2594 = (((a == null))?x:a);
var G__2595 = (((b == null))?y:b);
var G__2596 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2594,G__2595,G__2596) : f.call(null,G__2594,G__2595,G__2596));
});
var G__2609__4 = (function() { 
var G__2610__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__2610 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__2611__i = 0, G__2611__a = new Array(arguments.length -  3);
while (G__2611__i < G__2611__a.length) {G__2611__a[G__2611__i] = arguments[G__2611__i + 3]; ++G__2611__i;}
  ds = new cljs.core.IndexedSeq(G__2611__a,0);
} 
return G__2610__delegate.call(this,a,b,c,ds);};
G__2610.cljs$lang$maxFixedArity = 3;
G__2610.cljs$lang$applyTo = (function (arglist__2612){
var a = cljs.core.first(arglist__2612);
arglist__2612 = cljs.core.next(arglist__2612);
var b = cljs.core.first(arglist__2612);
arglist__2612 = cljs.core.next(arglist__2612);
var c = cljs.core.first(arglist__2612);
var ds = cljs.core.rest(arglist__2612);
return G__2610__delegate(a,b,c,ds);
});
G__2610.cljs$core$IFn$_invoke$arity$variadic = G__2610__delegate;
return G__2610;
})()
;
G__2609 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__2609__2.call(this,a,b);
case 3:
return G__2609__3.call(this,a,b,c);
default:
var G__2613 = null;
if (arguments.length > 3) {
var G__2614__i = 0, G__2614__a = new Array(arguments.length -  3);
while (G__2614__i < G__2614__a.length) {G__2614__a[G__2614__i] = arguments[G__2614__i + 3]; ++G__2614__i;}
G__2613 = new cljs.core.IndexedSeq(G__2614__a,0);
}
return G__2609__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__2613);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2609.cljs$lang$maxFixedArity = 3;
G__2609.cljs$lang$applyTo = G__2609__4.cljs$lang$applyTo;
G__2609.cljs$core$IFn$_invoke$arity$2 = G__2609__2;
G__2609.cljs$core$IFn$_invoke$arity$3 = G__2609__3;
G__2609.cljs$core$IFn$_invoke$arity$variadic = G__2609__4.cljs$core$IFn$_invoke$arity$variadic;
return G__2609;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__2645 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__2645) : cljs.core.volatile_BANG_.call(null,G__2645));
})();
return ((function (i){
return (function() {
var G__2675 = null;
var G__2675__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__2675__1 = (function (result){
var G__2646 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__2646) : rf.call(null,G__2646));
});
var G__2675__2 = (function (result,input){
var G__2647 = result;
var G__2648 = (function (){var G__2649 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__2650 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2649,G__2650) : f.call(null,G__2649,G__2650));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__2647,G__2648) : rf.call(null,G__2647,G__2648));
});
G__2675 = function(result,input){
switch(arguments.length){
case 0:
return G__2675__0.call(this);
case 1:
return G__2675__1.call(this,result);
case 2:
return G__2675__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2675.cljs$core$IFn$_invoke$arity$0 = G__2675__0;
G__2675.cljs$core$IFn$_invoke$arity$1 = G__2675__1;
G__2675.cljs$core$IFn$_invoke$arity$2 = G__2675__2;
return G__2675;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4378__auto___2676 = size;
var i_2677 = (0);
while(true){
if((i_2677 < n__4378__auto___2676)){
cljs.core.chunk_append(b,(function (){var G__2671 = (idx + i_2677);
var G__2672 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_2677);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2671,G__2672) : f.call(null,G__2671,G__2672));
})());

var G__2678 = (i_2677 + (1));
i_2677 = G__2678;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__2673 = idx;
var G__2674 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2673,G__2674) : f.call(null,G__2673,G__2674));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__2697 = null;
var G__2697__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__2697__1 = (function (result){
var G__2691 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__2691) : rf.call(null,G__2691));
});
var G__2697__2 = (function (result,input){
var v = (function (){var G__2692 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2692) : f.call(null,G__2692));
})();
if((v == null)){
return result;
} else {
var G__2693 = result;
var G__2694 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__2693,G__2694) : rf.call(null,G__2693,G__2694));
}
});
G__2697 = function(result,input){
switch(arguments.length){
case 0:
return G__2697__0.call(this);
case 1:
return G__2697__1.call(this,result);
case 2:
return G__2697__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2697.cljs$core$IFn$_invoke$arity$0 = G__2697__0;
G__2697.cljs$core$IFn$_invoke$arity$1 = G__2697__1;
G__2697.cljs$core$IFn$_invoke$arity$2 = G__2697__2;
return G__2697;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4378__auto___2698 = size;
var i_2699 = (0);
while(true){
if((i_2699 < n__4378__auto___2698)){
var x_2700 = (function (){var G__2695 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_2699);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2695) : f.call(null,G__2695));
})();
if((x_2700 == null)){
} else {
cljs.core.chunk_append(b,x_2700);
}

var G__2701 = (i_2699 + (1));
i_2699 = G__2701;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__2696 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2696) : f.call(null,G__2696));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__2702 = this$__$1;
return goog.getUid(G__2702);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__2703 = cljs.core.seq(self__.watches);
var chunk__2704 = null;
var count__2705 = (0);
var i__2706 = (0);
while(true){
if((i__2706 < count__2705)){
var vec__2707 = chunk__2704.cljs$core$IIndexed$_nth$arity$2(null,i__2706);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2707,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2707,(1),null);
var G__2708_2717 = key;
var G__2709_2718 = this$__$1;
var G__2710_2719 = oldval;
var G__2711_2720 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2708_2717,G__2709_2718,G__2710_2719,G__2711_2720) : f.call(null,G__2708_2717,G__2709_2718,G__2710_2719,G__2711_2720));

var G__2721 = seq__2703;
var G__2722 = chunk__2704;
var G__2723 = count__2705;
var G__2724 = (i__2706 + (1));
seq__2703 = G__2721;
chunk__2704 = G__2722;
count__2705 = G__2723;
i__2706 = G__2724;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__2703);
if(temp__4126__auto__){
var seq__2703__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__2703__$1)){
var c__4326__auto__ = cljs.core.chunk_first(seq__2703__$1);
var G__2725 = cljs.core.chunk_rest(seq__2703__$1);
var G__2726 = c__4326__auto__;
var G__2727 = cljs.core.count(c__4326__auto__);
var G__2728 = (0);
seq__2703 = G__2725;
chunk__2704 = G__2726;
count__2705 = G__2727;
i__2706 = G__2728;
continue;
} else {
var vec__2712 = cljs.core.first(seq__2703__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2712,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__2712,(1),null);
var G__2713_2729 = key;
var G__2714_2730 = this$__$1;
var G__2715_2731 = oldval;
var G__2716_2732 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__2713_2729,G__2714_2730,G__2715_2731,G__2716_2732) : f.call(null,G__2713_2729,G__2714_2730,G__2715_2731,G__2716_2732));

var G__2733 = cljs.core.next(seq__2703__$1);
var G__2734 = null;
var G__2735 = (0);
var G__2736 = (0);
seq__2703 = G__2733;
chunk__2704 = G__2734;
count__2705 = G__2735;
i__2706 = G__2736;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__2740__delegate = function (x,p__2737){
var map__2739 = p__2737;
var map__2739__$1 = ((cljs.core.seq_QMARK_(map__2739))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__2739):map__2739);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2739__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__2739__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__2740 = function (x,var_args){
var p__2737 = null;
if (arguments.length > 1) {
var G__2741__i = 0, G__2741__a = new Array(arguments.length -  1);
while (G__2741__i < G__2741__a.length) {G__2741__a[G__2741__i] = arguments[G__2741__i + 1]; ++G__2741__i;}
  p__2737 = new cljs.core.IndexedSeq(G__2741__a,0);
} 
return G__2740__delegate.call(this,x,p__2737);};
G__2740.cljs$lang$maxFixedArity = 1;
G__2740.cljs$lang$applyTo = (function (arglist__2742){
var x = cljs.core.first(arglist__2742);
var p__2737 = cljs.core.rest(arglist__2742);
return G__2740__delegate(x,p__2737);
});
G__2740.cljs$core$IFn$_invoke$arity$variadic = G__2740__delegate;
return G__2740;
})()
;
cljs$core$atom = function(x,var_args){
var p__2737 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__2743 = null;
if (arguments.length > 1) {
var G__2744__i = 0, G__2744__a = new Array(arguments.length -  1);
while (G__2744__i < G__2744__a.length) {G__2744__a[G__2744__i] = arguments[G__2744__i + 1]; ++G__2744__i;}
G__2743 = new cljs.core.IndexedSeq(G__2744__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__2743);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__2747 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__2747) : validate.call(null,G__2747));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__2748 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__2748) : cljs.core.pr_str.call(null,G__2748));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__2755 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__2755) : f.call(null,G__2755));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__2756 = a.state;
var G__2757 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2756,G__2757) : f.call(null,G__2756,G__2757));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__2758 = a.state;
var G__2759 = x;
var G__2760 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__2758,G__2759,G__2760) : f.call(null,G__2758,G__2759,G__2760));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__2761__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__2761 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__2762__i = 0, G__2762__a = new Array(arguments.length -  4);
while (G__2762__i < G__2762__a.length) {G__2762__a[G__2762__i] = arguments[G__2762__i + 4]; ++G__2762__i;}
  more = new cljs.core.IndexedSeq(G__2762__a,0);
} 
return G__2761__delegate.call(this,a,f,x,y,more);};
G__2761.cljs$lang$maxFixedArity = 4;
G__2761.cljs$lang$applyTo = (function (arglist__2763){
var a = cljs.core.first(arglist__2763);
arglist__2763 = cljs.core.next(arglist__2763);
var f = cljs.core.first(arglist__2763);
arglist__2763 = cljs.core.next(arglist__2763);
var x = cljs.core.first(arglist__2763);
arglist__2763 = cljs.core.next(arglist__2763);
var y = cljs.core.first(arglist__2763);
var more = cljs.core.rest(arglist__2763);
return G__2761__delegate(a,f,x,y,more);
});
G__2761.cljs$core$IFn$_invoke$arity$variadic = G__2761__delegate;
return G__2761;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__2764 = null;
if (arguments.length > 4) {
var G__2765__i = 0, G__2765__a = new Array(arguments.length -  4);
while (G__2765__i < G__2765__a.length) {G__2765__a[G__2765__i] = arguments[G__2765__i + 4]; ++G__2765__i;}
G__2764 = new cljs.core.IndexedSeq(G__2765__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__2764);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__2832 = null;
var G__2832__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__2832__1 = (function (result){
var G__2799 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__2799) : rf.call(null,G__2799));
});
var G__2832__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__2800 = i;
var G__2801 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2800,G__2801) : f.call(null,G__2800,G__2801));
})();
if((v == null)){
return result;
} else {
var G__2802 = result;
var G__2803 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__2802,G__2803) : rf.call(null,G__2802,G__2803));
}
});
G__2832 = function(result,input){
switch(arguments.length){
case 0:
return G__2832__0.call(this);
case 1:
return G__2832__1.call(this,result);
case 2:
return G__2832__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__2832.cljs$core$IFn$_invoke$arity$0 = G__2832__0;
G__2832.cljs$core$IFn$_invoke$arity$1 = G__2832__1;
G__2832.cljs$core$IFn$_invoke$arity$2 = G__2832__2;
return G__2832;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4378__auto___2833 = size;
var i_2834 = (0);
while(true){
if((i_2834 < n__4378__auto___2833)){
var x_2835 = (function (){var G__2828 = (idx + i_2834);
var G__2829 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_2834);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2828,G__2829) : f.call(null,G__2828,G__2829));
})();
if((x_2835 == null)){
} else {
cljs.core.chunk_append(b,x_2835);
}

var G__2836 = (i_2834 + (1));
i_2834 = G__2836;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__2830 = idx;
var G__2831 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__2830,G__2831) : f.call(null,G__2830,G__2831));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__3050 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3050) : p.call(null,G__3050));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3949__auto__ = (function (){var G__3052 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3052) : p.call(null,G__3052));
})();
if(cljs.core.truth_(and__3949__auto__)){
var G__3053 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3053) : p.call(null,G__3053));
} else {
return and__3949__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3949__auto__ = (function (){var G__3055 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3055) : p.call(null,G__3055));
})();
if(cljs.core.truth_(and__3949__auto__)){
var and__3949__auto____$1 = (function (){var G__3057 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3057) : p.call(null,G__3057));
})();
if(cljs.core.truth_(and__3949__auto____$1)){
var G__3058 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3058) : p.call(null,G__3058));
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__3227__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__3227 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3228__i = 0, G__3228__a = new Array(arguments.length -  3);
while (G__3228__i < G__3228__a.length) {G__3228__a[G__3228__i] = arguments[G__3228__i + 3]; ++G__3228__i;}
  args = new cljs.core.IndexedSeq(G__3228__a,0);
} 
return G__3227__delegate.call(this,x,y,z,args);};
G__3227.cljs$lang$maxFixedArity = 3;
G__3227.cljs$lang$applyTo = (function (arglist__3229){
var x = cljs.core.first(arglist__3229);
arglist__3229 = cljs.core.next(arglist__3229);
var y = cljs.core.first(arglist__3229);
arglist__3229 = cljs.core.next(arglist__3229);
var z = cljs.core.first(arglist__3229);
var args = cljs.core.rest(arglist__3229);
return G__3227__delegate(x,y,z,args);
});
G__3227.cljs$core$IFn$_invoke$arity$variadic = G__3227__delegate;
return G__3227;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__3230 = null;
if (arguments.length > 3) {
var G__3231__i = 0, G__3231__a = new Array(arguments.length -  3);
while (G__3231__i < G__3231__a.length) {G__3231__a[G__3231__i] = arguments[G__3231__i + 3]; ++G__3231__i;}
G__3230 = new cljs.core.IndexedSeq(G__3231__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3949__auto__ = (function (){var G__3090 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3090) : p1.call(null,G__3090));
})();
if(cljs.core.truth_(and__3949__auto__)){
var G__3091 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3091) : p2.call(null,G__3091));
} else {
return and__3949__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3949__auto__ = (function (){var G__3093 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3093) : p1.call(null,G__3093));
})();
if(cljs.core.truth_(and__3949__auto__)){
var and__3949__auto____$1 = (function (){var G__3095 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3095) : p1.call(null,G__3095));
})();
if(cljs.core.truth_(and__3949__auto____$1)){
var and__3949__auto____$2 = (function (){var G__3097 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3097) : p2.call(null,G__3097));
})();
if(cljs.core.truth_(and__3949__auto____$2)){
var G__3098 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3098) : p2.call(null,G__3098));
} else {
return and__3949__auto____$2;
}
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3949__auto__ = (function (){var G__3100 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3100) : p1.call(null,G__3100));
})();
if(cljs.core.truth_(and__3949__auto__)){
var and__3949__auto____$1 = (function (){var G__3102 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3102) : p1.call(null,G__3102));
})();
if(cljs.core.truth_(and__3949__auto____$1)){
var and__3949__auto____$2 = (function (){var G__3104 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3104) : p1.call(null,G__3104));
})();
if(cljs.core.truth_(and__3949__auto____$2)){
var and__3949__auto____$3 = (function (){var G__3106 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3106) : p2.call(null,G__3106));
})();
if(cljs.core.truth_(and__3949__auto____$3)){
var and__3949__auto____$4 = (function (){var G__3108 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3108) : p2.call(null,G__3108));
})();
if(cljs.core.truth_(and__3949__auto____$4)){
var G__3109 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3109) : p2.call(null,G__3109));
} else {
return and__3949__auto____$4;
}
} else {
return and__3949__auto____$3;
}
} else {
return and__3949__auto____$2;
}
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__3232__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__2837_SHARP_){
var and__3949__auto__ = (function (){var G__3114 = p1__2837_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3114) : p1.call(null,G__3114));
})();
if(cljs.core.truth_(and__3949__auto__)){
var G__3115 = p1__2837_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3115) : p2.call(null,G__3115));
} else {
return and__3949__auto__;
}
}),args)));
};
var G__3232 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3233__i = 0, G__3233__a = new Array(arguments.length -  3);
while (G__3233__i < G__3233__a.length) {G__3233__a[G__3233__i] = arguments[G__3233__i + 3]; ++G__3233__i;}
  args = new cljs.core.IndexedSeq(G__3233__a,0);
} 
return G__3232__delegate.call(this,x,y,z,args);};
G__3232.cljs$lang$maxFixedArity = 3;
G__3232.cljs$lang$applyTo = (function (arglist__3234){
var x = cljs.core.first(arglist__3234);
arglist__3234 = cljs.core.next(arglist__3234);
var y = cljs.core.first(arglist__3234);
arglist__3234 = cljs.core.next(arglist__3234);
var z = cljs.core.first(arglist__3234);
var args = cljs.core.rest(arglist__3234);
return G__3232__delegate(x,y,z,args);
});
G__3232.cljs$core$IFn$_invoke$arity$variadic = G__3232__delegate;
return G__3232;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__3235 = null;
if (arguments.length > 3) {
var G__3236__i = 0, G__3236__a = new Array(arguments.length -  3);
while (G__3236__i < G__3236__a.length) {G__3236__a[G__3236__i] = arguments[G__3236__i + 3]; ++G__3236__i;}
G__3235 = new cljs.core.IndexedSeq(G__3236__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3235);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3949__auto__ = (function (){var G__3161 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3161) : p1.call(null,G__3161));
})();
if(cljs.core.truth_(and__3949__auto__)){
var and__3949__auto____$1 = (function (){var G__3163 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3163) : p2.call(null,G__3163));
})();
if(cljs.core.truth_(and__3949__auto____$1)){
var G__3164 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3164) : p3.call(null,G__3164));
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3949__auto__ = (function (){var G__3166 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3166) : p1.call(null,G__3166));
})();
if(cljs.core.truth_(and__3949__auto__)){
var and__3949__auto____$1 = (function (){var G__3168 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3168) : p2.call(null,G__3168));
})();
if(cljs.core.truth_(and__3949__auto____$1)){
var and__3949__auto____$2 = (function (){var G__3170 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3170) : p3.call(null,G__3170));
})();
if(cljs.core.truth_(and__3949__auto____$2)){
var and__3949__auto____$3 = (function (){var G__3172 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3172) : p1.call(null,G__3172));
})();
if(cljs.core.truth_(and__3949__auto____$3)){
var and__3949__auto____$4 = (function (){var G__3174 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3174) : p2.call(null,G__3174));
})();
if(cljs.core.truth_(and__3949__auto____$4)){
var G__3175 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3175) : p3.call(null,G__3175));
} else {
return and__3949__auto____$4;
}
} else {
return and__3949__auto____$3;
}
} else {
return and__3949__auto____$2;
}
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3949__auto__ = (function (){var G__3177 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3177) : p1.call(null,G__3177));
})();
if(cljs.core.truth_(and__3949__auto__)){
var and__3949__auto____$1 = (function (){var G__3179 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3179) : p2.call(null,G__3179));
})();
if(cljs.core.truth_(and__3949__auto____$1)){
var and__3949__auto____$2 = (function (){var G__3181 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3181) : p3.call(null,G__3181));
})();
if(cljs.core.truth_(and__3949__auto____$2)){
var and__3949__auto____$3 = (function (){var G__3183 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3183) : p1.call(null,G__3183));
})();
if(cljs.core.truth_(and__3949__auto____$3)){
var and__3949__auto____$4 = (function (){var G__3185 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3185) : p2.call(null,G__3185));
})();
if(cljs.core.truth_(and__3949__auto____$4)){
var and__3949__auto____$5 = (function (){var G__3187 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3187) : p3.call(null,G__3187));
})();
if(cljs.core.truth_(and__3949__auto____$5)){
var and__3949__auto____$6 = (function (){var G__3189 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3189) : p1.call(null,G__3189));
})();
if(cljs.core.truth_(and__3949__auto____$6)){
var and__3949__auto____$7 = (function (){var G__3191 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3191) : p2.call(null,G__3191));
})();
if(cljs.core.truth_(and__3949__auto____$7)){
var G__3192 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3192) : p3.call(null,G__3192));
} else {
return and__3949__auto____$7;
}
} else {
return and__3949__auto____$6;
}
} else {
return and__3949__auto____$5;
}
} else {
return and__3949__auto____$4;
}
} else {
return and__3949__auto____$3;
}
} else {
return and__3949__auto____$2;
}
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__3237__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__2838_SHARP_){
var and__3949__auto__ = (function (){var G__3199 = p1__2838_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3199) : p1.call(null,G__3199));
})();
if(cljs.core.truth_(and__3949__auto__)){
var and__3949__auto____$1 = (function (){var G__3201 = p1__2838_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3201) : p2.call(null,G__3201));
})();
if(cljs.core.truth_(and__3949__auto____$1)){
var G__3202 = p1__2838_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3202) : p3.call(null,G__3202));
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
}),args)));
};
var G__3237 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3238__i = 0, G__3238__a = new Array(arguments.length -  3);
while (G__3238__i < G__3238__a.length) {G__3238__a[G__3238__i] = arguments[G__3238__i + 3]; ++G__3238__i;}
  args = new cljs.core.IndexedSeq(G__3238__a,0);
} 
return G__3237__delegate.call(this,x,y,z,args);};
G__3237.cljs$lang$maxFixedArity = 3;
G__3237.cljs$lang$applyTo = (function (arglist__3239){
var x = cljs.core.first(arglist__3239);
arglist__3239 = cljs.core.next(arglist__3239);
var y = cljs.core.first(arglist__3239);
arglist__3239 = cljs.core.next(arglist__3239);
var z = cljs.core.first(arglist__3239);
var args = cljs.core.rest(arglist__3239);
return G__3237__delegate(x,y,z,args);
});
G__3237.cljs$core$IFn$_invoke$arity$variadic = G__3237__delegate;
return G__3237;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__3240 = null;
if (arguments.length > 3) {
var G__3241__i = 0, G__3241__a = new Array(arguments.length -  3);
while (G__3241__i < G__3241__a.length) {G__3241__a[G__3241__i] = arguments[G__3241__i + 3]; ++G__3241__i;}
G__3240 = new cljs.core.IndexedSeq(G__3241__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__3242__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__2839_SHARP_){
var G__3218 = x;
return (p1__2839_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2839_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3218) : p1__2839_SHARP_.call(null,G__3218));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__2840_SHARP_){
var and__3949__auto__ = (function (){var G__3220 = x;
return (p1__2840_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2840_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3220) : p1__2840_SHARP_.call(null,G__3220));
})();
if(cljs.core.truth_(and__3949__auto__)){
var G__3221 = y;
return (p1__2840_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2840_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3221) : p1__2840_SHARP_.call(null,G__3221));
} else {
return and__3949__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__2841_SHARP_){
var and__3949__auto__ = (function (){var G__3223 = x;
return (p1__2841_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2841_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3223) : p1__2841_SHARP_.call(null,G__3223));
})();
if(cljs.core.truth_(and__3949__auto__)){
var and__3949__auto____$1 = (function (){var G__3225 = y;
return (p1__2841_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2841_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3225) : p1__2841_SHARP_.call(null,G__3225));
})();
if(cljs.core.truth_(and__3949__auto____$1)){
var G__3226 = z;
return (p1__2841_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__2841_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3226) : p1__2841_SHARP_.call(null,G__3226));
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__3243__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__2842_SHARP_){
return cljs.core.every_QMARK_(p1__2842_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__3243 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3244__i = 0, G__3244__a = new Array(arguments.length -  3);
while (G__3244__i < G__3244__a.length) {G__3244__a[G__3244__i] = arguments[G__3244__i + 3]; ++G__3244__i;}
  args = new cljs.core.IndexedSeq(G__3244__a,0);
} 
return G__3243__delegate.call(this,x,y,z,args);};
G__3243.cljs$lang$maxFixedArity = 3;
G__3243.cljs$lang$applyTo = (function (arglist__3245){
var x = cljs.core.first(arglist__3245);
arglist__3245 = cljs.core.next(arglist__3245);
var y = cljs.core.first(arglist__3245);
arglist__3245 = cljs.core.next(arglist__3245);
var z = cljs.core.first(arglist__3245);
var args = cljs.core.rest(arglist__3245);
return G__3243__delegate(x,y,z,args);
});
G__3243.cljs$core$IFn$_invoke$arity$variadic = G__3243__delegate;
return G__3243;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__3246 = null;
if (arguments.length > 3) {
var G__3247__i = 0, G__3247__a = new Array(arguments.length -  3);
while (G__3247__i < G__3247__a.length) {G__3247__a[G__3247__i] = arguments[G__3247__i + 3]; ++G__3247__i;}
G__3246 = new cljs.core.IndexedSeq(G__3247__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__3242 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__3248__i = 0, G__3248__a = new Array(arguments.length -  3);
while (G__3248__i < G__3248__a.length) {G__3248__a[G__3248__i] = arguments[G__3248__i + 3]; ++G__3248__i;}
  ps = new cljs.core.IndexedSeq(G__3248__a,0);
} 
return G__3242__delegate.call(this,p1,p2,p3,ps);};
G__3242.cljs$lang$maxFixedArity = 3;
G__3242.cljs$lang$applyTo = (function (arglist__3249){
var p1 = cljs.core.first(arglist__3249);
arglist__3249 = cljs.core.next(arglist__3249);
var p2 = cljs.core.first(arglist__3249);
arglist__3249 = cljs.core.next(arglist__3249);
var p3 = cljs.core.first(arglist__3249);
var ps = cljs.core.rest(arglist__3249);
return G__3242__delegate(p1,p2,p3,ps);
});
G__3242.cljs$core$IFn$_invoke$arity$variadic = G__3242__delegate;
return G__3242;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__3250 = null;
if (arguments.length > 3) {
var G__3251__i = 0, G__3251__a = new Array(arguments.length -  3);
while (G__3251__i < G__3251__a.length) {G__3251__a[G__3251__i] = arguments[G__3251__i + 3]; ++G__3251__i;}
G__3250 = new cljs.core.IndexedSeq(G__3251__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__3250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__3457 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3457) : p.call(null,G__3457));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__3957__auto__ = (function (){var G__3459 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3459) : p.call(null,G__3459));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var G__3460 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3460) : p.call(null,G__3460));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__3957__auto__ = (function (){var G__3462 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3462) : p.call(null,G__3462));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (function (){var G__3464 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3464) : p.call(null,G__3464));
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var G__3465 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__3465) : p.call(null,G__3465));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__3626__delegate = function (x,y,z,args){
var or__3957__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__3626 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3627__i = 0, G__3627__a = new Array(arguments.length -  3);
while (G__3627__i < G__3627__a.length) {G__3627__a[G__3627__i] = arguments[G__3627__i + 3]; ++G__3627__i;}
  args = new cljs.core.IndexedSeq(G__3627__a,0);
} 
return G__3626__delegate.call(this,x,y,z,args);};
G__3626.cljs$lang$maxFixedArity = 3;
G__3626.cljs$lang$applyTo = (function (arglist__3628){
var x = cljs.core.first(arglist__3628);
arglist__3628 = cljs.core.next(arglist__3628);
var y = cljs.core.first(arglist__3628);
arglist__3628 = cljs.core.next(arglist__3628);
var z = cljs.core.first(arglist__3628);
var args = cljs.core.rest(arglist__3628);
return G__3626__delegate(x,y,z,args);
});
G__3626.cljs$core$IFn$_invoke$arity$variadic = G__3626__delegate;
return G__3626;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__3629 = null;
if (arguments.length > 3) {
var G__3630__i = 0, G__3630__a = new Array(arguments.length -  3);
while (G__3630__i < G__3630__a.length) {G__3630__a[G__3630__i] = arguments[G__3630__i + 3]; ++G__3630__i;}
G__3629 = new cljs.core.IndexedSeq(G__3630__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__3957__auto__ = (function (){var G__3497 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3497) : p1.call(null,G__3497));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var G__3498 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3498) : p2.call(null,G__3498));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__3957__auto__ = (function (){var G__3500 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3500) : p1.call(null,G__3500));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (function (){var G__3502 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3502) : p1.call(null,G__3502));
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var or__3957__auto____$2 = (function (){var G__3504 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3504) : p2.call(null,G__3504));
})();
if(cljs.core.truth_(or__3957__auto____$2)){
return or__3957__auto____$2;
} else {
var G__3505 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3505) : p2.call(null,G__3505));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__3957__auto__ = (function (){var G__3507 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3507) : p1.call(null,G__3507));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (function (){var G__3509 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3509) : p1.call(null,G__3509));
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var or__3957__auto____$2 = (function (){var G__3511 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3511) : p1.call(null,G__3511));
})();
if(cljs.core.truth_(or__3957__auto____$2)){
return or__3957__auto____$2;
} else {
var or__3957__auto____$3 = (function (){var G__3513 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3513) : p2.call(null,G__3513));
})();
if(cljs.core.truth_(or__3957__auto____$3)){
return or__3957__auto____$3;
} else {
var or__3957__auto____$4 = (function (){var G__3515 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3515) : p2.call(null,G__3515));
})();
if(cljs.core.truth_(or__3957__auto____$4)){
return or__3957__auto____$4;
} else {
var G__3516 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3516) : p2.call(null,G__3516));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__3631__delegate = function (x,y,z,args){
var or__3957__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return cljs.core.some(((function (or__3957__auto__){
return (function (p1__3252_SHARP_){
var or__3957__auto____$1 = (function (){var G__3518 = p1__3252_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3518) : p1.call(null,G__3518));
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var G__3519 = p1__3252_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3519) : p2.call(null,G__3519));
}
});})(or__3957__auto__))
,args);
}
};
var G__3631 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3632__i = 0, G__3632__a = new Array(arguments.length -  3);
while (G__3632__i < G__3632__a.length) {G__3632__a[G__3632__i] = arguments[G__3632__i + 3]; ++G__3632__i;}
  args = new cljs.core.IndexedSeq(G__3632__a,0);
} 
return G__3631__delegate.call(this,x,y,z,args);};
G__3631.cljs$lang$maxFixedArity = 3;
G__3631.cljs$lang$applyTo = (function (arglist__3633){
var x = cljs.core.first(arglist__3633);
arglist__3633 = cljs.core.next(arglist__3633);
var y = cljs.core.first(arglist__3633);
arglist__3633 = cljs.core.next(arglist__3633);
var z = cljs.core.first(arglist__3633);
var args = cljs.core.rest(arglist__3633);
return G__3631__delegate(x,y,z,args);
});
G__3631.cljs$core$IFn$_invoke$arity$variadic = G__3631__delegate;
return G__3631;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__3634 = null;
if (arguments.length > 3) {
var G__3635__i = 0, G__3635__a = new Array(arguments.length -  3);
while (G__3635__i < G__3635__a.length) {G__3635__a[G__3635__i] = arguments[G__3635__i + 3]; ++G__3635__i;}
G__3634 = new cljs.core.IndexedSeq(G__3635__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3634);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__3957__auto__ = (function (){var G__3565 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3565) : p1.call(null,G__3565));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (function (){var G__3567 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3567) : p2.call(null,G__3567));
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var G__3568 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3568) : p3.call(null,G__3568));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__3957__auto__ = (function (){var G__3570 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3570) : p1.call(null,G__3570));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (function (){var G__3572 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3572) : p2.call(null,G__3572));
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var or__3957__auto____$2 = (function (){var G__3574 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3574) : p3.call(null,G__3574));
})();
if(cljs.core.truth_(or__3957__auto____$2)){
return or__3957__auto____$2;
} else {
var or__3957__auto____$3 = (function (){var G__3576 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3576) : p1.call(null,G__3576));
})();
if(cljs.core.truth_(or__3957__auto____$3)){
return or__3957__auto____$3;
} else {
var or__3957__auto____$4 = (function (){var G__3578 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3578) : p2.call(null,G__3578));
})();
if(cljs.core.truth_(or__3957__auto____$4)){
return or__3957__auto____$4;
} else {
var G__3579 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3579) : p3.call(null,G__3579));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__3957__auto__ = (function (){var G__3581 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3581) : p1.call(null,G__3581));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (function (){var G__3583 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3583) : p2.call(null,G__3583));
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var or__3957__auto____$2 = (function (){var G__3585 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3585) : p3.call(null,G__3585));
})();
if(cljs.core.truth_(or__3957__auto____$2)){
return or__3957__auto____$2;
} else {
var or__3957__auto____$3 = (function (){var G__3587 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3587) : p1.call(null,G__3587));
})();
if(cljs.core.truth_(or__3957__auto____$3)){
return or__3957__auto____$3;
} else {
var or__3957__auto____$4 = (function (){var G__3589 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3589) : p2.call(null,G__3589));
})();
if(cljs.core.truth_(or__3957__auto____$4)){
return or__3957__auto____$4;
} else {
var or__3957__auto____$5 = (function (){var G__3591 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3591) : p3.call(null,G__3591));
})();
if(cljs.core.truth_(or__3957__auto____$5)){
return or__3957__auto____$5;
} else {
var or__3957__auto____$6 = (function (){var G__3593 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3593) : p1.call(null,G__3593));
})();
if(cljs.core.truth_(or__3957__auto____$6)){
return or__3957__auto____$6;
} else {
var or__3957__auto____$7 = (function (){var G__3595 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3595) : p2.call(null,G__3595));
})();
if(cljs.core.truth_(or__3957__auto____$7)){
return or__3957__auto____$7;
} else {
var G__3596 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3596) : p3.call(null,G__3596));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__3636__delegate = function (x,y,z,args){
var or__3957__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return cljs.core.some(((function (or__3957__auto__){
return (function (p1__3253_SHARP_){
var or__3957__auto____$1 = (function (){var G__3598 = p1__3253_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__3598) : p1.call(null,G__3598));
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var or__3957__auto____$2 = (function (){var G__3600 = p1__3253_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__3600) : p2.call(null,G__3600));
})();
if(cljs.core.truth_(or__3957__auto____$2)){
return or__3957__auto____$2;
} else {
var G__3601 = p1__3253_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__3601) : p3.call(null,G__3601));
}
}
});})(or__3957__auto__))
,args);
}
};
var G__3636 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3637__i = 0, G__3637__a = new Array(arguments.length -  3);
while (G__3637__i < G__3637__a.length) {G__3637__a[G__3637__i] = arguments[G__3637__i + 3]; ++G__3637__i;}
  args = new cljs.core.IndexedSeq(G__3637__a,0);
} 
return G__3636__delegate.call(this,x,y,z,args);};
G__3636.cljs$lang$maxFixedArity = 3;
G__3636.cljs$lang$applyTo = (function (arglist__3638){
var x = cljs.core.first(arglist__3638);
arglist__3638 = cljs.core.next(arglist__3638);
var y = cljs.core.first(arglist__3638);
arglist__3638 = cljs.core.next(arglist__3638);
var z = cljs.core.first(arglist__3638);
var args = cljs.core.rest(arglist__3638);
return G__3636__delegate(x,y,z,args);
});
G__3636.cljs$core$IFn$_invoke$arity$variadic = G__3636__delegate;
return G__3636;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__3639 = null;
if (arguments.length > 3) {
var G__3640__i = 0, G__3640__a = new Array(arguments.length -  3);
while (G__3640__i < G__3640__a.length) {G__3640__a[G__3640__i] = arguments[G__3640__i + 3]; ++G__3640__i;}
G__3639 = new cljs.core.IndexedSeq(G__3640__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__3641__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__3254_SHARP_){
var G__3617 = x;
return (p1__3254_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3254_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3617) : p1__3254_SHARP_.call(null,G__3617));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__3255_SHARP_){
var or__3957__auto__ = (function (){var G__3619 = x;
return (p1__3255_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3255_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3619) : p1__3255_SHARP_.call(null,G__3619));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var G__3620 = y;
return (p1__3255_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3255_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3620) : p1__3255_SHARP_.call(null,G__3620));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__3256_SHARP_){
var or__3957__auto__ = (function (){var G__3622 = x;
return (p1__3256_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3256_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3622) : p1__3256_SHARP_.call(null,G__3622));
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (function (){var G__3624 = y;
return (p1__3256_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3256_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3624) : p1__3256_SHARP_.call(null,G__3624));
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var G__3625 = z;
return (p1__3256_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__3256_SHARP_.cljs$core$IFn$_invoke$arity$1(G__3625) : p1__3256_SHARP_.call(null,G__3625));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__3642__delegate = function (x,y,z,args){
var or__3957__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return cljs.core.some(((function (or__3957__auto__,ps__$1){
return (function (p1__3257_SHARP_){
return cljs.core.some(p1__3257_SHARP_,args);
});})(or__3957__auto__,ps__$1))
,ps__$1);
}
};
var G__3642 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__3643__i = 0, G__3643__a = new Array(arguments.length -  3);
while (G__3643__i < G__3643__a.length) {G__3643__a[G__3643__i] = arguments[G__3643__i + 3]; ++G__3643__i;}
  args = new cljs.core.IndexedSeq(G__3643__a,0);
} 
return G__3642__delegate.call(this,x,y,z,args);};
G__3642.cljs$lang$maxFixedArity = 3;
G__3642.cljs$lang$applyTo = (function (arglist__3644){
var x = cljs.core.first(arglist__3644);
arglist__3644 = cljs.core.next(arglist__3644);
var y = cljs.core.first(arglist__3644);
arglist__3644 = cljs.core.next(arglist__3644);
var z = cljs.core.first(arglist__3644);
var args = cljs.core.rest(arglist__3644);
return G__3642__delegate(x,y,z,args);
});
G__3642.cljs$core$IFn$_invoke$arity$variadic = G__3642__delegate;
return G__3642;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__3645 = null;
if (arguments.length > 3) {
var G__3646__i = 0, G__3646__a = new Array(arguments.length -  3);
while (G__3646__i < G__3646__a.length) {G__3646__a[G__3646__i] = arguments[G__3646__i + 3]; ++G__3646__i;}
G__3645 = new cljs.core.IndexedSeq(G__3646__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__3645);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__3641 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__3647__i = 0, G__3647__a = new Array(arguments.length -  3);
while (G__3647__i < G__3647__a.length) {G__3647__a[G__3647__i] = arguments[G__3647__i + 3]; ++G__3647__i;}
  ps = new cljs.core.IndexedSeq(G__3647__a,0);
} 
return G__3641__delegate.call(this,p1,p2,p3,ps);};
G__3641.cljs$lang$maxFixedArity = 3;
G__3641.cljs$lang$applyTo = (function (arglist__3648){
var p1 = cljs.core.first(arglist__3648);
arglist__3648 = cljs.core.next(arglist__3648);
var p2 = cljs.core.first(arglist__3648);
arglist__3648 = cljs.core.next(arglist__3648);
var p3 = cljs.core.first(arglist__3648);
var ps = cljs.core.rest(arglist__3648);
return G__3641__delegate(p1,p2,p3,ps);
});
G__3641.cljs$core$IFn$_invoke$arity$variadic = G__3641__delegate;
return G__3641;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__3649 = null;
if (arguments.length > 3) {
var G__3650__i = 0, G__3650__a = new Array(arguments.length -  3);
while (G__3650__i < G__3650__a.length) {G__3650__a[G__3650__i] = arguments[G__3650__i + 3]; ++G__3650__i;}
G__3649 = new cljs.core.IndexedSeq(G__3650__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__3649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__3705 = null;
var G__3705__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3705__1 = (function (result){
var G__3691 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3691) : rf.call(null,G__3691));
});
var G__3705__2 = (function (result,input){
var G__3692 = result;
var G__3693 = (function (){var G__3694 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3694) : f.call(null,G__3694));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3692,G__3693) : rf.call(null,G__3692,G__3693));
});
var G__3705__3 = (function() { 
var G__3706__delegate = function (result,input,inputs){
var G__3695 = result;
var G__3696 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3695,G__3696) : rf.call(null,G__3695,G__3696));
};
var G__3706 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__3707__i = 0, G__3707__a = new Array(arguments.length -  2);
while (G__3707__i < G__3707__a.length) {G__3707__a[G__3707__i] = arguments[G__3707__i + 2]; ++G__3707__i;}
  inputs = new cljs.core.IndexedSeq(G__3707__a,0);
} 
return G__3706__delegate.call(this,result,input,inputs);};
G__3706.cljs$lang$maxFixedArity = 2;
G__3706.cljs$lang$applyTo = (function (arglist__3708){
var result = cljs.core.first(arglist__3708);
arglist__3708 = cljs.core.next(arglist__3708);
var input = cljs.core.first(arglist__3708);
var inputs = cljs.core.rest(arglist__3708);
return G__3706__delegate(result,input,inputs);
});
G__3706.cljs$core$IFn$_invoke$arity$variadic = G__3706__delegate;
return G__3706;
})()
;
G__3705 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__3705__0.call(this);
case 1:
return G__3705__1.call(this,result);
case 2:
return G__3705__2.call(this,result,input);
default:
var G__3709 = null;
if (arguments.length > 2) {
var G__3710__i = 0, G__3710__a = new Array(arguments.length -  2);
while (G__3710__i < G__3710__a.length) {G__3710__a[G__3710__i] = arguments[G__3710__i + 2]; ++G__3710__i;}
G__3709 = new cljs.core.IndexedSeq(G__3710__a,0);
}
return G__3705__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__3709);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3705.cljs$lang$maxFixedArity = 2;
G__3705.cljs$lang$applyTo = G__3705__3.cljs$lang$applyTo;
G__3705.cljs$core$IFn$_invoke$arity$0 = G__3705__0;
G__3705.cljs$core$IFn$_invoke$arity$1 = G__3705__1;
G__3705.cljs$core$IFn$_invoke$arity$2 = G__3705__2;
G__3705.cljs$core$IFn$_invoke$arity$variadic = G__3705__3.cljs$core$IFn$_invoke$arity$variadic;
return G__3705;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4378__auto___3711 = size;
var i_3712 = (0);
while(true){
if((i_3712 < n__4378__auto___3711)){
cljs.core.chunk_append(b,(function (){var G__3697 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_3712);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3697) : f.call(null,G__3697));
})());

var G__3713 = (i_3712 + (1));
i_3712 = G__3713;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__3698 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3698) : f.call(null,G__3698));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__3699 = cljs.core.first(s1);
var G__3700 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3699,G__3700) : f.call(null,G__3699,G__3700));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__3701 = cljs.core.first(s1);
var G__3702 = cljs.core.first(s2);
var G__3703 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3701,G__3702,G__3703) : f.call(null,G__3701,G__3702,G__3703));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__3714__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__3651_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__3651_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__3714 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__3715__i = 0, G__3715__a = new Array(arguments.length -  4);
while (G__3715__i < G__3715__a.length) {G__3715__a[G__3715__i] = arguments[G__3715__i + 4]; ++G__3715__i;}
  colls = new cljs.core.IndexedSeq(G__3715__a,0);
} 
return G__3714__delegate.call(this,f,c1,c2,c3,colls);};
G__3714.cljs$lang$maxFixedArity = 4;
G__3714.cljs$lang$applyTo = (function (arglist__3716){
var f = cljs.core.first(arglist__3716);
arglist__3716 = cljs.core.next(arglist__3716);
var c1 = cljs.core.first(arglist__3716);
arglist__3716 = cljs.core.next(arglist__3716);
var c2 = cljs.core.first(arglist__3716);
arglist__3716 = cljs.core.next(arglist__3716);
var c3 = cljs.core.first(arglist__3716);
var colls = cljs.core.rest(arglist__3716);
return G__3714__delegate(f,c1,c2,c3,colls);
});
G__3714.cljs$core$IFn$_invoke$arity$variadic = G__3714__delegate;
return G__3714;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__3717 = null;
if (arguments.length > 4) {
var G__3718__i = 0, G__3718__a = new Array(arguments.length -  4);
while (G__3718__i < G__3718__a.length) {G__3718__a[G__3718__i] = arguments[G__3718__i + 4]; ++G__3718__i;}
G__3717 = new cljs.core.IndexedSeq(G__3718__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__3717);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__3727 = null;
var G__3727__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3727__1 = (function (result){
var G__3724 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3724) : rf.call(null,G__3724));
});
var G__3727__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__3725 = result;
var G__3726 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3725,G__3726) : rf.call(null,G__3725,G__3726));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__3727 = function(result,input){
switch(arguments.length){
case 0:
return G__3727__0.call(this);
case 1:
return G__3727__1.call(this,result);
case 2:
return G__3727__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3727.cljs$core$IFn$_invoke$arity$0 = G__3727__0;
G__3727.cljs$core$IFn$_invoke$arity$1 = G__3727__1;
G__3727.cljs$core$IFn$_invoke$arity$2 = G__3727__2;
return G__3727;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__3734 = null;
var G__3734__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3734__1 = (function (result){
var G__3731 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3731) : rf.call(null,G__3731));
});
var G__3734__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__3732 = result;
var G__3733 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3732,G__3733) : rf.call(null,G__3732,G__3733));
}
});
G__3734 = function(result,input){
switch(arguments.length){
case 0:
return G__3734__0.call(this);
case 1:
return G__3734__1.call(this,result);
case 2:
return G__3734__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3734.cljs$core$IFn$_invoke$arity$0 = G__3734__0;
G__3734.cljs$core$IFn$_invoke$arity$1 = G__3734__1;
G__3734.cljs$core$IFn$_invoke$arity$2 = G__3734__2;
return G__3734;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__3735 = (n__$1 - (1));
var G__3736 = cljs.core.rest(s);
n__$1 = G__3735;
coll__$1 = G__3736;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__3739 = cljs.core.next(s);
var G__3740 = cljs.core.next(lead);
s = G__3739;
lead = G__3740;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__3753 = null;
var G__3753__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3753__1 = (function (result){
var G__3747 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3747) : rf.call(null,G__3747));
});
var G__3753__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3949__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3949__auto__)){
var G__3748 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3748) : pred.call(null,G__3748));
} else {
return and__3949__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__3749 = result;
var G__3750 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3749,G__3750) : rf.call(null,G__3749,G__3750));
}
});
G__3753 = function(result,input){
switch(arguments.length){
case 0:
return G__3753__0.call(this);
case 1:
return G__3753__1.call(this,result);
case 2:
return G__3753__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3753.cljs$core$IFn$_invoke$arity$0 = G__3753__0;
G__3753.cljs$core$IFn$_invoke$arity$1 = G__3753__1;
G__3753.cljs$core$IFn$_invoke$arity$2 = G__3753__2;
return G__3753;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3949__auto__ = s;
if(and__3949__auto__){
var G__3752 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__3752) : pred__$1.call(null,G__3752));
} else {
return and__3949__auto__;
}
})())){
var G__3754 = pred__$1;
var G__3755 = cljs.core.rest(s);
pred__$1 = G__3754;
coll__$1 = G__3755;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__3764 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3764) : f.call(null,G__3764));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__3767__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__3767 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__3768__i = 0, G__3768__a = new Array(arguments.length -  2);
while (G__3768__i < G__3768__a.length) {G__3768__a[G__3768__i] = arguments[G__3768__i + 2]; ++G__3768__i;}
  colls = new cljs.core.IndexedSeq(G__3768__a,0);
} 
return G__3767__delegate.call(this,c1,c2,colls);};
G__3767.cljs$lang$maxFixedArity = 2;
G__3767.cljs$lang$applyTo = (function (arglist__3769){
var c1 = cljs.core.first(arglist__3769);
arglist__3769 = cljs.core.next(arglist__3769);
var c2 = cljs.core.first(arglist__3769);
var colls = cljs.core.rest(arglist__3769);
return G__3767__delegate(c1,c2,colls);
});
G__3767.cljs$core$IFn$_invoke$arity$variadic = G__3767__delegate;
return G__3767;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__3770 = null;
if (arguments.length > 2) {
var G__3771__i = 0, G__3771__a = new Array(arguments.length -  2);
while (G__3771__i < G__3771__a.length) {G__3771__a[G__3771__i] = arguments[G__3771__i + 2]; ++G__3771__i;}
G__3770 = new cljs.core.IndexedSeq(G__3771__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__3770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__3786 = null;
var G__3786__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3786__1 = (function (result){
var G__3779 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3779) : rf.call(null,G__3779));
});
var G__3786__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__3780 = result;
var G__3781 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3780,G__3781) : rf.call(null,G__3780,G__3781));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__3782 = sepr;
var G__3783 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3782,G__3783) : rf.call(null,G__3782,G__3783));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__3784 = result;
var G__3785 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3784,G__3785) : rf.call(null,G__3784,G__3785));
}
});
G__3786 = function(result,input){
switch(arguments.length){
case 0:
return G__3786__0.call(this);
case 1:
return G__3786__1.call(this,result);
case 2:
return G__3786__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3786.cljs$core$IFn$_invoke$arity$0 = G__3786__0;
G__3786.cljs$core$IFn$_invoke$arity$1 = G__3786__1;
G__3786.cljs$core$IFn$_invoke$arity$2 = G__3786__2;
return G__3786;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__3795__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__3795 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__3796__i = 0, G__3796__a = new Array(arguments.length -  1);
while (G__3796__i < G__3796__a.length) {G__3796__a[G__3796__i] = arguments[G__3796__i + 1]; ++G__3796__i;}
  colls = new cljs.core.IndexedSeq(G__3796__a,0);
} 
return G__3795__delegate.call(this,f,colls);};
G__3795.cljs$lang$maxFixedArity = 1;
G__3795.cljs$lang$applyTo = (function (arglist__3797){
var f = cljs.core.first(arglist__3797);
var colls = cljs.core.rest(arglist__3797);
return G__3795__delegate(f,colls);
});
G__3795.cljs$core$IFn$_invoke$arity$variadic = G__3795__delegate;
return G__3795;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__3798 = null;
if (arguments.length > 1) {
var G__3799__i = 0, G__3799__a = new Array(arguments.length -  1);
while (G__3799__i < G__3799__a.length) {G__3799__a[G__3799__i] = arguments[G__3799__i + 1]; ++G__3799__i;}
G__3798 = new cljs.core.IndexedSeq(G__3799__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__3798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__3818 = null;
var G__3818__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__3818__1 = (function (result){
var G__3812 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__3812) : rf.call(null,G__3812));
});
var G__3818__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__3813 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3813) : pred.call(null,G__3813));
})())){
var G__3814 = result;
var G__3815 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__3814,G__3815) : rf.call(null,G__3814,G__3815));
} else {
return result;
}
});
G__3818 = function(result,input){
switch(arguments.length){
case 0:
return G__3818__0.call(this);
case 1:
return G__3818__1.call(this,result);
case 2:
return G__3818__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3818.cljs$core$IFn$_invoke$arity$0 = G__3818__0;
G__3818.cljs$core$IFn$_invoke$arity$1 = G__3818__1;
G__3818.cljs$core$IFn$_invoke$arity$2 = G__3818__2;
return G__3818;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4378__auto___3819 = size;
var i_3820 = (0);
while(true){
if((i_3820 < n__4378__auto___3819)){
if(cljs.core.truth_((function (){var G__3816 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_3820);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3816) : pred.call(null,G__3816));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_3820));
} else {
}

var G__3821 = (i_3820 + (1));
i_3820 = G__3821;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__3817 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3817) : pred.call(null,G__3817));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__3828 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__3828) : branch_QMARK_.call(null,G__3828));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__3829 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__3829) : children.call(null,G__3829));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__3830_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__3830_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__3833 = to;
if(G__3833){
var bit__4248__auto__ = (G__3833.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4248__auto__) || (G__3833.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__3834 = to;
if(G__3834){
var bit__4248__auto__ = (G__3834.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4248__auto__) || (G__3834.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__3836 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3836) : f.call(null,G__3836));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__3837__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__3837 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__3838__i = 0, G__3838__a = new Array(arguments.length -  4);
while (G__3838__i < G__3838__a.length) {G__3838__a[G__3838__i] = arguments[G__3838__i + 4]; ++G__3838__i;}
  colls = new cljs.core.IndexedSeq(G__3838__a,0);
} 
return G__3837__delegate.call(this,f,c1,c2,c3,colls);};
G__3837.cljs$lang$maxFixedArity = 4;
G__3837.cljs$lang$applyTo = (function (arglist__3839){
var f = cljs.core.first(arglist__3839);
arglist__3839 = cljs.core.next(arglist__3839);
var c1 = cljs.core.first(arglist__3839);
arglist__3839 = cljs.core.next(arglist__3839);
var c2 = cljs.core.first(arglist__3839);
arglist__3839 = cljs.core.next(arglist__3839);
var c3 = cljs.core.first(arglist__3839);
var colls = cljs.core.rest(arglist__3839);
return G__3837__delegate(f,c1,c2,c3,colls);
});
G__3837.cljs$core$IFn$_invoke$arity$variadic = G__3837__delegate;
return G__3837;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__3840 = null;
if (arguments.length > 4) {
var G__3841__i = 0, G__3841__a = new Array(arguments.length -  4);
while (G__3841__i < G__3841__a.length) {G__3841__a[G__3841__i] = arguments[G__3841__i + 4]; ++G__3841__i;}
G__3840 = new cljs.core.IndexedSeq(G__3841__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__3840);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__3843 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__3843) : pred.call(null,G__3843));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__3858 = m__$1;
if(G__3858){
var bit__4251__auto__ = (G__3858.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4251__auto__) || (G__3858.cljs$core$ILookup$)){
return true;
} else {
if((!G__3858.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__3858);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__3858);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__3859 = sentinel;
var G__3860 = m__$2;
var G__3861 = cljs.core.next(ks__$1);
sentinel = G__3859;
m__$1 = G__3860;
ks__$1 = G__3861;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__3862,v){
var vec__3867 = p__3862;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3867,(0),null);
var ks = cljs.core.nthnext(vec__3867,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__3868,f){
var vec__3906 = p__3868;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3906,(0),null);
var ks = cljs.core.nthnext(vec__3906,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3907 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3907) : f.call(null,G__3907));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__3869,f,a){
var vec__3908 = p__3869;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3908,(0),null);
var ks = cljs.core.nthnext(vec__3908,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3909 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3910 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3909,G__3910) : f.call(null,G__3909,G__3910));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__3870,f,a,b){
var vec__3911 = p__3870;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3911,(0),null);
var ks = cljs.core.nthnext(vec__3911,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3912 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3913 = a;
var G__3914 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3912,G__3913,G__3914) : f.call(null,G__3912,G__3913,G__3914));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__3871,f,a,b,c){
var vec__3915 = p__3871;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3915,(0),null);
var ks = cljs.core.nthnext(vec__3915,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3916 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3917 = a;
var G__3918 = b;
var G__3919 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3916,G__3917,G__3918,G__3919) : f.call(null,G__3916,G__3917,G__3918,G__3919));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__3921__delegate = function (m,p__3872,f,a,b,c,args){
var vec__3920 = p__3872;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__3920,(0),null);
var ks = cljs.core.nthnext(vec__3920,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__3921 = function (m,p__3872,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__3922__i = 0, G__3922__a = new Array(arguments.length -  6);
while (G__3922__i < G__3922__a.length) {G__3922__a[G__3922__i] = arguments[G__3922__i + 6]; ++G__3922__i;}
  args = new cljs.core.IndexedSeq(G__3922__a,0);
} 
return G__3921__delegate.call(this,m,p__3872,f,a,b,c,args);};
G__3921.cljs$lang$maxFixedArity = 6;
G__3921.cljs$lang$applyTo = (function (arglist__3923){
var m = cljs.core.first(arglist__3923);
arglist__3923 = cljs.core.next(arglist__3923);
var p__3872 = cljs.core.first(arglist__3923);
arglist__3923 = cljs.core.next(arglist__3923);
var f = cljs.core.first(arglist__3923);
arglist__3923 = cljs.core.next(arglist__3923);
var a = cljs.core.first(arglist__3923);
arglist__3923 = cljs.core.next(arglist__3923);
var b = cljs.core.first(arglist__3923);
arglist__3923 = cljs.core.next(arglist__3923);
var c = cljs.core.first(arglist__3923);
var args = cljs.core.rest(arglist__3923);
return G__3921__delegate(m,p__3872,f,a,b,c,args);
});
G__3921.cljs$core$IFn$_invoke$arity$variadic = G__3921__delegate;
return G__3921;
})()
;
cljs$core$update_in = function(m,p__3872,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__3872,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__3872,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__3872,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__3872,f,a,b,c);
default:
var G__3924 = null;
if (arguments.length > 6) {
var G__3925__i = 0, G__3925__a = new Array(arguments.length -  6);
while (G__3925__i < G__3925__a.length) {G__3925__a[G__3925__i] = arguments[G__3925__i + 6]; ++G__3925__i;}
G__3924 = new cljs.core.IndexedSeq(G__3925__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__3872,f,a,b,c, G__3924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3936 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__3936) : f.call(null,G__3936));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3937 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3938 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3937,G__3938) : f.call(null,G__3937,G__3938));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3939 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3940 = x;
var G__3941 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3939,G__3940,G__3941) : f.call(null,G__3939,G__3940,G__3941));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__3942 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__3943 = x;
var G__3944 = y;
var G__3945 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__3942,G__3943,G__3944,G__3945) : f.call(null,G__3942,G__3943,G__3944,G__3945));
})());
});
var cljs$core$update__7 = (function() { 
var G__3946__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__3946 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__3947__i = 0, G__3947__a = new Array(arguments.length -  6);
while (G__3947__i < G__3947__a.length) {G__3947__a[G__3947__i] = arguments[G__3947__i + 6]; ++G__3947__i;}
  more = new cljs.core.IndexedSeq(G__3947__a,0);
} 
return G__3946__delegate.call(this,m,k,f,x,y,z,more);};
G__3946.cljs$lang$maxFixedArity = 6;
G__3946.cljs$lang$applyTo = (function (arglist__3948){
var m = cljs.core.first(arglist__3948);
arglist__3948 = cljs.core.next(arglist__3948);
var k = cljs.core.first(arglist__3948);
arglist__3948 = cljs.core.next(arglist__3948);
var f = cljs.core.first(arglist__3948);
arglist__3948 = cljs.core.next(arglist__3948);
var x = cljs.core.first(arglist__3948);
arglist__3948 = cljs.core.next(arglist__3948);
var y = cljs.core.first(arglist__3948);
arglist__3948 = cljs.core.next(arglist__3948);
var z = cljs.core.first(arglist__3948);
var more = cljs.core.rest(arglist__3948);
return G__3946__delegate(m,k,f,x,y,z,more);
});
G__3946.cljs$core$IFn$_invoke$arity$variadic = G__3946__delegate;
return G__3946;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__3949 = null;
if (arguments.length > 6) {
var G__3950__i = 0, G__3950__a = new Array(arguments.length -  6);
while (G__3950__i < G__3950__a.length) {G__3950__a[G__3950__i] = arguments[G__3950__i + 6]; ++G__3950__i;}
G__3949 = new cljs.core.IndexedSeq(G__3950__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__3949);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__3951 = (ll - (5));
var G__3952 = r;
ll = G__3951;
ret = G__3952;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__3957 = cljs.core.pv_aget(node,(0));
var G__3958 = (level - (5));
node = G__3957;
level = G__3958;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__3959 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__3960 = (level - (5));
node = G__3959;
level = G__3960;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__3970 = init__$2;
var G__3971 = (j + i);
var G__3972 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__3970,G__3971,G__3972) : f.call(null,G__3970,G__3971,G__3972));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__3983 = (j + (1));
var G__3984 = init__$3;
j = G__3983;
init__$2 = G__3984;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3973 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3973) : cljs.core.deref.call(null,G__3973));
} else {
var G__3985 = (i + len);
var G__3986 = init__$2;
i = G__3985;
init__$1 = G__3986;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__3974 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__3974) : cljs.core.tv_editable_root.call(null,G__3974));
})(),(function (){var G__3975 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__3975) : cljs.core.tv_editable_tail.call(null,G__3975));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__3976 = init__$2;
var G__3977 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__3976,G__3977) : f.call(null,G__3976,G__3977));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__3987 = (j + (1));
var G__3988 = init__$3;
j = G__3987;
init__$2 = G__3988;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__3978 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__3978) : cljs.core.deref.call(null,G__3978));
} else {
var G__3989 = (i + len);
var G__3990 = init__$2;
i = G__3989;
init__$1 = G__3990;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__3979 = coll__$1;
var G__3980 = cljs.core.first_array_for_longvec(coll__$1);
var G__3981 = (0);
var G__3982 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__3979,G__3980,G__3981,G__3982) : cljs.core.chunked_seq.call(null,G__3979,G__3980,G__3981,G__3982));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4378__auto___3991 = len;
var i_3992 = (0);
while(true){
if((i_3992 < n__4378__auto___3991)){
(new_tail[i_3992] = (self__.tail[i_3992]));

var G__3993 = (i_3992 + (1));
i_3992 = G__3993;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__3994 = null;
var G__3994__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__3994__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__3994 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__3994__2.call(this,self__,k);
case 3:
return G__3994__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__3994.cljs$core$IFn$_invoke$arity$2 = G__3994__2;
G__3994.cljs$core$IFn$_invoke$arity$3 = G__3994__3;
return G__3994;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args3969){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args3969)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__3995 = (i + (1));
var G__3996 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__3995;
out = G__3996;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(cljs.core.array_QMARK_(coll)){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__3997__i = 0, G__3997__a = new Array(arguments.length -  0);
while (G__3997__i < G__3997__a.length) {G__3997__a[G__3997__i] = arguments[G__3997__i + 0]; ++G__3997__i;}
  args = new cljs.core.IndexedSeq(G__3997__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__3998){
var args = cljs.core.seq(arglist__3998);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__3999 = self__.vec;
var G__4000 = self__.node;
var G__4001 = self__.i;
var G__4002 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__3999,G__4000,G__4001,G__4002) : cljs.core.chunked_seq.call(null,G__3999,G__4000,G__4001,G__4002));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__4003 = self__.vec;
var G__4004 = (self__.i + self__.off);
var G__4005 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__4003,G__4004,G__4005) : cljs.core.subvec.call(null,G__4003,G__4004,G__4005));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__4006 = self__.vec;
var G__4007 = (self__.i + self__.off);
var G__4008 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__4006,G__4007,G__4008) : cljs.core.subvec.call(null,G__4006,G__4007,G__4008));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__4009 = self__.vec;
var G__4010 = self__.node;
var G__4011 = self__.i;
var G__4012 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__4009,G__4010,G__4011,G__4012) : cljs.core.chunked_seq.call(null,G__4009,G__4010,G__4011,G__4012));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__4013 = self__.vec;
var G__4014 = cljs.core.unchecked_array_for(self__.vec,end);
var G__4015 = end;
var G__4016 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__4013,G__4014,G__4015,G__4016) : cljs.core.chunked_seq.call(null,G__4013,G__4014,G__4015,G__4016));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__4017 = self__.vec;
var G__4018 = self__.node;
var G__4019 = self__.i;
var G__4020 = self__.off;
var G__4021 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__4017,G__4018,G__4019,G__4020,G__4021) : cljs.core.chunked_seq.call(null,G__4017,G__4018,G__4019,G__4020,G__4021));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__4022 = self__.vec;
var G__4023 = cljs.core.unchecked_array_for(self__.vec,end);
var G__4024 = end;
var G__4025 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__4022,G__4023,G__4024,G__4025) : cljs.core.chunked_seq.call(null,G__4022,G__4023,G__4024,G__4025));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167666463;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var i = self__.start;
var j = (0);
var init__$1 = init;
while(true){
if((i < self__.end)){
var init__$2 = (function (){var G__4027 = init__$1;
var G__4028 = j;
var G__4029 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4027,G__4028,G__4029) : f.call(null,G__4027,G__4028,G__4029));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4030 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4030) : cljs.core.deref.call(null,G__4030));
} else {
var G__4052 = (i + (1));
var G__4053 = (j + (1));
var G__4054 = init__$2;
i = G__4052;
j = G__4053;
init__$1 = G__4054;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__4031 = self__.meta;
var G__4032 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__4033 = self__.start;
var G__4034 = (function (){var x__4025__auto__ = self__.end;
var y__4026__auto__ = (v_pos + (1));
return ((x__4025__auto__ > y__4026__auto__) ? x__4025__auto__ : y__4026__auto__);
})();
var G__4035 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__4031,G__4032,G__4033,G__4034,G__4035) : cljs.core.build_subvec.call(null,G__4031,G__4032,G__4033,G__4034,G__4035));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__4036 = self__.meta;
var G__4037 = self__.v;
var G__4038 = self__.start;
var G__4039 = (self__.end - (1));
var G__4040 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__4036,G__4037,G__4038,G__4039,G__4040) : cljs.core.build_subvec.call(null,G__4036,G__4037,G__4038,G__4039,G__4040));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__4042 = meta__$1;
var G__4043 = self__.v;
var G__4044 = self__.start;
var G__4045 = self__.end;
var G__4046 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__4042,G__4043,G__4044,G__4045,G__4046) : cljs.core.build_subvec.call(null,G__4042,G__4043,G__4044,G__4045,G__4046));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__4047 = self__.meta;
var G__4048 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__4049 = self__.start;
var G__4050 = (self__.end + (1));
var G__4051 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__4047,G__4048,G__4049,G__4050,G__4051) : cljs.core.build_subvec.call(null,G__4047,G__4048,G__4049,G__4050,G__4051));
});

cljs.core.Subvec.prototype.call = (function() {
var G__4055 = null;
var G__4055__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__4055__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__4055 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4055__2.call(this,self__,k);
case 3:
return G__4055__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4055.cljs$core$IFn$_invoke$arity$2 = G__4055__2;
G__4055.cljs$core$IFn$_invoke$arity$3 = G__4055__3;
return G__4055;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args4026){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4026)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__4056 = meta;
var G__4057 = v.v;
var G__4058 = (v.start + start);
var G__4059 = (v.start + end);
var G__4060 = __hash;
meta = G__4056;
v = G__4057;
start = G__4058;
end = G__4059;
__hash = G__4060;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj4067 = {};
return obj4067;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__4075 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__4076 = (level - (5));
node = G__4075;
level = G__4076;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__4080 = null;
var G__4080__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4080__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4080 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4080__2.call(this,self__,k);
case 3:
return G__4080__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4080.cljs$core$IFn$_invoke$arity$2 = G__4080__2;
G__4080.cljs$core$IFn$_invoke$arity$3 = G__4080__3;
return G__4080;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args4077){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4077)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3957__auto__ = self__.front;
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3957__auto__ = self__.rear;
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__4081 = (i + incr);
i = G__4081;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__4082 = (i + (1));
var G__4083 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__4082;
out = G__4083;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj4087 = {};
return obj4087;
})();
var l = ks.length;
var i_4088 = (0);
while(true){
if((i_4088 < l)){
var k_4089 = (ks[i_4088]);
(new_obj[k_4089] = (obj[k_4089]));

var G__4090 = (i_4088 + (1));
i_4088 = G__4090;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3949__auto__ = (function (){var G__4094 = k;
return goog.isString(G__4094);
})();
if(cljs.core.truth_(and__3949__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3949__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__4095 = init__$1;
var G__4096 = k;
var G__4097 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4095,G__4096,G__4097) : f.call(null,G__4095,G__4096,G__4097));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4098 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4098) : cljs.core.deref.call(null,G__4098));
} else {
var G__4104 = cljs.core.rest(keys__$1);
var G__4105 = init__$2;
keys__$1 = G__4104;
init__$1 = G__4105;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3949__auto__ = (function (){var G__4100 = k;
return goog.isString(G__4100);
})();
if(cljs.core.truth_(and__3949__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3949__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__4101 = k;
return goog.isString(G__4101);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3949__auto__ = (function (){var G__4103 = k;
return goog.isString(G__4103);
})();
if(cljs.core.truth_(and__3949__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3949__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__4091_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__4091_SHARP_,(self__.strobj[p1__4091_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__4106 = null;
var G__4106__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4106__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4106 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4106__2.call(this,self__,k);
case 3:
return G__4106__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4106.cljs$core$IFn$_invoke$arity$2 = G__4106__2;
G__4106.cljs$core$IFn$_invoke$arity$3 = G__4106__3;
return G__4106;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args4092){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4092)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj4108 = {};
return obj4108;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__4109 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4109,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4109,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__4110 = (i + (2));
i = G__4110;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__4111 = (i + (2));
i = G__4111;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__4112 = (i + (2));
i = G__4112;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__4113 = (i + (2));
i = G__4113;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__4114 = (i + (2));
i = G__4114;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3957__auto__ = (function (){var G__4118 = k;
return goog.isString(G__4118);
})();
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_4119 = (0);
while(true){
if((i_4119 < l)){
(narr[i_4119] = (arr[i_4119]));

var G__4120 = (i_4119 + (1));
i_4119 = G__4120;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4122 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__4122) : cljs.core.keys.call(null,G__4122));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4123 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__4123) : cljs.core.vals.call(null,G__4123));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__4124 = cljs.core.seq(coll);
var chunk__4125 = null;
var count__4126 = (0);
var i__4127 = (0);
while(true){
if((i__4127 < count__4126)){
var vec__4128 = chunk__4125.cljs$core$IIndexed$_nth$arity$2(null,i__4127);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4128,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4128,(1),null);
var G__4129_4142 = v;
var G__4130_4143 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4129_4142,G__4130_4143) : f.call(null,G__4129_4142,G__4130_4143));

var G__4144 = seq__4124;
var G__4145 = chunk__4125;
var G__4146 = count__4126;
var G__4147 = (i__4127 + (1));
seq__4124 = G__4144;
chunk__4125 = G__4145;
count__4126 = G__4146;
i__4127 = G__4147;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4124);
if(temp__4126__auto__){
var seq__4124__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4124__$1)){
var c__4326__auto__ = cljs.core.chunk_first(seq__4124__$1);
var G__4148 = cljs.core.chunk_rest(seq__4124__$1);
var G__4149 = c__4326__auto__;
var G__4150 = cljs.core.count(c__4326__auto__);
var G__4151 = (0);
seq__4124 = G__4148;
chunk__4125 = G__4149;
count__4126 = G__4150;
i__4127 = G__4151;
continue;
} else {
var vec__4131 = cljs.core.first(seq__4124__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4131,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4131,(1),null);
var G__4132_4152 = v;
var G__4133_4153 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4132_4152,G__4133_4153) : f.call(null,G__4132_4152,G__4133_4153));

var G__4154 = cljs.core.next(seq__4124__$1);
var G__4155 = null;
var G__4156 = (0);
var G__4157 = (0);
seq__4124 = G__4154;
chunk__4125 = G__4155;
count__4126 = G__4156;
i__4127 = G__4157;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__4134 = init__$1;
var G__4135 = (self__.arr[i]);
var G__4136 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4134,G__4135,G__4136) : f.call(null,G__4134,G__4135,G__4136));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4137 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4137) : cljs.core.deref.call(null,G__4137));
} else {
var G__4158 = (i + (2));
var G__4159 = init__$2;
i = G__4158;
init__$1 = G__4159;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__4138 = other;
if(G__4138){
var bit__4248__auto__ = (G__4138.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4248__auto__) || (G__4138.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__4160 = (i + (2));
i = G__4160;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj4140 = {};
return obj4140;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__4161 = (s + (2));
var G__4162 = d;
s = G__4161;
d = G__4162;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__4163 = (s + (2));
var G__4164 = (d + (2));
s = G__4163;
d = G__4164;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__4141 = cljs.core.aclone(self__.arr);
(G__4141[(idx + (1))] = v);

return G__4141;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__4165 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__4166 = cljs.core.next(es);
ret = G__4165;
es = G__4166;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__4167 = null;
var G__4167__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4167__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4167 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4167__2.call(this,self__,k);
case 3:
return G__4167__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4167.cljs$core$IFn$_invoke$arity$2 = G__4167__2;
G__4167.cljs$core$IFn$_invoke$arity$3 = G__4167__3;
return G__4167;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args4121){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4121)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__4168 = (i + (2));
var G__4169 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__4168;
ret = G__4169;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__4170_4178 = self__.arr;
G__4170_4178.pop();

G__4170_4178.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__4171 = self__.len;
var G__4172 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__4171,G__4172) : cljs.core.array__GT_transient_hash_map.call(null,G__4171,G__4172));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__4173 = o;
if(G__4173){
var bit__4251__auto__ = (G__4173.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4251__auto__) || (G__4173.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__4173.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__4173);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__4173);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__4174 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4174) : cljs.core.key.call(null,G__4174));
})(),(function (){var G__4175 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__4175) : cljs.core.val.call(null,G__4175));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__4179 = cljs.core.next(es);
var G__4180 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__4176 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4176) : cljs.core.key.call(null,G__4176));
})(),(function (){var G__4177 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__4177) : cljs.core.val.call(null,G__4177));
})());
es = G__4179;
tcoll__$2 = G__4180;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__4181 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__4182 = (i + (2));
out = G__4181;
i = G__4182;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__4185 = cljs.core.aclone(arr);
(G__4185[i] = a);

return G__4185;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__4186 = cljs.core.aclone(arr);
(G__4186[i] = a);

(G__4186[j] = b);

return G__4186;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__4191 = init__$1;
var G__4192 = k;
var G__4193 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4191,G__4192,G__4193) : f.call(null,G__4191,G__4192,G__4193));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4194 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4194) : cljs.core.deref.call(null,G__4194));
} else {
var G__4195 = (i + (2));
var G__4196 = init__$2;
i = G__4195;
init__$1 = G__4196;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__4197 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__4197) : cljs.core.create_inode_seq.call(null,G__4197));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_4211 = (0);
var j_4212 = (0);
while(true){
if((i_4211 < (32))){
if((((self__.bitmap >>> i_4211) & (1)) === (0))){
var G__4213 = (i_4211 + (1));
var G__4214 = j_4212;
i_4211 = G__4213;
j_4212 = G__4214;
continue;
} else {
(nodes[i_4211] = ((!(((self__.arr[j_4212]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_4212])),(self__.arr[j_4212]),(self__.arr[(j_4212 + (1))]),added_leaf_QMARK_):(self__.arr[(j_4212 + (1))])));

var G__4215 = (i_4211 + (1));
var G__4216 = (j_4212 + (2));
i_4211 = G__4215;
j_4212 = G__4216;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__4198 = edit__$1;
var G__4199 = (shift + (5));
var G__4200 = key_or_nil;
var G__4201 = val_or_node;
var G__4202 = hash;
var G__4203 = key;
var G__4204 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__4198,G__4199,G__4200,G__4201,G__4202,G__4203,G__4204) : cljs.core.create_node.call(null,G__4198,G__4199,G__4200,G__4201,G__4202,G__4203,G__4204));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_4217 = (0);
var j_4218 = (0);
while(true){
if((i_4217 < (32))){
if((((self__.bitmap >>> i_4217) & (1)) === (0))){
var G__4219 = (i_4217 + (1));
var G__4220 = j_4218;
i_4217 = G__4219;
j_4218 = G__4220;
continue;
} else {
(nodes[i_4217] = ((!(((self__.arr[j_4218]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_4218])),(self__.arr[j_4218]),(self__.arr[(j_4218 + (1))]),added_leaf_QMARK_):(self__.arr[(j_4218 + (1))])));

var G__4221 = (i_4217 + (1));
var G__4222 = (j_4218 + (2));
i_4217 = G__4221;
j_4218 = G__4222;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__4205 = (shift + (5));
var G__4206 = key_or_nil;
var G__4207 = val_or_node;
var G__4208 = hash;
var G__4209 = key;
var G__4210 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__4205,G__4206,G__4207,G__4208,G__4209,G__4210) : cljs.core.create_node.call(null,G__4205,G__4206,G__4207,G__4208,G__4209,G__4210));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__4223 = (i + (1));
var G__4224 = (j + (2));
var G__4225 = (bitmap | ((1) << i));
i = G__4223;
j = G__4224;
bitmap = G__4225;
continue;
} else {
var G__4226 = (i + (1));
var G__4227 = j;
var G__4228 = bitmap;
i = G__4226;
j = G__4227;
bitmap = G__4228;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__4229 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__4229) : cljs.core.create_array_node_seq.call(null,G__4229));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4230 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4230) : cljs.core.deref.call(null,G__4230));
} else {
var G__4231 = (i + (1));
var G__4232 = init__$2;
i = G__4231;
init__$1 = G__4232;
continue;
}
} else {
var G__4233 = (i + (1));
var G__4234 = init__$1;
i = G__4233;
init__$1 = G__4234;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__4235 = (i + (2));
i = G__4235;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__4236 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__4236) : cljs.core.create_inode_seq.call(null,G__4236));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__4237 = self__.nodes;
var G__4238 = (self__.i + (2));
var G__4239 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__4237,G__4238,G__4239) : cljs.core.create_inode_seq.call(null,G__4237,G__4238,G__4239));
} else {
var G__4240 = self__.nodes;
var G__4241 = self__.i;
var G__4242 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__4240,G__4241,G__4242) : cljs.core.create_inode_seq.call(null,G__4240,G__4241,G__4242));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__4246 = (j + (2));
j = G__4246;
continue;
}
} else {
var G__4247 = (j + (2));
j = G__4247;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__4248 = null;
var G__4249 = self__.nodes;
var G__4250 = self__.i;
var G__4251 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__4248,G__4249,G__4250,G__4251) : cljs.core.create_array_node_seq.call(null,G__4248,G__4249,G__4250,G__4251));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__4256 = (j + (1));
j = G__4256;
continue;
}
} else {
var G__4257 = (j + (1));
j = G__4257;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4259 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__4259) : cljs.core.keys.call(null,G__4259));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4260 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__4260) : cljs.core.vals.call(null,G__4260));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__4261 = cljs.core.seq(coll);
var chunk__4262 = null;
var count__4263 = (0);
var i__4264 = (0);
while(true){
if((i__4264 < count__4263)){
var vec__4265 = chunk__4262.cljs$core$IIndexed$_nth$arity$2(null,i__4264);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4265,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4265,(1),null);
var G__4266_4277 = v;
var G__4267_4278 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4266_4277,G__4267_4278) : f.call(null,G__4266_4277,G__4267_4278));

var G__4279 = seq__4261;
var G__4280 = chunk__4262;
var G__4281 = count__4263;
var G__4282 = (i__4264 + (1));
seq__4261 = G__4279;
chunk__4262 = G__4280;
count__4263 = G__4281;
i__4264 = G__4282;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4261);
if(temp__4126__auto__){
var seq__4261__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4261__$1)){
var c__4326__auto__ = cljs.core.chunk_first(seq__4261__$1);
var G__4283 = cljs.core.chunk_rest(seq__4261__$1);
var G__4284 = c__4326__auto__;
var G__4285 = cljs.core.count(c__4326__auto__);
var G__4286 = (0);
seq__4261 = G__4283;
chunk__4262 = G__4284;
count__4263 = G__4285;
i__4264 = G__4286;
continue;
} else {
var vec__4268 = cljs.core.first(seq__4261__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4268,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4268,(1),null);
var G__4269_4287 = v;
var G__4270_4288 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4269_4287,G__4270_4288) : f.call(null,G__4269_4287,G__4270_4288));

var G__4289 = cljs.core.next(seq__4261__$1);
var G__4290 = null;
var G__4291 = (0);
var G__4292 = (0);
seq__4261 = G__4289;
chunk__4262 = G__4290;
count__4263 = G__4291;
i__4264 = G__4292;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__4271 = init;
var G__4272 = null;
var G__4273 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4271,G__4272,G__4273) : f.call(null,G__4271,G__4272,G__4273));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__4274 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4274) : cljs.core.deref.call(null,G__4274));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj4276 = {};
return obj4276;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__4293 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__4294 = cljs.core.next(es);
ret = G__4293;
es = G__4294;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__4295 = null;
var G__4295__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4295__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4295 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4295__2.call(this,self__,k);
case 3:
return G__4295__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4295.cljs$core$IFn$_invoke$arity$2 = G__4295__2;
G__4295.cljs$core$IFn$_invoke$arity$3 = G__4295__3;
return G__4295;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args4258){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4258)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__4296 = (i + (2));
var G__4297 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__4296;
ret = G__4297;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__4298 = (i + (1));
var G__4299 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__4298;
out = G__4299;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__4300 = o;
if(G__4300){
var bit__4251__auto__ = (G__4300.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4251__auto__) || (G__4300.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__4300.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__4300);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__4300);
}
})()){
return tcoll.assoc_BANG_((function (){var G__4301 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4301) : cljs.core.key.call(null,G__4301));
})(),(function (){var G__4302 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__4302) : cljs.core.val.call(null,G__4302));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__4305 = cljs.core.next(es);
var G__4306 = tcoll__$1.assoc_BANG_((function (){var G__4303 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4303) : cljs.core.key.call(null,G__4303));
})(),(function (){var G__4304 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__4304) : cljs.core.val.call(null,G__4304));
})());
es = G__4305;
tcoll__$1 = G__4306;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__4307 = ((ascending_QMARK_)?t.left:t.right);
var G__4308 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__4307;
stack__$1 = G__4308;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__4321 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4321) : cljs.core.deref.call(null,G__4321));
} else {
var init__$2 = (function (){var G__4322 = init__$1;
var G__4323 = node.key;
var G__4324 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4322,G__4323,G__4324) : f.call(null,G__4322,G__4323,G__4324));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__4325 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4325) : cljs.core.deref.call(null,G__4325));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__4326 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4326) : cljs.core.deref.call(null,G__4326));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__4328 = null;
var G__4328__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4328__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4328 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4328__2.call(this,self__,k);
case 3:
return G__4328__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4328.cljs$core$IFn$_invoke$arity$2 = G__4328__2;
G__4328.cljs$core$IFn$_invoke$arity$3 = G__4328__3;
return G__4328;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args4327){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4327)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__4330 = null;
var G__4330__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4330__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4330 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4330__2.call(this,self__,k);
case 3:
return G__4330__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4330.cljs$core$IFn$_invoke$arity$2 = G__4330__2;
G__4330.cljs$core$IFn$_invoke$arity$3 = G__4330__3;
return G__4330;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args4329){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4329)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__4343 = k;
var G__4344 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4343,G__4344) : comp.call(null,G__4343,G__4344));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__4363 = k;
var G__4364 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4363,G__4364) : comp.call(null,G__4363,G__4364));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__4375 = k;
var G__4376 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4375,G__4376) : comp.call(null,G__4375,G__4376));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__4378 = cljs.core.seq(coll);
var chunk__4379 = null;
var count__4380 = (0);
var i__4381 = (0);
while(true){
if((i__4381 < count__4380)){
var vec__4382 = chunk__4379.cljs$core$IIndexed$_nth$arity$2(null,i__4381);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4382,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4382,(1),null);
var G__4383_4395 = v;
var G__4384_4396 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4383_4395,G__4384_4396) : f.call(null,G__4383_4395,G__4384_4396));

var G__4397 = seq__4378;
var G__4398 = chunk__4379;
var G__4399 = count__4380;
var G__4400 = (i__4381 + (1));
seq__4378 = G__4397;
chunk__4379 = G__4398;
count__4380 = G__4399;
i__4381 = G__4400;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4378);
if(temp__4126__auto__){
var seq__4378__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4378__$1)){
var c__4326__auto__ = cljs.core.chunk_first(seq__4378__$1);
var G__4401 = cljs.core.chunk_rest(seq__4378__$1);
var G__4402 = c__4326__auto__;
var G__4403 = cljs.core.count(c__4326__auto__);
var G__4404 = (0);
seq__4378 = G__4401;
chunk__4379 = G__4402;
count__4380 = G__4403;
i__4381 = G__4404;
continue;
} else {
var vec__4385 = cljs.core.first(seq__4378__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4385,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4385,(1),null);
var G__4386_4405 = v;
var G__4387_4406 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4386_4405,G__4387_4406) : f.call(null,G__4386_4405,G__4387_4406));

var G__4407 = cljs.core.next(seq__4378__$1);
var G__4408 = null;
var G__4409 = (0);
var G__4410 = (0);
seq__4378 = G__4407;
chunk__4379 = G__4408;
count__4380 = G__4409;
i__4381 = G__4410;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4388 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__4388) : cljs.core.keys.call(null,G__4388));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__4389 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__4389) : cljs.core.vals.call(null,G__4389));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__4390 = k;
var G__4391 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__4390,G__4391) : self__.comp.call(null,G__4390,G__4391));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__4411 = t.left;
t = G__4411;
continue;
} else {
var G__4412 = t.right;
t = G__4412;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__4413 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__4414 = cljs.core.next(es);
ret = G__4413;
es = G__4414;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__4415 = null;
var G__4415__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4415__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4415 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4415__2.call(this,self__,k);
case 3:
return G__4415__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4415.cljs$core$IFn$_invoke$arity$2 = G__4415__2;
G__4415.cljs$core$IFn$_invoke$arity$3 = G__4415__3;
return G__4415;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args4377){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4377)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__4392 = k;
var G__4393 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__4392,G__4393) : self__.comp.call(null,G__4392,G__4393));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__4416 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__4417 = t.left;
stack = G__4416;
t = G__4417;
continue;
} else {
var G__4418 = stack;
var G__4419 = t.right;
stack = G__4418;
t = G__4419;
continue;
}
} else {
if((c > (0))){
var G__4420 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__4421 = t.right;
stack = G__4420;
t = G__4421;
continue;
} else {
var G__4422 = stack;
var G__4423 = t.left;
stack = G__4422;
t = G__4423;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__4394 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__4394) : cljs.core.key.call(null,G__4394));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__4424 = cljs.core.nnext(in$);
var G__4425 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__4424;
out = G__4425;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__4426__i = 0, G__4426__a = new Array(arguments.length -  0);
while (G__4426__i < G__4426__a.length) {G__4426__a[G__4426__i] = arguments[G__4426__i + 0]; ++G__4426__i;}
  keyvals = new cljs.core.IndexedSeq(G__4426__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__4427){
var keyvals = cljs.core.seq(arglist__4427);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__4428__i = 0, G__4428__a = new Array(arguments.length -  0);
while (G__4428__i < G__4428__a.length) {G__4428__a[G__4428__i] = arguments[G__4428__i + 0]; ++G__4428__i;}
  keyvals = new cljs.core.IndexedSeq(G__4428__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__4429){
var keyvals = cljs.core.seq(arglist__4429);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj4433 = {};
return obj4433;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__4434 = cljs.core.nnext(kvs);
kvs = G__4434;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__4435__i = 0, G__4435__a = new Array(arguments.length -  0);
while (G__4435__i < G__4435__a.length) {G__4435__a[G__4435__i] = arguments[G__4435__i + 0]; ++G__4435__i;}
  keyvals = new cljs.core.IndexedSeq(G__4435__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__4436){
var keyvals = cljs.core.seq(arglist__4436);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__4437 = cljs.core.nnext(in$);
var G__4438 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__4437;
out = G__4438;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__4439__i = 0, G__4439__a = new Array(arguments.length -  0);
while (G__4439__i < G__4439__a.length) {G__4439__a[G__4439__i] = arguments[G__4439__i + 0]; ++G__4439__i;}
  keyvals = new cljs.core.IndexedSeq(G__4439__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__4440){
var keyvals = cljs.core.seq(arglist__4440);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__4441 = cljs.core.nnext(in$);
var G__4442 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__4441;
out = G__4442;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__4443__i = 0, G__4443__a = new Array(arguments.length -  1);
while (G__4443__i < G__4443__a.length) {G__4443__a[G__4443__i] = arguments[G__4443__i + 1]; ++G__4443__i;}
  keyvals = new cljs.core.IndexedSeq(G__4443__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__4444){
var comparator = cljs.core.first(arglist__4444);
var keyvals = cljs.core.rest(arglist__4444);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__4445 = self__.mseq;
if(G__4445){
var bit__4251__auto__ = (G__4445.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4251__auto__) || (G__4445.cljs$core$INext$)){
return true;
} else {
if((!G__4445.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4445);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4445);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__4446 = self__.mseq;
if(G__4446){
var bit__4251__auto__ = (G__4446.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4251__auto__) || (G__4446.cljs$core$INext$)){
return true;
} else {
if((!G__4446.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4446);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4446);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__4447 = self__.mseq;
if(G__4447){
var bit__4251__auto__ = (G__4447.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4251__auto__) || (G__4447.cljs$core$INext$)){
return true;
} else {
if((!G__4447.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4447);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4447);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__4448 = self__.mseq;
if(G__4448){
var bit__4251__auto__ = (G__4448.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4251__auto__) || (G__4448.cljs$core$INext$)){
return true;
} else {
if((!G__4448.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4448);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__4448);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__4449_SHARP_,p2__4450_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3957__auto__ = p1__4449_SHARP_;
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__4450_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__4451__i = 0, G__4451__a = new Array(arguments.length -  0);
while (G__4451__i < G__4451__a.length) {G__4451__a[G__4451__i] = arguments[G__4451__i + 0]; ++G__4451__i;}
  maps = new cljs.core.IndexedSeq(G__4451__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__4452){
var maps = cljs.core.seq(arglist__4452);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__4455 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__4456 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4455,G__4456) : f.call(null,G__4455,G__4456));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3957__auto__ = m1;
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__4457__i = 0, G__4457__a = new Array(arguments.length -  1);
while (G__4457__i < G__4457__a.length) {G__4457__a[G__4457__i] = arguments[G__4457__i + 1]; ++G__4457__i;}
  maps = new cljs.core.IndexedSeq(G__4457__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__4458){
var f = cljs.core.first(arglist__4458);
var maps = cljs.core.rest(arglist__4458);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__4459 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__4460 = cljs.core.next(keys);
ret = G__4459;
keys = G__4460;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__4463 = cljs.core.seq(coll);
var chunk__4464 = null;
var count__4465 = (0);
var i__4466 = (0);
while(true){
if((i__4466 < count__4465)){
var vec__4467 = chunk__4464.cljs$core$IIndexed$_nth$arity$2(null,i__4466);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4467,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4467,(1),null);
var G__4468_4473 = v;
var G__4469_4474 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4468_4473,G__4469_4474) : f.call(null,G__4468_4473,G__4469_4474));

var G__4475 = seq__4463;
var G__4476 = chunk__4464;
var G__4477 = count__4465;
var G__4478 = (i__4466 + (1));
seq__4463 = G__4475;
chunk__4464 = G__4476;
count__4465 = G__4477;
i__4466 = G__4478;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4463);
if(temp__4126__auto__){
var seq__4463__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4463__$1)){
var c__4326__auto__ = cljs.core.chunk_first(seq__4463__$1);
var G__4479 = cljs.core.chunk_rest(seq__4463__$1);
var G__4480 = c__4326__auto__;
var G__4481 = cljs.core.count(c__4326__auto__);
var G__4482 = (0);
seq__4463 = G__4479;
chunk__4464 = G__4480;
count__4465 = G__4481;
i__4466 = G__4482;
continue;
} else {
var vec__4470 = cljs.core.first(seq__4463__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4470,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4470,(1),null);
var G__4471_4483 = v;
var G__4472_4484 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4471_4483,G__4472_4484) : f.call(null,G__4471_4483,G__4472_4484));

var G__4485 = cljs.core.next(seq__4463__$1);
var G__4486 = null;
var G__4487 = (0);
var G__4488 = (0);
seq__4463 = G__4485;
chunk__4464 = G__4486;
count__4465 = G__4487;
i__4466 = G__4488;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__4461_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__4461_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__4489 = null;
var G__4489__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4489__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4489 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4489__2.call(this,self__,k);
case 3:
return G__4489__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4489.cljs$core$IFn$_invoke$arity$2 = G__4489__2;
G__4489.cljs$core$IFn$_invoke$arity$3 = G__4489__3;
return G__4489;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args4462){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4462)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__4490 = (i + (1));
var G__4491 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__4490;
out = G__4491;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__4492 = (i + (1));
var G__4493 = cljs.core._conj_BANG_(out,(items[i]));
i = G__4492;
out = G__4493;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__4495 = null;
var G__4495__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__4495__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__4495 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4495__2.call(this,self__,k);
case 3:
return G__4495__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4495.cljs$core$IFn$_invoke$arity$2 = G__4495__2;
G__4495.cljs$core$IFn$_invoke$arity$3 = G__4495__3;
return G__4495;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args4494){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4494)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__4498 = cljs.core.seq(coll);
var chunk__4499 = null;
var count__4500 = (0);
var i__4501 = (0);
while(true){
if((i__4501 < count__4500)){
var vec__4502 = chunk__4499.cljs$core$IIndexed$_nth$arity$2(null,i__4501);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4502,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4502,(1),null);
var G__4503_4508 = v;
var G__4504_4509 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4503_4508,G__4504_4509) : f.call(null,G__4503_4508,G__4504_4509));

var G__4510 = seq__4498;
var G__4511 = chunk__4499;
var G__4512 = count__4500;
var G__4513 = (i__4501 + (1));
seq__4498 = G__4510;
chunk__4499 = G__4511;
count__4500 = G__4512;
i__4501 = G__4513;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4498);
if(temp__4126__auto__){
var seq__4498__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4498__$1)){
var c__4326__auto__ = cljs.core.chunk_first(seq__4498__$1);
var G__4514 = cljs.core.chunk_rest(seq__4498__$1);
var G__4515 = c__4326__auto__;
var G__4516 = cljs.core.count(c__4326__auto__);
var G__4517 = (0);
seq__4498 = G__4514;
chunk__4499 = G__4515;
count__4500 = G__4516;
i__4501 = G__4517;
continue;
} else {
var vec__4505 = cljs.core.first(seq__4498__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4505,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4505,(1),null);
var G__4506_4518 = v;
var G__4507_4519 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4506_4518,G__4507_4519) : f.call(null,G__4506_4518,G__4507_4519));

var G__4520 = cljs.core.next(seq__4498__$1);
var G__4521 = null;
var G__4522 = (0);
var G__4523 = (0);
seq__4498 = G__4520;
chunk__4499 = G__4521;
count__4500 = G__4522;
i__4501 = G__4523;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__4496_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__4496_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__4524 = null;
var G__4524__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__4524__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__4524 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__4524__2.call(this,self__,k);
case 3:
return G__4524__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4524.cljs$core$IFn$_invoke$arity$2 = G__4524__2;
G__4524.cljs$core$IFn$_invoke$arity$3 = G__4524__3;
return G__4524;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args4497){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args4497)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4376__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4376__auto__.length)){
var G__4525 = (i + (1));
var G__4526 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__4525;
res = G__4526;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__4527 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__4528 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__4527;
out = G__4528;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__4529__delegate = function (keys){
return cljs.core.set(keys);
};
var G__4529 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__4530__i = 0, G__4530__a = new Array(arguments.length -  0);
while (G__4530__i < G__4530__a.length) {G__4530__a[G__4530__i] = arguments[G__4530__i + 0]; ++G__4530__i;}
  keys = new cljs.core.IndexedSeq(G__4530__a,0);
} 
return G__4529__delegate.call(this,keys);};
G__4529.cljs$lang$maxFixedArity = 0;
G__4529.cljs$lang$applyTo = (function (arglist__4531){
var keys = cljs.core.seq(arglist__4531);
return G__4529__delegate(keys);
});
G__4529.cljs$core$IFn$_invoke$arity$variadic = G__4529__delegate;
return G__4529;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__4532 = null;
if (arguments.length > 0) {
var G__4533__i = 0, G__4533__a = new Array(arguments.length -  0);
while (G__4533__i < G__4533__a.length) {G__4533__a[G__4533__i] = arguments[G__4533__i + 0]; ++G__4533__i;}
G__4532 = new cljs.core.IndexedSeq(G__4533__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__4532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__4534__i = 0, G__4534__a = new Array(arguments.length -  0);
while (G__4534__i < G__4534__a.length) {G__4534__a[G__4534__i] = arguments[G__4534__i + 0]; ++G__4534__i;}
  keys = new cljs.core.IndexedSeq(G__4534__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__4535){
var keys = cljs.core.seq(arglist__4535);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__4536__i = 0, G__4536__a = new Array(arguments.length -  1);
while (G__4536__i < G__4536__a.length) {G__4536__a[G__4536__i] = arguments[G__4536__i + 1]; ++G__4536__i;}
  keys = new cljs.core.IndexedSeq(G__4536__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__4537){
var comparator = cljs.core.first(arglist__4537);
var keys = cljs.core.rest(arglist__4537);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__4538_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__4538_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__4538_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__4539_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__4539_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__4539_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__4560 = null;
var G__4560__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4560__1 = (function (result){
var G__4550 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4550) : rf.call(null,G__4550));
});
var G__4560__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__4551 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4551) : cljs.core.deref.call(null,G__4551));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__4552 = result;
var G__4553 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4552,G__4553) : rf.call(null,G__4552,G__4553));
}
});
G__4560 = function(result,input){
switch(arguments.length){
case 0:
return G__4560__0.call(this);
case 1:
return G__4560__1.call(this,result);
case 2:
return G__4560__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4560.cljs$core$IFn$_invoke$arity$0 = G__4560__0;
G__4560.cljs$core$IFn$_invoke$arity$1 = G__4560__1;
G__4560.cljs$core$IFn$_invoke$arity$2 = G__4560__2;
return G__4560;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__4558,seen__$1){
while(true){
var vec__4559 = p__4558;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4559,(0),null);
var xs__$1 = vec__4559;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__4561 = cljs.core.rest(s);
var G__4562 = seen__$1;
p__4558 = G__4561;
seen__$1 = G__4562;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__4563 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__4564 = cljs.core.next(s__$1);
ret = G__4563;
s__$1 = G__4564;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__4566 = x;
if(G__4566){
var bit__4248__auto__ = (G__4566.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4248__auto__) || (G__4566.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__4567 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__4568 = cljs.core.next(ks);
var G__4569 = cljs.core.next(vs);
map = G__4567;
ks = G__4568;
vs = G__4569;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__4580 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__4580) : k.call(null,G__4580));
})() > (function (){var G__4581 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__4581) : k.call(null,G__4581));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__4582__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__4570_SHARP_,p2__4571_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__4570_SHARP_,p2__4571_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__4582 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__4583__i = 0, G__4583__a = new Array(arguments.length -  3);
while (G__4583__i < G__4583__a.length) {G__4583__a[G__4583__i] = arguments[G__4583__i + 3]; ++G__4583__i;}
  more = new cljs.core.IndexedSeq(G__4583__a,0);
} 
return G__4582__delegate.call(this,k,x,y,more);};
G__4582.cljs$lang$maxFixedArity = 3;
G__4582.cljs$lang$applyTo = (function (arglist__4584){
var k = cljs.core.first(arglist__4584);
arglist__4584 = cljs.core.next(arglist__4584);
var x = cljs.core.first(arglist__4584);
arglist__4584 = cljs.core.next(arglist__4584);
var y = cljs.core.first(arglist__4584);
var more = cljs.core.rest(arglist__4584);
return G__4582__delegate(k,x,y,more);
});
G__4582.cljs$core$IFn$_invoke$arity$variadic = G__4582__delegate;
return G__4582;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__4585 = null;
if (arguments.length > 3) {
var G__4586__i = 0, G__4586__a = new Array(arguments.length -  3);
while (G__4586__i < G__4586__a.length) {G__4586__a[G__4586__i] = arguments[G__4586__i + 3]; ++G__4586__i;}
G__4585 = new cljs.core.IndexedSeq(G__4586__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__4585);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__4597 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__4597) : k.call(null,G__4597));
})() < (function (){var G__4598 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__4598) : k.call(null,G__4598));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__4599__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__4587_SHARP_,p2__4588_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__4587_SHARP_,p2__4588_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__4599 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__4600__i = 0, G__4600__a = new Array(arguments.length -  3);
while (G__4600__i < G__4600__a.length) {G__4600__a[G__4600__i] = arguments[G__4600__i + 3]; ++G__4600__i;}
  more = new cljs.core.IndexedSeq(G__4600__a,0);
} 
return G__4599__delegate.call(this,k,x,y,more);};
G__4599.cljs$lang$maxFixedArity = 3;
G__4599.cljs$lang$applyTo = (function (arglist__4601){
var k = cljs.core.first(arglist__4601);
arglist__4601 = cljs.core.next(arglist__4601);
var x = cljs.core.first(arglist__4601);
arglist__4601 = cljs.core.next(arglist__4601);
var y = cljs.core.first(arglist__4601);
var more = cljs.core.rest(arglist__4601);
return G__4599__delegate(k,x,y,more);
});
G__4599.cljs$core$IFn$_invoke$arity$variadic = G__4599__delegate;
return G__4599;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__4602 = null;
if (arguments.length > 3) {
var G__4603__i = 0, G__4603__a = new Array(arguments.length -  3);
while (G__4603__i < G__4603__a.length) {G__4603__a[G__4603__i] = arguments[G__4603__i + 3]; ++G__4603__i;}
G__4602 = new cljs.core.IndexedSeq(G__4603__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__4602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__4620 = null;
var G__4620__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4620__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__4615 = result;
var G__4616 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4615,G__4616) : rf.call(null,G__4615,G__4616));
})());
})());
var G__4617 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4617) : rf.call(null,G__4617));
});
var G__4620__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__4618 = result;
var G__4619 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4618,G__4619) : rf.call(null,G__4618,G__4619));
} else {
return result;
}
});
G__4620 = function(result,input){
switch(arguments.length){
case 0:
return G__4620__0.call(this);
case 1:
return G__4620__1.call(this,result);
case 2:
return G__4620__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4620.cljs$core$IFn$_invoke$arity$0 = G__4620__0;
G__4620.cljs$core$IFn$_invoke$arity$1 = G__4620__1;
G__4620.cljs$core$IFn$_invoke$arity$2 = G__4620__2;
return G__4620;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__4633 = null;
var G__4633__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4633__1 = (function (result){
var G__4628 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4628) : rf.call(null,G__4628));
});
var G__4633__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__4629 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4629) : pred.call(null,G__4629));
})())){
var G__4630 = result;
var G__4631 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4630,G__4631) : rf.call(null,G__4630,G__4631));
} else {
return cljs.core.reduced(result);
}
});
G__4633 = function(result,input){
switch(arguments.length){
case 0:
return G__4633__0.call(this);
case 1:
return G__4633__1.call(this,result);
case 2:
return G__4633__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4633.cljs$core$IFn$_invoke$arity$0 = G__4633__0;
G__4633.cljs$core$IFn$_invoke$arity$1 = G__4633__1;
G__4633.cljs$core$IFn$_invoke$arity$2 = G__4633__2;
return G__4633;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__4632 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__4632) : pred.call(null,G__4632));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__4638 = (function (){var G__4640 = cljs.core._entry_key(sc,e);
var G__4641 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__4640,G__4641) : comp.call(null,G__4640,G__4641));
})();
var G__4639 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__4638,G__4639) : test.call(null,G__4638,G__4639));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__4645 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4645,(0),null);
var s = vec__4645;
if(cljs.core.truth_((function (){var G__4646 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__4646) : include.call(null,G__4646));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__4647 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4647,(0),null);
var s = vec__4647;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__4651 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4651,(0),null);
var s = vec__4651;
if(cljs.core.truth_((function (){var G__4652 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__4652) : include.call(null,G__4652));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__4653 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4653,(0),null);
var s = vec__4653;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__4654 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__4654) : Math.ceil.call(null,G__4654));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4049__auto__ = self__.__hash;
if(!((h__4049__auto__ == null))){
return h__4049__auto__;
} else {
var h__4049__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4049__auto____$1;

return h__4049__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__4655 = ret;
var G__4656 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4655,G__4656) : f.call(null,G__4655,G__4656));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__4657 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4657) : cljs.core.deref.call(null,G__4657));
} else {
var G__4658 = (i + self__.step);
var G__4659 = ret__$1;
i = G__4658;
ret = G__4659;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__4677 = null;
var G__4677__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4677__1 = (function (result){
var G__4674 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4674) : rf.call(null,G__4674));
});
var G__4677__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__4675 = result;
var G__4676 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4675,G__4676) : rf.call(null,G__4675,G__4676));
} else {
return result;
}
});
G__4677 = function(result,input){
switch(arguments.length){
case 0:
return G__4677__0.call(this);
case 1:
return G__4677__1.call(this,result);
case 2:
return G__4677__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4677.cljs$core$IFn$_invoke$arity$0 = G__4677__0;
G__4677.cljs$core$IFn$_invoke$arity$1 = G__4677__1;
G__4677.cljs$core$IFn$_invoke$arity$2 = G__4677__2;
return G__4677;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__4699 = null;
var G__4699__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4699__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__4690 = result;
var G__4691 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4690,G__4691) : rf.call(null,G__4690,G__4691));
})());
})());
var G__4692 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4692) : rf.call(null,G__4692));
});
var G__4699__2 = (function (result,input){
var pval = (function (){var G__4693 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4693) : cljs.core.deref.call(null,G__4693));
})();
var val = (function (){var G__4694 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4694) : f.call(null,G__4694));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__4695 = result;
var G__4696 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4695,G__4696) : rf.call(null,G__4695,G__4696));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__4699 = function(result,input){
switch(arguments.length){
case 0:
return G__4699__0.call(this);
case 1:
return G__4699__1.call(this,result);
case 2:
return G__4699__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4699.cljs$core$IFn$_invoke$arity$0 = G__4699__0;
G__4699.cljs$core$IFn$_invoke$arity$1 = G__4699__1;
G__4699.cljs$core$IFn$_invoke$arity$2 = G__4699__2;
return G__4699;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__4697 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4697) : f.call(null,G__4697));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__4678_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__4698 = p1__4678_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4698) : f.call(null,G__4698));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__4708 = init;
var G__4709 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4708,G__4709) : f.call(null,G__4708,G__4709));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__4804 = null;
var G__4804__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__4804__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4762 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4762) : f.call(null,G__4762));
})()],null));
});
var G__4804__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4763 = x;
var G__4764 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4763,G__4764) : f.call(null,G__4763,G__4764));
})()],null));
});
var G__4804__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4765 = x;
var G__4766 = y;
var G__4767 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4765,G__4766,G__4767) : f.call(null,G__4765,G__4766,G__4767));
})()],null));
});
var G__4804__4 = (function() { 
var G__4805__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__4805 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4806__i = 0, G__4806__a = new Array(arguments.length -  3);
while (G__4806__i < G__4806__a.length) {G__4806__a[G__4806__i] = arguments[G__4806__i + 3]; ++G__4806__i;}
  args = new cljs.core.IndexedSeq(G__4806__a,0);
} 
return G__4805__delegate.call(this,x,y,z,args);};
G__4805.cljs$lang$maxFixedArity = 3;
G__4805.cljs$lang$applyTo = (function (arglist__4807){
var x = cljs.core.first(arglist__4807);
arglist__4807 = cljs.core.next(arglist__4807);
var y = cljs.core.first(arglist__4807);
arglist__4807 = cljs.core.next(arglist__4807);
var z = cljs.core.first(arglist__4807);
var args = cljs.core.rest(arglist__4807);
return G__4805__delegate(x,y,z,args);
});
G__4805.cljs$core$IFn$_invoke$arity$variadic = G__4805__delegate;
return G__4805;
})()
;
G__4804 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4804__0.call(this);
case 1:
return G__4804__1.call(this,x);
case 2:
return G__4804__2.call(this,x,y);
case 3:
return G__4804__3.call(this,x,y,z);
default:
var G__4808 = null;
if (arguments.length > 3) {
var G__4809__i = 0, G__4809__a = new Array(arguments.length -  3);
while (G__4809__i < G__4809__a.length) {G__4809__a[G__4809__i] = arguments[G__4809__i + 3]; ++G__4809__i;}
G__4808 = new cljs.core.IndexedSeq(G__4809__a,0);
}
return G__4804__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4804.cljs$lang$maxFixedArity = 3;
G__4804.cljs$lang$applyTo = G__4804__4.cljs$lang$applyTo;
G__4804.cljs$core$IFn$_invoke$arity$0 = G__4804__0;
G__4804.cljs$core$IFn$_invoke$arity$1 = G__4804__1;
G__4804.cljs$core$IFn$_invoke$arity$2 = G__4804__2;
G__4804.cljs$core$IFn$_invoke$arity$3 = G__4804__3;
G__4804.cljs$core$IFn$_invoke$arity$variadic = G__4804__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4804;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__4810 = null;
var G__4810__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__4810__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4768 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4768) : f.call(null,G__4768));
})(),(function (){var G__4769 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4769) : g.call(null,G__4769));
})()],null));
});
var G__4810__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4770 = x;
var G__4771 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4770,G__4771) : f.call(null,G__4770,G__4771));
})(),(function (){var G__4772 = x;
var G__4773 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__4772,G__4773) : g.call(null,G__4772,G__4773));
})()],null));
});
var G__4810__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4774 = x;
var G__4775 = y;
var G__4776 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4774,G__4775,G__4776) : f.call(null,G__4774,G__4775,G__4776));
})(),(function (){var G__4777 = x;
var G__4778 = y;
var G__4779 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__4777,G__4778,G__4779) : g.call(null,G__4777,G__4778,G__4779));
})()],null));
});
var G__4810__4 = (function() { 
var G__4811__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__4811 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4812__i = 0, G__4812__a = new Array(arguments.length -  3);
while (G__4812__i < G__4812__a.length) {G__4812__a[G__4812__i] = arguments[G__4812__i + 3]; ++G__4812__i;}
  args = new cljs.core.IndexedSeq(G__4812__a,0);
} 
return G__4811__delegate.call(this,x,y,z,args);};
G__4811.cljs$lang$maxFixedArity = 3;
G__4811.cljs$lang$applyTo = (function (arglist__4813){
var x = cljs.core.first(arglist__4813);
arglist__4813 = cljs.core.next(arglist__4813);
var y = cljs.core.first(arglist__4813);
arglist__4813 = cljs.core.next(arglist__4813);
var z = cljs.core.first(arglist__4813);
var args = cljs.core.rest(arglist__4813);
return G__4811__delegate(x,y,z,args);
});
G__4811.cljs$core$IFn$_invoke$arity$variadic = G__4811__delegate;
return G__4811;
})()
;
G__4810 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4810__0.call(this);
case 1:
return G__4810__1.call(this,x);
case 2:
return G__4810__2.call(this,x,y);
case 3:
return G__4810__3.call(this,x,y,z);
default:
var G__4814 = null;
if (arguments.length > 3) {
var G__4815__i = 0, G__4815__a = new Array(arguments.length -  3);
while (G__4815__i < G__4815__a.length) {G__4815__a[G__4815__i] = arguments[G__4815__i + 3]; ++G__4815__i;}
G__4814 = new cljs.core.IndexedSeq(G__4815__a,0);
}
return G__4810__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4814);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4810.cljs$lang$maxFixedArity = 3;
G__4810.cljs$lang$applyTo = G__4810__4.cljs$lang$applyTo;
G__4810.cljs$core$IFn$_invoke$arity$0 = G__4810__0;
G__4810.cljs$core$IFn$_invoke$arity$1 = G__4810__1;
G__4810.cljs$core$IFn$_invoke$arity$2 = G__4810__2;
G__4810.cljs$core$IFn$_invoke$arity$3 = G__4810__3;
G__4810.cljs$core$IFn$_invoke$arity$variadic = G__4810__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4810;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__4816 = null;
var G__4816__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__4816__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4780 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__4780) : f.call(null,G__4780));
})(),(function (){var G__4781 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__4781) : g.call(null,G__4781));
})(),(function (){var G__4782 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__4782) : h.call(null,G__4782));
})()],null));
});
var G__4816__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4783 = x;
var G__4784 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__4783,G__4784) : f.call(null,G__4783,G__4784));
})(),(function (){var G__4785 = x;
var G__4786 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__4785,G__4786) : g.call(null,G__4785,G__4786));
})(),(function (){var G__4787 = x;
var G__4788 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__4787,G__4788) : h.call(null,G__4787,G__4788));
})()],null));
});
var G__4816__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__4789 = x;
var G__4790 = y;
var G__4791 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__4789,G__4790,G__4791) : f.call(null,G__4789,G__4790,G__4791));
})(),(function (){var G__4792 = x;
var G__4793 = y;
var G__4794 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__4792,G__4793,G__4794) : g.call(null,G__4792,G__4793,G__4794));
})(),(function (){var G__4795 = x;
var G__4796 = y;
var G__4797 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__4795,G__4796,G__4797) : h.call(null,G__4795,G__4796,G__4797));
})()],null));
});
var G__4816__4 = (function() { 
var G__4817__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__4817 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4818__i = 0, G__4818__a = new Array(arguments.length -  3);
while (G__4818__i < G__4818__a.length) {G__4818__a[G__4818__i] = arguments[G__4818__i + 3]; ++G__4818__i;}
  args = new cljs.core.IndexedSeq(G__4818__a,0);
} 
return G__4817__delegate.call(this,x,y,z,args);};
G__4817.cljs$lang$maxFixedArity = 3;
G__4817.cljs$lang$applyTo = (function (arglist__4819){
var x = cljs.core.first(arglist__4819);
arglist__4819 = cljs.core.next(arglist__4819);
var y = cljs.core.first(arglist__4819);
arglist__4819 = cljs.core.next(arglist__4819);
var z = cljs.core.first(arglist__4819);
var args = cljs.core.rest(arglist__4819);
return G__4817__delegate(x,y,z,args);
});
G__4817.cljs$core$IFn$_invoke$arity$variadic = G__4817__delegate;
return G__4817;
})()
;
G__4816 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4816__0.call(this);
case 1:
return G__4816__1.call(this,x);
case 2:
return G__4816__2.call(this,x,y);
case 3:
return G__4816__3.call(this,x,y,z);
default:
var G__4820 = null;
if (arguments.length > 3) {
var G__4821__i = 0, G__4821__a = new Array(arguments.length -  3);
while (G__4821__i < G__4821__a.length) {G__4821__a[G__4821__i] = arguments[G__4821__i + 3]; ++G__4821__i;}
G__4820 = new cljs.core.IndexedSeq(G__4821__a,0);
}
return G__4816__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4820);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4816.cljs$lang$maxFixedArity = 3;
G__4816.cljs$lang$applyTo = G__4816__4.cljs$lang$applyTo;
G__4816.cljs$core$IFn$_invoke$arity$0 = G__4816__0;
G__4816.cljs$core$IFn$_invoke$arity$1 = G__4816__1;
G__4816.cljs$core$IFn$_invoke$arity$2 = G__4816__2;
G__4816.cljs$core$IFn$_invoke$arity$3 = G__4816__3;
G__4816.cljs$core$IFn$_invoke$arity$variadic = G__4816__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4816;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__4822__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__4823 = null;
var G__4823__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__4710_SHARP_,p2__4711_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4710_SHARP_,(function (){return (p2__4711_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__4711_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__4711_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__4823__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__4712_SHARP_,p2__4713_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4712_SHARP_,(function (){var G__4798 = x;
return (p2__4713_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__4713_SHARP_.cljs$core$IFn$_invoke$arity$1(G__4798) : p2__4713_SHARP_.call(null,G__4798));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__4823__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__4714_SHARP_,p2__4715_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4714_SHARP_,(function (){var G__4799 = x;
var G__4800 = y;
return (p2__4715_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__4715_SHARP_.cljs$core$IFn$_invoke$arity$2(G__4799,G__4800) : p2__4715_SHARP_.call(null,G__4799,G__4800));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__4823__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__4716_SHARP_,p2__4717_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4716_SHARP_,(function (){var G__4801 = x;
var G__4802 = y;
var G__4803 = z;
return (p2__4717_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__4717_SHARP_.cljs$core$IFn$_invoke$arity$3(G__4801,G__4802,G__4803) : p2__4717_SHARP_.call(null,G__4801,G__4802,G__4803));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__4823__4 = (function() { 
var G__4824__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__4718_SHARP_,p2__4719_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__4718_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__4719_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__4824 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__4825__i = 0, G__4825__a = new Array(arguments.length -  3);
while (G__4825__i < G__4825__a.length) {G__4825__a[G__4825__i] = arguments[G__4825__i + 3]; ++G__4825__i;}
  args = new cljs.core.IndexedSeq(G__4825__a,0);
} 
return G__4824__delegate.call(this,x,y,z,args);};
G__4824.cljs$lang$maxFixedArity = 3;
G__4824.cljs$lang$applyTo = (function (arglist__4826){
var x = cljs.core.first(arglist__4826);
arglist__4826 = cljs.core.next(arglist__4826);
var y = cljs.core.first(arglist__4826);
arglist__4826 = cljs.core.next(arglist__4826);
var z = cljs.core.first(arglist__4826);
var args = cljs.core.rest(arglist__4826);
return G__4824__delegate(x,y,z,args);
});
G__4824.cljs$core$IFn$_invoke$arity$variadic = G__4824__delegate;
return G__4824;
})()
;
G__4823 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__4823__0.call(this);
case 1:
return G__4823__1.call(this,x);
case 2:
return G__4823__2.call(this,x,y);
case 3:
return G__4823__3.call(this,x,y,z);
default:
var G__4827 = null;
if (arguments.length > 3) {
var G__4828__i = 0, G__4828__a = new Array(arguments.length -  3);
while (G__4828__i < G__4828__a.length) {G__4828__a[G__4828__i] = arguments[G__4828__i + 3]; ++G__4828__i;}
G__4827 = new cljs.core.IndexedSeq(G__4828__a,0);
}
return G__4823__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__4827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4823.cljs$lang$maxFixedArity = 3;
G__4823.cljs$lang$applyTo = G__4823__4.cljs$lang$applyTo;
G__4823.cljs$core$IFn$_invoke$arity$0 = G__4823__0;
G__4823.cljs$core$IFn$_invoke$arity$1 = G__4823__1;
G__4823.cljs$core$IFn$_invoke$arity$2 = G__4823__2;
G__4823.cljs$core$IFn$_invoke$arity$3 = G__4823__3;
G__4823.cljs$core$IFn$_invoke$arity$variadic = G__4823__4.cljs$core$IFn$_invoke$arity$variadic;
return G__4823;
})()
;})(fs__$1))
};
var G__4822 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__4829__i = 0, G__4829__a = new Array(arguments.length -  3);
while (G__4829__i < G__4829__a.length) {G__4829__a[G__4829__i] = arguments[G__4829__i + 3]; ++G__4829__i;}
  fs = new cljs.core.IndexedSeq(G__4829__a,0);
} 
return G__4822__delegate.call(this,f,g,h,fs);};
G__4822.cljs$lang$maxFixedArity = 3;
G__4822.cljs$lang$applyTo = (function (arglist__4830){
var f = cljs.core.first(arglist__4830);
arglist__4830 = cljs.core.next(arglist__4830);
var g = cljs.core.first(arglist__4830);
arglist__4830 = cljs.core.next(arglist__4830);
var h = cljs.core.first(arglist__4830);
var fs = cljs.core.rest(arglist__4830);
return G__4822__delegate(f,g,h,fs);
});
G__4822.cljs$core$IFn$_invoke$arity$variadic = G__4822__delegate;
return G__4822;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__4831 = null;
if (arguments.length > 3) {
var G__4832__i = 0, G__4832__a = new Array(arguments.length -  3);
while (G__4832__i < G__4832__a.length) {G__4832__a[G__4832__i] = arguments[G__4832__i + 3]; ++G__4832__i;}
G__4831 = new cljs.core.IndexedSeq(G__4832__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__4831);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__4833 = cljs.core.next(coll);
coll = G__4833;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__4834 = (n - (1));
var G__4835 = cljs.core.next(coll);
n = G__4834;
coll = G__4835;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__4839 = cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);
var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4839,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__4839,(1),null);
var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));
return (new RegExp(pattern,(function (){var or__3957__auto__ = flags;
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return "";
}
})()));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_4847 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__3957__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__4848_4854 = cljs.core.first(coll);
var G__4849_4855 = writer;
var G__4850_4856 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4848_4854,G__4849_4855,G__4850_4856) : print_one.call(null,G__4848_4854,G__4849_4855,G__4850_4856));
} else {
}

var coll_4857__$1 = cljs.core.next(coll);
var n_4858 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_4857__$1) && (((n_4858 == null)) || (!((n_4858 === (0)))))){
cljs.core._write(writer,sep);

var G__4851_4859 = cljs.core.first(coll_4857__$1);
var G__4852_4860 = writer;
var G__4853_4861 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4851_4859,G__4852_4860,G__4853_4861) : print_one.call(null,G__4851_4859,G__4852_4860,G__4853_4861));

var G__4862 = cljs.core.next(coll_4857__$1);
var G__4863 = (n_4858 - (1));
coll_4857__$1 = G__4862;
n_4858 = G__4863;
continue;
} else {
if((cljs.core.seq(coll_4857__$1)) && ((n_4858 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__3957__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_4847;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__4868 = cljs.core.seq(ss);
var chunk__4869 = null;
var count__4870 = (0);
var i__4871 = (0);
while(true){
if((i__4871 < count__4870)){
var s = chunk__4869.cljs$core$IIndexed$_nth$arity$2(null,i__4871);
cljs.core._write(writer,s);

var G__4872 = seq__4868;
var G__4873 = chunk__4869;
var G__4874 = count__4870;
var G__4875 = (i__4871 + (1));
seq__4868 = G__4872;
chunk__4869 = G__4873;
count__4870 = G__4874;
i__4871 = G__4875;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4868);
if(temp__4126__auto__){
var seq__4868__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4868__$1)){
var c__4326__auto__ = cljs.core.chunk_first(seq__4868__$1);
var G__4876 = cljs.core.chunk_rest(seq__4868__$1);
var G__4877 = c__4326__auto__;
var G__4878 = cljs.core.count(c__4326__auto__);
var G__4879 = (0);
seq__4868 = G__4876;
chunk__4869 = G__4877;
count__4870 = G__4878;
i__4871 = G__4879;
continue;
} else {
var s = cljs.core.first(seq__4868__$1);
cljs.core._write(writer,s);

var G__4880 = cljs.core.next(seq__4868__$1);
var G__4881 = null;
var G__4882 = (0);
var G__4883 = (0);
seq__4868 = G__4880;
chunk__4869 = G__4881;
count__4870 = G__4882;
i__4871 = G__4883;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__4884__i = 0, G__4884__a = new Array(arguments.length -  1);
while (G__4884__i < G__4884__a.length) {G__4884__a[G__4884__i] = arguments[G__4884__i + 1]; ++G__4884__i;}
  ss = new cljs.core.IndexedSeq(G__4884__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__4885){
var writer = cljs.core.first(arglist__4885);
var ss = cljs.core.rest(arglist__4885);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj4887 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj4887;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__4890 = "[\\\\\"\b\f\n\r\t]";
var G__4891 = "g";
return RegExp(G__4890,G__4891);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3949__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3949__auto__)){
var and__3949__auto____$1 = (function (){var G__4905 = obj;
if(G__4905){
var bit__4251__auto__ = (G__4905.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4251__auto__) || (G__4905.cljs$core$IMeta$)){
return true;
} else {
if((!G__4905.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__4905);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__4905);
}
})();
if(and__3949__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__4906_4916 = cljs.core.meta(obj);
var G__4907_4917 = writer;
var G__4908_4918 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__4906_4916,G__4907_4917,G__4908_4918) : cljs.core.pr_writer.call(null,G__4906_4916,G__4907_4917,G__4908_4918));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__4909 = obj;
if(G__4909){
var bit__4248__auto__ = (G__4909.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4248__auto__) || (G__4909.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__4910 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__4911 = cljs.core.pr_writer;
var G__4912 = writer;
var G__4913 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__4910,G__4911,G__4912,G__4913) : cljs.core.print_map.call(null,G__4910,G__4911,G__4912,G__4913));
} else {
if(cljs.core.array_QMARK_(obj)){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__4914 = obj;
return goog.isString(G__4914);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__4919 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__4919;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__4915 = obj;
if(G__4915){
var bit__4251__auto__ = (G__4915.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4251__auto__) || (G__4915.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__4915.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__4915);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__4915);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__4923 = obj;
var G__4924 = writer;
var G__4925 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__4923,G__4924,G__4925) : alt_impl.call(null,G__4923,G__4924,G__4925));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__4930 = cljs.core.seq(cljs.core.next(objs));
var chunk__4931 = null;
var count__4932 = (0);
var i__4933 = (0);
while(true){
if((i__4933 < count__4932)){
var obj = chunk__4931.cljs$core$IIndexed$_nth$arity$2(null,i__4933);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__4934 = seq__4930;
var G__4935 = chunk__4931;
var G__4936 = count__4932;
var G__4937 = (i__4933 + (1));
seq__4930 = G__4934;
chunk__4931 = G__4935;
count__4932 = G__4936;
i__4933 = G__4937;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__4930);
if(temp__4126__auto__){
var seq__4930__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__4930__$1)){
var c__4326__auto__ = cljs.core.chunk_first(seq__4930__$1);
var G__4938 = cljs.core.chunk_rest(seq__4930__$1);
var G__4939 = c__4326__auto__;
var G__4940 = cljs.core.count(c__4326__auto__);
var G__4941 = (0);
seq__4930 = G__4938;
chunk__4931 = G__4939;
count__4932 = G__4940;
i__4933 = G__4941;
continue;
} else {
var obj = cljs.core.first(seq__4930__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__4942 = cljs.core.next(seq__4930__$1);
var G__4943 = null;
var G__4944 = (0);
var G__4945 = (0);
seq__4930 = G__4942;
chunk__4931 = G__4943;
count__4932 = G__4944;
i__4933 = G__4945;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__4946__i = 0, G__4946__a = new Array(arguments.length -  0);
while (G__4946__i < G__4946__a.length) {G__4946__a[G__4946__i] = arguments[G__4946__i + 0]; ++G__4946__i;}
  objs = new cljs.core.IndexedSeq(G__4946__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__4947){
var objs = cljs.core.seq(arglist__4947);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__4948__i = 0, G__4948__a = new Array(arguments.length -  0);
while (G__4948__i < G__4948__a.length) {G__4948__a[G__4948__i] = arguments[G__4948__i + 0]; ++G__4948__i;}
  objs = new cljs.core.IndexedSeq(G__4948__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__4949){
var objs = cljs.core.seq(arglist__4949);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__4950__i = 0, G__4950__a = new Array(arguments.length -  0);
while (G__4950__i < G__4950__a.length) {G__4950__a[G__4950__i] = arguments[G__4950__i + 0]; ++G__4950__i;}
  objs = new cljs.core.IndexedSeq(G__4950__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__4951){
var objs = cljs.core.seq(arglist__4951);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__4952__i = 0, G__4952__a = new Array(arguments.length -  0);
while (G__4952__i < G__4952__a.length) {G__4952__a[G__4952__i] = arguments[G__4952__i + 0]; ++G__4952__i;}
  objs = new cljs.core.IndexedSeq(G__4952__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__4953){
var objs = cljs.core.seq(arglist__4953);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__4954__i = 0, G__4954__a = new Array(arguments.length -  0);
while (G__4954__i < G__4954__a.length) {G__4954__a[G__4954__i] = arguments[G__4954__i + 0]; ++G__4954__i;}
  objs = new cljs.core.IndexedSeq(G__4954__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__4955){
var objs = cljs.core.seq(arglist__4955);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__4956__i = 0, G__4956__a = new Array(arguments.length -  0);
while (G__4956__i < G__4956__a.length) {G__4956__a[G__4956__i] = arguments[G__4956__i + 0]; ++G__4956__i;}
  objs = new cljs.core.IndexedSeq(G__4956__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__4957){
var objs = cljs.core.seq(arglist__4957);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__4958__i = 0, G__4958__a = new Array(arguments.length -  0);
while (G__4958__i < G__4958__a.length) {G__4958__a[G__4958__i] = arguments[G__4958__i + 0]; ++G__4958__i;}
  objs = new cljs.core.IndexedSeq(G__4958__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__4959){
var objs = cljs.core.seq(arglist__4959);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__4960__i = 0, G__4960__a = new Array(arguments.length -  0);
while (G__4960__i < G__4960__a.length) {G__4960__a[G__4960__i] = arguments[G__4960__i + 0]; ++G__4960__i;}
  objs = new cljs.core.IndexedSeq(G__4960__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__4961){
var objs = cljs.core.seq(arglist__4961);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__4968_4974 = cljs.core.key(e);
var G__4969_4975 = w;
var G__4970_4976 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4968_4974,G__4969_4975,G__4970_4976) : print_one.call(null,G__4968_4974,G__4969_4975,G__4970_4976));

cljs.core._write(w," ");

var G__4971 = cljs.core.val(e);
var G__4972 = w;
var G__4973 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__4971,G__4972,G__4973) : print_one.call(null,G__4971,G__4972,G__4973));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__4977__i = 0, G__4977__a = new Array(arguments.length -  2);
while (G__4977__i < G__4977__a.length) {G__4977__a[G__4977__i] = arguments[G__4977__i + 2]; ++G__4977__i;}
  args = new cljs.core.IndexedSeq(G__4977__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__4978){
var iref = cljs.core.first(arglist__4978);
arglist__4978 = cljs.core.next(arglist__4978);
var f = cljs.core.first(arglist__4978);
var args = cljs.core.rest(arglist__4978);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__4981 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__4981) : cljs.core.atom.call(null,G__4981));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__4983 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4983) : cljs.core.deref.call(null,G__4983));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__4984_SHARP_,p2__4985_SHARP_){
var ret = (function (){var G__4988 = p1__4984_SHARP_;
var G__4989 = p2__4985_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4988,G__4989) : rf.call(null,G__4988,G__4989));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__4992 = null;
var G__4992__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__4992__1 = (function (result){
var G__4991 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4991) : rf.call(null,G__4991));
});
var G__4992__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__4992 = function(result,input){
switch(arguments.length){
case 0:
return G__4992__0.call(this);
case 1:
return G__4992__1.call(this,result);
case 2:
return G__4992__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__4992.cljs$core$IFn$_invoke$arity$0 = G__4992__0;
G__4992.cljs$core$IFn$_invoke$arity$1 = G__4992__1;
G__4992.cljs$core$IFn$_invoke$arity$2 = G__4992__2;
return G__4992;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__5001 = null;
var G__5001__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__5001__1 = (function (result){
var G__4997 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__4997) : rf.call(null,G__4997));
});
var G__5001__2 = (function (result,input){
var prior = (function (){var G__4998 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__4998) : cljs.core.deref.call(null,G__4998));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__4999 = result;
var G__5000 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__4999,G__5000) : rf.call(null,G__4999,G__5000));
}
});
G__5001 = function(result,input){
switch(arguments.length){
case 0:
return G__5001__0.call(this);
case 1:
return G__5001__1.call(this,result);
case 2:
return G__5001__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__5001.cljs$core$IFn$_invoke$arity$0 = G__5001__0;
G__5001.cljs$core$IFn$_invoke$arity$1 = G__5001__1;
G__5001.cljs$core$IFn$_invoke$arity$2 = G__5001__2;
return G__5001;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4433__auto__ = this;
return cljs.core.es6_iterator(this__4433__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__5003_SHARP_,p2__5002_SHARP_){
var G__5005 = p2__5002_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__5005) : proc.call(null,G__5005));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj5007 = {};
return obj5007;
})();

/**
 * Recursively transforms clj values to JavaScript
 */
cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__3949__auto__ = x;
if(and__3949__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3949__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4221__auto__ = (((x == null))?null:x);
return (function (){var or__3957__auto__ = (cljs.core._clj__GT_js[(function (){var G__5011 = x__4221__auto__;
return goog.typeOf(G__5011);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

/**
 * Transforms map keys to valid JavaScript keys. Arbitrary keys are
 * encoded to their string representation via (pr-str x)
 */
cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__3949__auto__ = x;
if(and__3949__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3949__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4221__auto__ = (((x == null))?null:x);
return (function (){var or__3957__auto__ = (cljs.core._key__GT_js[(function (){var G__5015 = x__4221__auto__;
return goog.typeOf(G__5015);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__5018 = k;
if(G__5018){
var bit__4251__auto__ = null;
if(cljs.core.truth_((function (){var or__3957__auto__ = bit__4251__auto__;
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return G__5018.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__5018.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__5018);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__5018);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__5019 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__5019) : cljs.core.clj__GT_js.call(null,G__5019));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__5035 = x;
if(G__5035){
var bit__4251__auto__ = null;
if(cljs.core.truth_((function (){var or__3957__auto__ = bit__4251__auto__;
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return G__5035.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__5035.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__5035);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__5035);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj5037 = {};
return obj5037;
})();
var seq__5038_5048 = cljs.core.seq(x);
var chunk__5039_5049 = null;
var count__5040_5050 = (0);
var i__5041_5051 = (0);
while(true){
if((i__5041_5051 < count__5040_5050)){
var vec__5042_5052 = chunk__5039_5049.cljs$core$IIndexed$_nth$arity$2(null,i__5041_5051);
var k_5053 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5042_5052,(0),null);
var v_5054 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5042_5052,(1),null);
(m[cljs.core.key__GT_js(k_5053)] = cljs$core$clj__GT_js(v_5054));

var G__5055 = seq__5038_5048;
var G__5056 = chunk__5039_5049;
var G__5057 = count__5040_5050;
var G__5058 = (i__5041_5051 + (1));
seq__5038_5048 = G__5055;
chunk__5039_5049 = G__5056;
count__5040_5050 = G__5057;
i__5041_5051 = G__5058;
continue;
} else {
var temp__4126__auto___5059 = cljs.core.seq(seq__5038_5048);
if(temp__4126__auto___5059){
var seq__5038_5060__$1 = temp__4126__auto___5059;
if(cljs.core.chunked_seq_QMARK_(seq__5038_5060__$1)){
var c__4326__auto___5061 = cljs.core.chunk_first(seq__5038_5060__$1);
var G__5062 = cljs.core.chunk_rest(seq__5038_5060__$1);
var G__5063 = c__4326__auto___5061;
var G__5064 = cljs.core.count(c__4326__auto___5061);
var G__5065 = (0);
seq__5038_5048 = G__5062;
chunk__5039_5049 = G__5063;
count__5040_5050 = G__5064;
i__5041_5051 = G__5065;
continue;
} else {
var vec__5043_5066 = cljs.core.first(seq__5038_5060__$1);
var k_5067 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5043_5066,(0),null);
var v_5068 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5043_5066,(1),null);
(m[cljs.core.key__GT_js(k_5067)] = cljs$core$clj__GT_js(v_5068));

var G__5069 = cljs.core.next(seq__5038_5060__$1);
var G__5070 = null;
var G__5071 = (0);
var G__5072 = (0);
seq__5038_5048 = G__5069;
chunk__5039_5049 = G__5070;
count__5040_5050 = G__5071;
i__5041_5051 = G__5072;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__5044_5073 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__5045_5074 = null;
var count__5046_5075 = (0);
var i__5047_5076 = (0);
while(true){
if((i__5047_5076 < count__5046_5075)){
var x_5077__$1 = chunk__5045_5074.cljs$core$IIndexed$_nth$arity$2(null,i__5047_5076);
arr.push(x_5077__$1);

var G__5078 = seq__5044_5073;
var G__5079 = chunk__5045_5074;
var G__5080 = count__5046_5075;
var G__5081 = (i__5047_5076 + (1));
seq__5044_5073 = G__5078;
chunk__5045_5074 = G__5079;
count__5046_5075 = G__5080;
i__5047_5076 = G__5081;
continue;
} else {
var temp__4126__auto___5082 = cljs.core.seq(seq__5044_5073);
if(temp__4126__auto___5082){
var seq__5044_5083__$1 = temp__4126__auto___5082;
if(cljs.core.chunked_seq_QMARK_(seq__5044_5083__$1)){
var c__4326__auto___5084 = cljs.core.chunk_first(seq__5044_5083__$1);
var G__5085 = cljs.core.chunk_rest(seq__5044_5083__$1);
var G__5086 = c__4326__auto___5084;
var G__5087 = cljs.core.count(c__4326__auto___5084);
var G__5088 = (0);
seq__5044_5073 = G__5085;
chunk__5045_5074 = G__5086;
count__5046_5075 = G__5087;
i__5047_5076 = G__5088;
continue;
} else {
var x_5089__$1 = cljs.core.first(seq__5044_5083__$1);
arr.push(x_5089__$1);

var G__5090 = cljs.core.next(seq__5044_5083__$1);
var G__5091 = null;
var G__5092 = (0);
var G__5093 = (0);
seq__5044_5073 = G__5090;
chunk__5045_5074 = G__5091;
count__5046_5075 = G__5092;
i__5047_5076 = G__5093;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj5095 = {};
return obj5095;
})();

/**
 * Transforms JavaScript values to Clojure
 */
cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__3949__auto__ = x;
if(and__3949__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3949__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4221__auto__ = (((x == null))?null:x);
return (function (){var or__3957__auto__ = (cljs.core._js__GT_clj[(function (){var G__5099 = x__4221__auto__;
return goog.typeOf(G__5099);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__5156__delegate = function (x,opts){
var map__5129 = opts;
var map__5129__$1 = ((cljs.core.seq_QMARK_(map__5129))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__5129):map__5129);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__5129__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__5129,map__5129__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__5145 = x__$1;
if(G__5145){
var bit__4251__auto__ = null;
if(cljs.core.truth_((function (){var or__3957__auto__ = bit__4251__auto__;
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return G__5145.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__5145.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__5145);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__5145);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.array_QMARK_(x__$1)){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4299__auto__ = ((function (map__5129,map__5129__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__5146(s__5147){
return (new cljs.core.LazySeq(null,((function (map__5129,map__5129__$1,keywordize_keys,keyfn){
return (function (){
var s__5147__$1 = s__5147;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__5147__$1);
if(temp__4126__auto__){
var s__5147__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__5147__$2)){
var c__4297__auto__ = cljs.core.chunk_first(s__5147__$2);
var size__4298__auto__ = cljs.core.count(c__4297__auto__);
var b__5149 = cljs.core.chunk_buffer(size__4298__auto__);
if((function (){var i__5148 = (0);
while(true){
if((i__5148 < size__4298__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4297__auto__,i__5148);
cljs.core.chunk_append(b__5149,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__5154 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__5154) : keyfn.call(null,G__5154));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__5157 = (i__5148 + (1));
i__5148 = G__5157;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__5149),cljs$core$js__GT_clj_$_thisfn_$_iter__5146(cljs.core.chunk_rest(s__5147__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__5149),null);
}
} else {
var k = cljs.core.first(s__5147__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__5155 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__5155) : keyfn.call(null,G__5155));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__5146(cljs.core.rest(s__5147__$2)));
}
} else {
return null;
}
break;
}
});})(map__5129,map__5129__$1,keywordize_keys,keyfn))
,null,null));
});})(map__5129,map__5129__$1,keywordize_keys,keyfn))
;
return iter__4299__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__5129,map__5129__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__5156 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__5158__i = 0, G__5158__a = new Array(arguments.length -  1);
while (G__5158__i < G__5158__a.length) {G__5158__a[G__5158__i] = arguments[G__5158__i + 1]; ++G__5158__i;}
  opts = new cljs.core.IndexedSeq(G__5158__a,0);
} 
return G__5156__delegate.call(this,x,opts);};
G__5156.cljs$lang$maxFixedArity = 1;
G__5156.cljs$lang$applyTo = (function (arglist__5159){
var x = cljs.core.first(arglist__5159);
var opts = cljs.core.rest(arglist__5159);
return G__5156__delegate(x,opts);
});
G__5156.cljs$core$IFn$_invoke$arity$variadic = G__5156__delegate;
return G__5156;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__5160 = null;
if (arguments.length > 1) {
var G__5161__i = 0, G__5161__a = new Array(arguments.length -  1);
while (G__5161__i < G__5161__a.length) {G__5161__a[G__5161__i] = arguments[G__5161__i + 1]; ++G__5161__i;}
G__5160 = new cljs.core.IndexedSeq(G__5161__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__5160);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__5164 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__5164) : cljs.core.atom.call(null,G__5164));
})();
return ((function (mem){
return (function() { 
var G__5166__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__5165 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5165) : cljs.core.deref.call(null,G__5165));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__5166 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__5167__i = 0, G__5167__a = new Array(arguments.length -  0);
while (G__5167__i < G__5167__a.length) {G__5167__a[G__5167__i] = arguments[G__5167__i + 0]; ++G__5167__i;}
  args = new cljs.core.IndexedSeq(G__5167__a,0);
} 
return G__5166__delegate.call(this,args);};
G__5166.cljs$lang$maxFixedArity = 0;
G__5166.cljs$lang$applyTo = (function (arglist__5168){
var args = cljs.core.seq(arglist__5168);
return G__5166__delegate(args);
});
G__5166.cljs$core$IFn$_invoke$arity$variadic = G__5166__delegate;
return G__5166;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__5170 = ret;
f = G__5170;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__5171__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__5171 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__5172__i = 0, G__5172__a = new Array(arguments.length -  1);
while (G__5172__i < G__5172__a.length) {G__5172__a[G__5172__i] = arguments[G__5172__i + 1]; ++G__5172__i;}
  args = new cljs.core.IndexedSeq(G__5172__a,0);
} 
return G__5171__delegate.call(this,f,args);};
G__5171.cljs$lang$maxFixedArity = 1;
G__5171.cljs$lang$applyTo = (function (arglist__5173){
var f = cljs.core.first(arglist__5173);
var args = cljs.core.rest(arglist__5173);
return G__5171__delegate(f,args);
});
G__5171.cljs$core$IFn$_invoke$arity$variadic = G__5171__delegate;
return G__5171;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__5174 = null;
if (arguments.length > 1) {
var G__5175__i = 0, G__5175__a = new Array(arguments.length -  1);
while (G__5175__i < G__5175__a.length) {G__5175__a[G__5175__i] = arguments[G__5175__i + 1]; ++G__5175__i;}
G__5174 = new cljs.core.IndexedSeq(G__5175__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__5174);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__5178 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__5178) : Math.floor.call(null,G__5178));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__5180 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__5180) : f.call(null,G__5180));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__5182 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__5182) : cljs.core.atom.call(null,G__5182));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__5183__i = 0, G__5183__a = new Array(arguments.length -  1);
while (G__5183__i < G__5183__a.length) {G__5183__a[G__5183__i] = arguments[G__5183__i + 1]; ++G__5183__i;}
  args = new cljs.core.IndexedSeq(G__5183__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__5184){
var f = cljs.core.first(arglist__5184);
var args = cljs.core.rest(arglist__5184);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__5249 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5249) : cljs.core.deref.call(null,G__5249));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__3957__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
var and__3949__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3949__auto__){
var and__3949__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3949__auto____$1){
var and__3949__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3949__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__5274 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__5272 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__5272) : child.call(null,G__5272));
})(),(function (){var G__5273 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__5273) : parent.call(null,G__5273));
})());
var G__5275 = (i + (1));
ret = G__5274;
i = G__5275;
continue;
}
break;
}
} else {
return and__3949__auto____$2;
}
} else {
return and__3949__auto____$1;
}
} else {
return and__3949__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__5279 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5279) : cljs.core.deref.call(null,G__5279));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__5283 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5283) : cljs.core.deref.call(null,G__5283));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__5287 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5287) : cljs.core.deref.call(null,G__5287));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__5296 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__5296) : targets.call(null,G__5296));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__5297 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__5297) : sources.call(null,G__5297));
})()));
});})(tp,td,ta))
;
var or__3957__auto__ = ((cljs.core.contains_QMARK_((function (){var G__5301 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__5301) : tp.call(null,G__5301));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__5302 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__5302) : ta.call(null,G__5302));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__5303 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__5303) : ta.call(null,G__5303));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__5310 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__5310) : parentMap.call(null,G__5310));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__5311 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__5311) : parentMap.call(null,G__5311));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__5304_SHARP_){
return cljs.core.cons(cljs.core.first(p1__5304_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__5304_SHARP_),cljs.core.second(p1__5304_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__5312 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__5312) : parentMap.call(null,G__5312));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__5305_SHARP_,p2__5306_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__5305_SHARP_,p2__5306_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__5315 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5315) : cljs.core.deref.call(null,G__5315));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__5316 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5316) : cljs.core.deref.call(null,G__5316));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__5332 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5332) : cljs.core.deref.call(null,G__5332));
})().call(null,x);
var or__3957__auto__ = (cljs.core.truth_((function (){var and__3949__auto__ = xprefs;
if(cljs.core.truth_(and__3949__auto__)){
var G__5334 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__5334) : xprefs.call(null,G__5334));
} else {
return and__3949__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__5335 = cljs.core.rest(ps);
ps = G__5335;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3957__auto____$1)){
return or__3957__auto____$1;
} else {
var or__3957__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__5336 = cljs.core.rest(ps);
ps = G__5336;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3957__auto____$2)){
return or__3957__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__3957__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3957__auto__)){
return or__3957__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__5350){
var vec__5351 = p__5350;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5351,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__5351,(1),null);
var e = vec__5351;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__5352 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5352) : cljs.core.deref.call(null,G__5352));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3957__auto__ = (be == null);
if(or__3957__auto__){
return or__3957__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__5353 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5353) : cljs.core.deref.call(null,G__5353));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__5354 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5354) : cljs.core.deref.call(null,G__5354));
})(),(function (){var G__5355 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5355) : cljs.core.deref.call(null,G__5355));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj5357 = {};
return obj5357;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__3949__auto__ = mf;
if(and__3949__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3949__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4221__auto__ = (((mf == null))?null:mf);
return (function (){var or__3957__auto__ = (cljs.core._reset[(function (){var G__5361 = x__4221__auto__;
return goog.typeOf(G__5361);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._reset["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__3949__auto__ = mf;
if(and__3949__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3949__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4221__auto__ = (((mf == null))?null:mf);
return (function (){var or__3957__auto__ = (cljs.core._add_method[(function (){var G__5365 = x__4221__auto__;
return goog.typeOf(G__5365);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._add_method["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__3949__auto__ = mf;
if(and__3949__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3949__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4221__auto__ = (((mf == null))?null:mf);
return (function (){var or__3957__auto__ = (cljs.core._remove_method[(function (){var G__5369 = x__4221__auto__;
return goog.typeOf(G__5369);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3949__auto__ = mf;
if(and__3949__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3949__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4221__auto__ = (((mf == null))?null:mf);
return (function (){var or__3957__auto__ = (cljs.core._prefer_method[(function (){var G__5373 = x__4221__auto__;
return goog.typeOf(G__5373);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__3949__auto__ = mf;
if(and__3949__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3949__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4221__auto__ = (((mf == null))?null:mf);
return (function (){var or__3957__auto__ = (cljs.core._get_method[(function (){var G__5377 = x__4221__auto__;
return goog.typeOf(G__5377);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._get_method["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__3949__auto__ = mf;
if(and__3949__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3949__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4221__auto__ = (((mf == null))?null:mf);
return (function (){var or__3957__auto__ = (cljs.core._methods[(function (){var G__5381 = x__4221__auto__;
return goog.typeOf(G__5381);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._methods["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__3949__auto__ = mf;
if(and__3949__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3949__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4221__auto__ = (((mf == null))?null:mf);
return (function (){var or__3957__auto__ = (cljs.core._prefers[(function (){var G__5385 = x__4221__auto__;
return goog.typeOf(G__5385);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._prefers["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core._default_dispatch_val = (function cljs$core$_default_dispatch_val(mf){
if((function (){var and__3949__auto__ = mf;
if(and__3949__auto__){
return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
} else {
return and__3949__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
} else {
var x__4221__auto__ = (((mf == null))?null:mf);
return (function (){var or__3957__auto__ = (cljs.core._default_dispatch_val[(function (){var G__5389 = x__4221__auto__;
return goog.typeOf(G__5389);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._default_dispatch_val["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val",mf);
}
}
})().call(null,mf);
}
});

cljs.core._dispatch_fn = (function cljs$core$_dispatch_fn(mf){
if((function (){var and__3949__auto__ = mf;
if(and__3949__auto__){
return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
} else {
return and__3949__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
} else {
var x__4221__auto__ = (((mf == null))?null:mf);
return (function (){var or__3957__auto__ = (cljs.core._dispatch_fn[(function (){var G__5393 = x__4221__auto__;
return goog.typeOf(G__5393);
})()]);
if(or__3957__auto__){
return or__3957__auto__;
} else {
var or__3957__auto____$1 = (cljs.core._dispatch_fn["_"]);
if(or__3957__auto____$1){
return or__3957__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__5395 = this$__$1;
return goog.getUid(G__5395);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
return self__.default_dispatch_val;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__5396 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5396) : cljs.core.deref.call(null,G__5396));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__5397 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5397) : cljs.core.deref.call(null,G__5397));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
return self__.dispatch_fn;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__5398 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5398) : cljs.core.deref.call(null,G__5398));
})(),(function (){var G__5399 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5399) : cljs.core.deref.call(null,G__5399));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__5400 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5400) : cljs.core.deref.call(null,G__5400));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__5401 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__5401) : cljs.core.deref.call(null,G__5401));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.call = (function() {
var G__6242 = null;
var G__6242__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__6242__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5402 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__5402) : self__.dispatch_fn.call(null,G__5402));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5403 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__5403) : target_fn.call(null,G__5403));
});
var G__6242__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5404 = a;
var G__5405 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__5404,G__5405) : self__.dispatch_fn.call(null,G__5404,G__5405));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5406 = a;
var G__5407 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__5406,G__5407) : target_fn.call(null,G__5406,G__5407));
});
var G__6242__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5408 = a;
var G__5409 = b;
var G__5410 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__5408,G__5409,G__5410) : self__.dispatch_fn.call(null,G__5408,G__5409,G__5410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5411 = a;
var G__5412 = b;
var G__5413 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__5411,G__5412,G__5413) : target_fn.call(null,G__5411,G__5412,G__5413));
});
var G__6242__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5414 = a;
var G__5415 = b;
var G__5416 = c;
var G__5417 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__5414,G__5415,G__5416,G__5417) : self__.dispatch_fn.call(null,G__5414,G__5415,G__5416,G__5417));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5418 = a;
var G__5419 = b;
var G__5420 = c;
var G__5421 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__5418,G__5419,G__5420,G__5421) : target_fn.call(null,G__5418,G__5419,G__5420,G__5421));
});
var G__6242__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5422 = a;
var G__5423 = b;
var G__5424 = c;
var G__5425 = d;
var G__5426 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__5422,G__5423,G__5424,G__5425,G__5426) : self__.dispatch_fn.call(null,G__5422,G__5423,G__5424,G__5425,G__5426));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5427 = a;
var G__5428 = b;
var G__5429 = c;
var G__5430 = d;
var G__5431 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__5427,G__5428,G__5429,G__5430,G__5431) : target_fn.call(null,G__5427,G__5428,G__5429,G__5430,G__5431));
});
var G__6242__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5432 = a;
var G__5433 = b;
var G__5434 = c;
var G__5435 = d;
var G__5436 = e;
var G__5437 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__5432,G__5433,G__5434,G__5435,G__5436,G__5437) : self__.dispatch_fn.call(null,G__5432,G__5433,G__5434,G__5435,G__5436,G__5437));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5438 = a;
var G__5439 = b;
var G__5440 = c;
var G__5441 = d;
var G__5442 = e;
var G__5443 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__5438,G__5439,G__5440,G__5441,G__5442,G__5443) : target_fn.call(null,G__5438,G__5439,G__5440,G__5441,G__5442,G__5443));
});
var G__6242__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5444 = a;
var G__5445 = b;
var G__5446 = c;
var G__5447 = d;
var G__5448 = e;
var G__5449 = f;
var G__5450 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__5444,G__5445,G__5446,G__5447,G__5448,G__5449,G__5450) : self__.dispatch_fn.call(null,G__5444,G__5445,G__5446,G__5447,G__5448,G__5449,G__5450));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5451 = a;
var G__5452 = b;
var G__5453 = c;
var G__5454 = d;
var G__5455 = e;
var G__5456 = f;
var G__5457 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__5451,G__5452,G__5453,G__5454,G__5455,G__5456,G__5457) : target_fn.call(null,G__5451,G__5452,G__5453,G__5454,G__5455,G__5456,G__5457));
});
var G__6242__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5458 = a;
var G__5459 = b;
var G__5460 = c;
var G__5461 = d;
var G__5462 = e;
var G__5463 = f;
var G__5464 = g;
var G__5465 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__5458,G__5459,G__5460,G__5461,G__5462,G__5463,G__5464,G__5465) : self__.dispatch_fn.call(null,G__5458,G__5459,G__5460,G__5461,G__5462,G__5463,G__5464,G__5465));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5466 = a;
var G__5467 = b;
var G__5468 = c;
var G__5469 = d;
var G__5470 = e;
var G__5471 = f;
var G__5472 = g;
var G__5473 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__5466,G__5467,G__5468,G__5469,G__5470,G__5471,G__5472,G__5473) : target_fn.call(null,G__5466,G__5467,G__5468,G__5469,G__5470,G__5471,G__5472,G__5473));
});
var G__6242__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5474 = a;
var G__5475 = b;
var G__5476 = c;
var G__5477 = d;
var G__5478 = e;
var G__5479 = f;
var G__5480 = g;
var G__5481 = h;
var G__5482 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__5474,G__5475,G__5476,G__5477,G__5478,G__5479,G__5480,G__5481,G__5482) : self__.dispatch_fn.call(null,G__5474,G__5475,G__5476,G__5477,G__5478,G__5479,G__5480,G__5481,G__5482));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5483 = a;
var G__5484 = b;
var G__5485 = c;
var G__5486 = d;
var G__5487 = e;
var G__5488 = f;
var G__5489 = g;
var G__5490 = h;
var G__5491 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__5483,G__5484,G__5485,G__5486,G__5487,G__5488,G__5489,G__5490,G__5491) : target_fn.call(null,G__5483,G__5484,G__5485,G__5486,G__5487,G__5488,G__5489,G__5490,G__5491));
});
var G__6242__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5492 = a;
var G__5493 = b;
var G__5494 = c;
var G__5495 = d;
var G__5496 = e;
var G__5497 = f;
var G__5498 = g;
var G__5499 = h;
var G__5500 = i;
var G__5501 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__5492,G__5493,G__5494,G__5495,G__5496,G__5497,G__5498,G__5499,G__5500,G__5501) : self__.dispatch_fn.call(null,G__5492,G__5493,G__5494,G__5495,G__5496,G__5497,G__5498,G__5499,G__5500,G__5501));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5502 = a;
var G__5503 = b;
var G__5504 = c;
var G__5505 = d;
var G__5506 = e;
var G__5507 = f;
var G__5508 = g;
var G__5509 = h;
var G__5510 = i;
var G__5511 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__5502,G__5503,G__5504,G__5505,G__5506,G__5507,G__5508,G__5509,G__5510,G__5511) : target_fn.call(null,G__5502,G__5503,G__5504,G__5505,G__5506,G__5507,G__5508,G__5509,G__5510,G__5511));
});
var G__6242__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5512 = a;
var G__5513 = b;
var G__5514 = c;
var G__5515 = d;
var G__5516 = e;
var G__5517 = f;
var G__5518 = g;
var G__5519 = h;
var G__5520 = i;
var G__5521 = j;
var G__5522 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__5512,G__5513,G__5514,G__5515,G__5516,G__5517,G__5518,G__5519,G__5520,G__5521,G__5522) : self__.dispatch_fn.call(null,G__5512,G__5513,G__5514,G__5515,G__5516,G__5517,G__5518,G__5519,G__5520,G__5521,G__5522));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5523 = a;
var G__5524 = b;
var G__5525 = c;
var G__5526 = d;
var G__5527 = e;
var G__5528 = f;
var G__5529 = g;
var G__5530 = h;
var G__5531 = i;
var G__5532 = j;
var G__5533 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__5523,G__5524,G__5525,G__5526,G__5527,G__5528,G__5529,G__5530,G__5531,G__5532,G__5533) : target_fn.call(null,G__5523,G__5524,G__5525,G__5526,G__5527,G__5528,G__5529,G__5530,G__5531,G__5532,G__5533));
});
var G__6242__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5534 = a;
var G__5535 = b;
var G__5536 = c;
var G__5537 = d;
var G__5538 = e;
var G__5539 = f;
var G__5540 = g;
var G__5541 = h;
var G__5542 = i;
var G__5543 = j;
var G__5544 = k;
var G__5545 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__5534,G__5535,G__5536,G__5537,G__5538,G__5539,G__5540,G__5541,G__5542,G__5543,G__5544,G__5545) : self__.dispatch_fn.call(null,G__5534,G__5535,G__5536,G__5537,G__5538,G__5539,G__5540,G__5541,G__5542,G__5543,G__5544,G__5545));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5546 = a;
var G__5547 = b;
var G__5548 = c;
var G__5549 = d;
var G__5550 = e;
var G__5551 = f;
var G__5552 = g;
var G__5553 = h;
var G__5554 = i;
var G__5555 = j;
var G__5556 = k;
var G__5557 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__5546,G__5547,G__5548,G__5549,G__5550,G__5551,G__5552,G__5553,G__5554,G__5555,G__5556,G__5557) : target_fn.call(null,G__5546,G__5547,G__5548,G__5549,G__5550,G__5551,G__5552,G__5553,G__5554,G__5555,G__5556,G__5557));
});
var G__6242__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5558 = a;
var G__5559 = b;
var G__5560 = c;
var G__5561 = d;
var G__5562 = e;
var G__5563 = f;
var G__5564 = g;
var G__5565 = h;
var G__5566 = i;
var G__5567 = j;
var G__5568 = k;
var G__5569 = l;
var G__5570 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__5558,G__5559,G__5560,G__5561,G__5562,G__5563,G__5564,G__5565,G__5566,G__5567,G__5568,G__5569,G__5570) : self__.dispatch_fn.call(null,G__5558,G__5559,G__5560,G__5561,G__5562,G__5563,G__5564,G__5565,G__5566,G__5567,G__5568,G__5569,G__5570));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5571 = a;
var G__5572 = b;
var G__5573 = c;
var G__5574 = d;
var G__5575 = e;
var G__5576 = f;
var G__5577 = g;
var G__5578 = h;
var G__5579 = i;
var G__5580 = j;
var G__5581 = k;
var G__5582 = l;
var G__5583 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__5571,G__5572,G__5573,G__5574,G__5575,G__5576,G__5577,G__5578,G__5579,G__5580,G__5581,G__5582,G__5583) : target_fn.call(null,G__5571,G__5572,G__5573,G__5574,G__5575,G__5576,G__5577,G__5578,G__5579,G__5580,G__5581,G__5582,G__5583));
});
var G__6242__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5584 = a;
var G__5585 = b;
var G__5586 = c;
var G__5587 = d;
var G__5588 = e;
var G__5589 = f;
var G__5590 = g;
var G__5591 = h;
var G__5592 = i;
var G__5593 = j;
var G__5594 = k;
var G__5595 = l;
var G__5596 = m;
var G__5597 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__5584,G__5585,G__5586,G__5587,G__5588,G__5589,G__5590,G__5591,G__5592,G__5593,G__5594,G__5595,G__5596,G__5597) : self__.dispatch_fn.call(null,G__5584,G__5585,G__5586,G__5587,G__5588,G__5589,G__5590,G__5591,G__5592,G__5593,G__5594,G__5595,G__5596,G__5597));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5598 = a;
var G__5599 = b;
var G__5600 = c;
var G__5601 = d;
var G__5602 = e;
var G__5603 = f;
var G__5604 = g;
var G__5605 = h;
var G__5606 = i;
var G__5607 = j;
var G__5608 = k;
var G__5609 = l;
var G__5610 = m;
var G__5611 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__5598,G__5599,G__5600,G__5601,G__5602,G__5603,G__5604,G__5605,G__5606,G__5607,G__5608,G__5609,G__5610,G__5611) : target_fn.call(null,G__5598,G__5599,G__5600,G__5601,G__5602,G__5603,G__5604,G__5605,G__5606,G__5607,G__5608,G__5609,G__5610,G__5611));
});
var G__6242__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5612 = a;
var G__5613 = b;
var G__5614 = c;
var G__5615 = d;
var G__5616 = e;
var G__5617 = f;
var G__5618 = g;
var G__5619 = h;
var G__5620 = i;
var G__5621 = j;
var G__5622 = k;
var G__5623 = l;
var G__5624 = m;
var G__5625 = n;
var G__5626 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__5612,G__5613,G__5614,G__5615,G__5616,G__5617,G__5618,G__5619,G__5620,G__5621,G__5622,G__5623,G__5624,G__5625,G__5626) : self__.dispatch_fn.call(null,G__5612,G__5613,G__5614,G__5615,G__5616,G__5617,G__5618,G__5619,G__5620,G__5621,G__5622,G__5623,G__5624,G__5625,G__5626));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5627 = a;
var G__5628 = b;
var G__5629 = c;
var G__5630 = d;
var G__5631 = e;
var G__5632 = f;
var G__5633 = g;
var G__5634 = h;
var G__5635 = i;
var G__5636 = j;
var G__5637 = k;
var G__5638 = l;
var G__5639 = m;
var G__5640 = n;
var G__5641 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__5627,G__5628,G__5629,G__5630,G__5631,G__5632,G__5633,G__5634,G__5635,G__5636,G__5637,G__5638,G__5639,G__5640,G__5641) : target_fn.call(null,G__5627,G__5628,G__5629,G__5630,G__5631,G__5632,G__5633,G__5634,G__5635,G__5636,G__5637,G__5638,G__5639,G__5640,G__5641));
});
var G__6242__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5642 = a;
var G__5643 = b;
var G__5644 = c;
var G__5645 = d;
var G__5646 = e;
var G__5647 = f;
var G__5648 = g;
var G__5649 = h;
var G__5650 = i;
var G__5651 = j;
var G__5652 = k;
var G__5653 = l;
var G__5654 = m;
var G__5655 = n;
var G__5656 = o;
var G__5657 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__5642,G__5643,G__5644,G__5645,G__5646,G__5647,G__5648,G__5649,G__5650,G__5651,G__5652,G__5653,G__5654,G__5655,G__5656,G__5657) : self__.dispatch_fn.call(null,G__5642,G__5643,G__5644,G__5645,G__5646,G__5647,G__5648,G__5649,G__5650,G__5651,G__5652,G__5653,G__5654,G__5655,G__5656,G__5657));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5658 = a;
var G__5659 = b;
var G__5660 = c;
var G__5661 = d;
var G__5662 = e;
var G__5663 = f;
var G__5664 = g;
var G__5665 = h;
var G__5666 = i;
var G__5667 = j;
var G__5668 = k;
var G__5669 = l;
var G__5670 = m;
var G__5671 = n;
var G__5672 = o;
var G__5673 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__5658,G__5659,G__5660,G__5661,G__5662,G__5663,G__5664,G__5665,G__5666,G__5667,G__5668,G__5669,G__5670,G__5671,G__5672,G__5673) : target_fn.call(null,G__5658,G__5659,G__5660,G__5661,G__5662,G__5663,G__5664,G__5665,G__5666,G__5667,G__5668,G__5669,G__5670,G__5671,G__5672,G__5673));
});
var G__6242__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5674 = a;
var G__5675 = b;
var G__5676 = c;
var G__5677 = d;
var G__5678 = e;
var G__5679 = f;
var G__5680 = g;
var G__5681 = h;
var G__5682 = i;
var G__5683 = j;
var G__5684 = k;
var G__5685 = l;
var G__5686 = m;
var G__5687 = n;
var G__5688 = o;
var G__5689 = p;
var G__5690 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__5674,G__5675,G__5676,G__5677,G__5678,G__5679,G__5680,G__5681,G__5682,G__5683,G__5684,G__5685,G__5686,G__5687,G__5688,G__5689,G__5690) : self__.dispatch_fn.call(null,G__5674,G__5675,G__5676,G__5677,G__5678,G__5679,G__5680,G__5681,G__5682,G__5683,G__5684,G__5685,G__5686,G__5687,G__5688,G__5689,G__5690));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5691 = a;
var G__5692 = b;
var G__5693 = c;
var G__5694 = d;
var G__5695 = e;
var G__5696 = f;
var G__5697 = g;
var G__5698 = h;
var G__5699 = i;
var G__5700 = j;
var G__5701 = k;
var G__5702 = l;
var G__5703 = m;
var G__5704 = n;
var G__5705 = o;
var G__5706 = p;
var G__5707 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__5691,G__5692,G__5693,G__5694,G__5695,G__5696,G__5697,G__5698,G__5699,G__5700,G__5701,G__5702,G__5703,G__5704,G__5705,G__5706,G__5707) : target_fn.call(null,G__5691,G__5692,G__5693,G__5694,G__5695,G__5696,G__5697,G__5698,G__5699,G__5700,G__5701,G__5702,G__5703,G__5704,G__5705,G__5706,G__5707));
});
var G__6242__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5708 = a;
var G__5709 = b;
var G__5710 = c;
var G__5711 = d;
var G__5712 = e;
var G__5713 = f;
var G__5714 = g;
var G__5715 = h;
var G__5716 = i;
var G__5717 = j;
var G__5718 = k;
var G__5719 = l;
var G__5720 = m;
var G__5721 = n;
var G__5722 = o;
var G__5723 = p;
var G__5724 = q;
var G__5725 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__5708,G__5709,G__5710,G__5711,G__5712,G__5713,G__5714,G__5715,G__5716,G__5717,G__5718,G__5719,G__5720,G__5721,G__5722,G__5723,G__5724,G__5725) : self__.dispatch_fn.call(null,G__5708,G__5709,G__5710,G__5711,G__5712,G__5713,G__5714,G__5715,G__5716,G__5717,G__5718,G__5719,G__5720,G__5721,G__5722,G__5723,G__5724,G__5725));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5726 = a;
var G__5727 = b;
var G__5728 = c;
var G__5729 = d;
var G__5730 = e;
var G__5731 = f;
var G__5732 = g;
var G__5733 = h;
var G__5734 = i;
var G__5735 = j;
var G__5736 = k;
var G__5737 = l;
var G__5738 = m;
var G__5739 = n;
var G__5740 = o;
var G__5741 = p;
var G__5742 = q;
var G__5743 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__5726,G__5727,G__5728,G__5729,G__5730,G__5731,G__5732,G__5733,G__5734,G__5735,G__5736,G__5737,G__5738,G__5739,G__5740,G__5741,G__5742,G__5743) : target_fn.call(null,G__5726,G__5727,G__5728,G__5729,G__5730,G__5731,G__5732,G__5733,G__5734,G__5735,G__5736,G__5737,G__5738,G__5739,G__5740,G__5741,G__5742,G__5743));
});
var G__6242__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5744 = a;
var G__5745 = b;
var G__5746 = c;
var G__5747 = d;
var G__5748 = e;
var G__5749 = f;
var G__5750 = g;
var G__5751 = h;
var G__5752 = i;
var G__5753 = j;
var G__5754 = k;
var G__5755 = l;
var G__5756 = m;
var G__5757 = n;
var G__5758 = o;
var G__5759 = p;
var G__5760 = q;
var G__5761 = r;
var G__5762 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__5744,G__5745,G__5746,G__5747,G__5748,G__5749,G__5750,G__5751,G__5752,G__5753,G__5754,G__5755,G__5756,G__5757,G__5758,G__5759,G__5760,G__5761,G__5762) : self__.dispatch_fn.call(null,G__5744,G__5745,G__5746,G__5747,G__5748,G__5749,G__5750,G__5751,G__5752,G__5753,G__5754,G__5755,G__5756,G__5757,G__5758,G__5759,G__5760,G__5761,G__5762));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5763 = a;
var G__5764 = b;
var G__5765 = c;
var G__5766 = d;
var G__5767 = e;
var G__5768 = f;
var G__5769 = g;
var G__5770 = h;
var G__5771 = i;
var G__5772 = j;
var G__5773 = k;
var G__5774 = l;
var G__5775 = m;
var G__5776 = n;
var G__5777 = o;
var G__5778 = p;
var G__5779 = q;
var G__5780 = r;
var G__5781 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__5763,G__5764,G__5765,G__5766,G__5767,G__5768,G__5769,G__5770,G__5771,G__5772,G__5773,G__5774,G__5775,G__5776,G__5777,G__5778,G__5779,G__5780,G__5781) : target_fn.call(null,G__5763,G__5764,G__5765,G__5766,G__5767,G__5768,G__5769,G__5770,G__5771,G__5772,G__5773,G__5774,G__5775,G__5776,G__5777,G__5778,G__5779,G__5780,G__5781));
});
var G__6242__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__5782 = a;
var G__5783 = b;
var G__5784 = c;
var G__5785 = d;
var G__5786 = e;
var G__5787 = f;
var G__5788 = g;
var G__5789 = h;
var G__5790 = i;
var G__5791 = j;
var G__5792 = k;
var G__5793 = l;
var G__5794 = m;
var G__5795 = n;
var G__5796 = o;
var G__5797 = p;
var G__5798 = q;
var G__5799 = r;
var G__5800 = s;
var G__5801 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__5782,G__5783,G__5784,G__5785,G__5786,G__5787,G__5788,G__5789,G__5790,G__5791,G__5792,G__5793,G__5794,G__5795,G__5796,G__5797,G__5798,G__5799,G__5800,G__5801) : self__.dispatch_fn.call(null,G__5782,G__5783,G__5784,G__5785,G__5786,G__5787,G__5788,G__5789,G__5790,G__5791,G__5792,G__5793,G__5794,G__5795,G__5796,G__5797,G__5798,G__5799,G__5800,G__5801));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5802 = a;
var G__5803 = b;
var G__5804 = c;
var G__5805 = d;
var G__5806 = e;
var G__5807 = f;
var G__5808 = g;
var G__5809 = h;
var G__5810 = i;
var G__5811 = j;
var G__5812 = k;
var G__5813 = l;
var G__5814 = m;
var G__5815 = n;
var G__5816 = o;
var G__5817 = p;
var G__5818 = q;
var G__5819 = r;
var G__5820 = s;
var G__5821 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__5802,G__5803,G__5804,G__5805,G__5806,G__5807,G__5808,G__5809,G__5810,G__5811,G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821) : target_fn.call(null,G__5802,G__5803,G__5804,G__5805,G__5806,G__5807,G__5808,G__5809,G__5810,G__5811,G__5812,G__5813,G__5814,G__5815,G__5816,G__5817,G__5818,G__5819,G__5820,G__5821));
});
var G__6242__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__6242 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__6242__1.call(this,self__);
case 2:
return G__6242__2.call(this,self__,a);
case 3:
return G__6242__3.call(this,self__,a,b);
case 4:
return G__6242__4.call(this,self__,a,b,c);
case 5:
return G__6242__5.call(this,self__,a,b,c,d);
case 6:
return G__6242__6.call(this,self__,a,b,c,d,e);
case 7:
return G__6242__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__6242__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__6242__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__6242__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__6242__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__6242__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__6242__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__6242__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__6242__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__6242__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__6242__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__6242__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__6242__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__6242__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__6242__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__6242__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__6242.cljs$core$IFn$_invoke$arity$1 = G__6242__1;
G__6242.cljs$core$IFn$_invoke$arity$2 = G__6242__2;
G__6242.cljs$core$IFn$_invoke$arity$3 = G__6242__3;
G__6242.cljs$core$IFn$_invoke$arity$4 = G__6242__4;
G__6242.cljs$core$IFn$_invoke$arity$5 = G__6242__5;
G__6242.cljs$core$IFn$_invoke$arity$6 = G__6242__6;
G__6242.cljs$core$IFn$_invoke$arity$7 = G__6242__7;
G__6242.cljs$core$IFn$_invoke$arity$8 = G__6242__8;
G__6242.cljs$core$IFn$_invoke$arity$9 = G__6242__9;
G__6242.cljs$core$IFn$_invoke$arity$10 = G__6242__10;
G__6242.cljs$core$IFn$_invoke$arity$11 = G__6242__11;
G__6242.cljs$core$IFn$_invoke$arity$12 = G__6242__12;
G__6242.cljs$core$IFn$_invoke$arity$13 = G__6242__13;
G__6242.cljs$core$IFn$_invoke$arity$14 = G__6242__14;
G__6242.cljs$core$IFn$_invoke$arity$15 = G__6242__15;
G__6242.cljs$core$IFn$_invoke$arity$16 = G__6242__16;
G__6242.cljs$core$IFn$_invoke$arity$17 = G__6242__17;
G__6242.cljs$core$IFn$_invoke$arity$18 = G__6242__18;
G__6242.cljs$core$IFn$_invoke$arity$19 = G__6242__19;
G__6242.cljs$core$IFn$_invoke$arity$20 = G__6242__20;
G__6242.cljs$core$IFn$_invoke$arity$21 = G__6242__21;
G__6242.cljs$core$IFn$_invoke$arity$22 = G__6242__22;
return G__6242;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args5394){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args5394)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5822 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__5822) : self__.dispatch_fn.call(null,G__5822));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5823 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__5823) : target_fn.call(null,G__5823));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5824 = a;
var G__5825 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__5824,G__5825) : self__.dispatch_fn.call(null,G__5824,G__5825));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5826 = a;
var G__5827 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__5826,G__5827) : target_fn.call(null,G__5826,G__5827));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5828 = a;
var G__5829 = b;
var G__5830 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__5828,G__5829,G__5830) : self__.dispatch_fn.call(null,G__5828,G__5829,G__5830));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5831 = a;
var G__5832 = b;
var G__5833 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__5831,G__5832,G__5833) : target_fn.call(null,G__5831,G__5832,G__5833));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5834 = a;
var G__5835 = b;
var G__5836 = c;
var G__5837 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__5834,G__5835,G__5836,G__5837) : self__.dispatch_fn.call(null,G__5834,G__5835,G__5836,G__5837));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5838 = a;
var G__5839 = b;
var G__5840 = c;
var G__5841 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__5838,G__5839,G__5840,G__5841) : target_fn.call(null,G__5838,G__5839,G__5840,G__5841));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5842 = a;
var G__5843 = b;
var G__5844 = c;
var G__5845 = d;
var G__5846 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__5842,G__5843,G__5844,G__5845,G__5846) : self__.dispatch_fn.call(null,G__5842,G__5843,G__5844,G__5845,G__5846));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5847 = a;
var G__5848 = b;
var G__5849 = c;
var G__5850 = d;
var G__5851 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__5847,G__5848,G__5849,G__5850,G__5851) : target_fn.call(null,G__5847,G__5848,G__5849,G__5850,G__5851));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5852 = a;
var G__5853 = b;
var G__5854 = c;
var G__5855 = d;
var G__5856 = e;
var G__5857 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__5852,G__5853,G__5854,G__5855,G__5856,G__5857) : self__.dispatch_fn.call(null,G__5852,G__5853,G__5854,G__5855,G__5856,G__5857));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5858 = a;
var G__5859 = b;
var G__5860 = c;
var G__5861 = d;
var G__5862 = e;
var G__5863 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__5858,G__5859,G__5860,G__5861,G__5862,G__5863) : target_fn.call(null,G__5858,G__5859,G__5860,G__5861,G__5862,G__5863));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5864 = a;
var G__5865 = b;
var G__5866 = c;
var G__5867 = d;
var G__5868 = e;
var G__5869 = f;
var G__5870 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__5864,G__5865,G__5866,G__5867,G__5868,G__5869,G__5870) : self__.dispatch_fn.call(null,G__5864,G__5865,G__5866,G__5867,G__5868,G__5869,G__5870));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5871 = a;
var G__5872 = b;
var G__5873 = c;
var G__5874 = d;
var G__5875 = e;
var G__5876 = f;
var G__5877 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__5871,G__5872,G__5873,G__5874,G__5875,G__5876,G__5877) : target_fn.call(null,G__5871,G__5872,G__5873,G__5874,G__5875,G__5876,G__5877));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5878 = a;
var G__5879 = b;
var G__5880 = c;
var G__5881 = d;
var G__5882 = e;
var G__5883 = f;
var G__5884 = g;
var G__5885 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__5878,G__5879,G__5880,G__5881,G__5882,G__5883,G__5884,G__5885) : self__.dispatch_fn.call(null,G__5878,G__5879,G__5880,G__5881,G__5882,G__5883,G__5884,G__5885));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5886 = a;
var G__5887 = b;
var G__5888 = c;
var G__5889 = d;
var G__5890 = e;
var G__5891 = f;
var G__5892 = g;
var G__5893 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__5886,G__5887,G__5888,G__5889,G__5890,G__5891,G__5892,G__5893) : target_fn.call(null,G__5886,G__5887,G__5888,G__5889,G__5890,G__5891,G__5892,G__5893));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5894 = a;
var G__5895 = b;
var G__5896 = c;
var G__5897 = d;
var G__5898 = e;
var G__5899 = f;
var G__5900 = g;
var G__5901 = h;
var G__5902 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__5894,G__5895,G__5896,G__5897,G__5898,G__5899,G__5900,G__5901,G__5902) : self__.dispatch_fn.call(null,G__5894,G__5895,G__5896,G__5897,G__5898,G__5899,G__5900,G__5901,G__5902));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5903 = a;
var G__5904 = b;
var G__5905 = c;
var G__5906 = d;
var G__5907 = e;
var G__5908 = f;
var G__5909 = g;
var G__5910 = h;
var G__5911 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__5903,G__5904,G__5905,G__5906,G__5907,G__5908,G__5909,G__5910,G__5911) : target_fn.call(null,G__5903,G__5904,G__5905,G__5906,G__5907,G__5908,G__5909,G__5910,G__5911));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5912 = a;
var G__5913 = b;
var G__5914 = c;
var G__5915 = d;
var G__5916 = e;
var G__5917 = f;
var G__5918 = g;
var G__5919 = h;
var G__5920 = i;
var G__5921 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__5912,G__5913,G__5914,G__5915,G__5916,G__5917,G__5918,G__5919,G__5920,G__5921) : self__.dispatch_fn.call(null,G__5912,G__5913,G__5914,G__5915,G__5916,G__5917,G__5918,G__5919,G__5920,G__5921));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5922 = a;
var G__5923 = b;
var G__5924 = c;
var G__5925 = d;
var G__5926 = e;
var G__5927 = f;
var G__5928 = g;
var G__5929 = h;
var G__5930 = i;
var G__5931 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__5922,G__5923,G__5924,G__5925,G__5926,G__5927,G__5928,G__5929,G__5930,G__5931) : target_fn.call(null,G__5922,G__5923,G__5924,G__5925,G__5926,G__5927,G__5928,G__5929,G__5930,G__5931));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5932 = a;
var G__5933 = b;
var G__5934 = c;
var G__5935 = d;
var G__5936 = e;
var G__5937 = f;
var G__5938 = g;
var G__5939 = h;
var G__5940 = i;
var G__5941 = j;
var G__5942 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__5932,G__5933,G__5934,G__5935,G__5936,G__5937,G__5938,G__5939,G__5940,G__5941,G__5942) : self__.dispatch_fn.call(null,G__5932,G__5933,G__5934,G__5935,G__5936,G__5937,G__5938,G__5939,G__5940,G__5941,G__5942));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5943 = a;
var G__5944 = b;
var G__5945 = c;
var G__5946 = d;
var G__5947 = e;
var G__5948 = f;
var G__5949 = g;
var G__5950 = h;
var G__5951 = i;
var G__5952 = j;
var G__5953 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__5943,G__5944,G__5945,G__5946,G__5947,G__5948,G__5949,G__5950,G__5951,G__5952,G__5953) : target_fn.call(null,G__5943,G__5944,G__5945,G__5946,G__5947,G__5948,G__5949,G__5950,G__5951,G__5952,G__5953));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5954 = a;
var G__5955 = b;
var G__5956 = c;
var G__5957 = d;
var G__5958 = e;
var G__5959 = f;
var G__5960 = g;
var G__5961 = h;
var G__5962 = i;
var G__5963 = j;
var G__5964 = k;
var G__5965 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__5954,G__5955,G__5956,G__5957,G__5958,G__5959,G__5960,G__5961,G__5962,G__5963,G__5964,G__5965) : self__.dispatch_fn.call(null,G__5954,G__5955,G__5956,G__5957,G__5958,G__5959,G__5960,G__5961,G__5962,G__5963,G__5964,G__5965));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5966 = a;
var G__5967 = b;
var G__5968 = c;
var G__5969 = d;
var G__5970 = e;
var G__5971 = f;
var G__5972 = g;
var G__5973 = h;
var G__5974 = i;
var G__5975 = j;
var G__5976 = k;
var G__5977 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__5966,G__5967,G__5968,G__5969,G__5970,G__5971,G__5972,G__5973,G__5974,G__5975,G__5976,G__5977) : target_fn.call(null,G__5966,G__5967,G__5968,G__5969,G__5970,G__5971,G__5972,G__5973,G__5974,G__5975,G__5976,G__5977));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__5978 = a;
var G__5979 = b;
var G__5980 = c;
var G__5981 = d;
var G__5982 = e;
var G__5983 = f;
var G__5984 = g;
var G__5985 = h;
var G__5986 = i;
var G__5987 = j;
var G__5988 = k;
var G__5989 = l;
var G__5990 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__5978,G__5979,G__5980,G__5981,G__5982,G__5983,G__5984,G__5985,G__5986,G__5987,G__5988,G__5989,G__5990) : self__.dispatch_fn.call(null,G__5978,G__5979,G__5980,G__5981,G__5982,G__5983,G__5984,G__5985,G__5986,G__5987,G__5988,G__5989,G__5990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__5991 = a;
var G__5992 = b;
var G__5993 = c;
var G__5994 = d;
var G__5995 = e;
var G__5996 = f;
var G__5997 = g;
var G__5998 = h;
var G__5999 = i;
var G__6000 = j;
var G__6001 = k;
var G__6002 = l;
var G__6003 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__5991,G__5992,G__5993,G__5994,G__5995,G__5996,G__5997,G__5998,G__5999,G__6000,G__6001,G__6002,G__6003) : target_fn.call(null,G__5991,G__5992,G__5993,G__5994,G__5995,G__5996,G__5997,G__5998,G__5999,G__6000,G__6001,G__6002,G__6003));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6004 = a;
var G__6005 = b;
var G__6006 = c;
var G__6007 = d;
var G__6008 = e;
var G__6009 = f;
var G__6010 = g;
var G__6011 = h;
var G__6012 = i;
var G__6013 = j;
var G__6014 = k;
var G__6015 = l;
var G__6016 = m;
var G__6017 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__6004,G__6005,G__6006,G__6007,G__6008,G__6009,G__6010,G__6011,G__6012,G__6013,G__6014,G__6015,G__6016,G__6017) : self__.dispatch_fn.call(null,G__6004,G__6005,G__6006,G__6007,G__6008,G__6009,G__6010,G__6011,G__6012,G__6013,G__6014,G__6015,G__6016,G__6017));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6018 = a;
var G__6019 = b;
var G__6020 = c;
var G__6021 = d;
var G__6022 = e;
var G__6023 = f;
var G__6024 = g;
var G__6025 = h;
var G__6026 = i;
var G__6027 = j;
var G__6028 = k;
var G__6029 = l;
var G__6030 = m;
var G__6031 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__6018,G__6019,G__6020,G__6021,G__6022,G__6023,G__6024,G__6025,G__6026,G__6027,G__6028,G__6029,G__6030,G__6031) : target_fn.call(null,G__6018,G__6019,G__6020,G__6021,G__6022,G__6023,G__6024,G__6025,G__6026,G__6027,G__6028,G__6029,G__6030,G__6031));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6032 = a;
var G__6033 = b;
var G__6034 = c;
var G__6035 = d;
var G__6036 = e;
var G__6037 = f;
var G__6038 = g;
var G__6039 = h;
var G__6040 = i;
var G__6041 = j;
var G__6042 = k;
var G__6043 = l;
var G__6044 = m;
var G__6045 = n;
var G__6046 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__6032,G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041,G__6042,G__6043,G__6044,G__6045,G__6046) : self__.dispatch_fn.call(null,G__6032,G__6033,G__6034,G__6035,G__6036,G__6037,G__6038,G__6039,G__6040,G__6041,G__6042,G__6043,G__6044,G__6045,G__6046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6047 = a;
var G__6048 = b;
var G__6049 = c;
var G__6050 = d;
var G__6051 = e;
var G__6052 = f;
var G__6053 = g;
var G__6054 = h;
var G__6055 = i;
var G__6056 = j;
var G__6057 = k;
var G__6058 = l;
var G__6059 = m;
var G__6060 = n;
var G__6061 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__6047,G__6048,G__6049,G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056,G__6057,G__6058,G__6059,G__6060,G__6061) : target_fn.call(null,G__6047,G__6048,G__6049,G__6050,G__6051,G__6052,G__6053,G__6054,G__6055,G__6056,G__6057,G__6058,G__6059,G__6060,G__6061));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6062 = a;
var G__6063 = b;
var G__6064 = c;
var G__6065 = d;
var G__6066 = e;
var G__6067 = f;
var G__6068 = g;
var G__6069 = h;
var G__6070 = i;
var G__6071 = j;
var G__6072 = k;
var G__6073 = l;
var G__6074 = m;
var G__6075 = n;
var G__6076 = o;
var G__6077 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__6062,G__6063,G__6064,G__6065,G__6066,G__6067,G__6068,G__6069,G__6070,G__6071,G__6072,G__6073,G__6074,G__6075,G__6076,G__6077) : self__.dispatch_fn.call(null,G__6062,G__6063,G__6064,G__6065,G__6066,G__6067,G__6068,G__6069,G__6070,G__6071,G__6072,G__6073,G__6074,G__6075,G__6076,G__6077));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6078 = a;
var G__6079 = b;
var G__6080 = c;
var G__6081 = d;
var G__6082 = e;
var G__6083 = f;
var G__6084 = g;
var G__6085 = h;
var G__6086 = i;
var G__6087 = j;
var G__6088 = k;
var G__6089 = l;
var G__6090 = m;
var G__6091 = n;
var G__6092 = o;
var G__6093 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084,G__6085,G__6086,G__6087,G__6088,G__6089,G__6090,G__6091,G__6092,G__6093) : target_fn.call(null,G__6078,G__6079,G__6080,G__6081,G__6082,G__6083,G__6084,G__6085,G__6086,G__6087,G__6088,G__6089,G__6090,G__6091,G__6092,G__6093));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6094 = a;
var G__6095 = b;
var G__6096 = c;
var G__6097 = d;
var G__6098 = e;
var G__6099 = f;
var G__6100 = g;
var G__6101 = h;
var G__6102 = i;
var G__6103 = j;
var G__6104 = k;
var G__6105 = l;
var G__6106 = m;
var G__6107 = n;
var G__6108 = o;
var G__6109 = p;
var G__6110 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__6094,G__6095,G__6096,G__6097,G__6098,G__6099,G__6100,G__6101,G__6102,G__6103,G__6104,G__6105,G__6106,G__6107,G__6108,G__6109,G__6110) : self__.dispatch_fn.call(null,G__6094,G__6095,G__6096,G__6097,G__6098,G__6099,G__6100,G__6101,G__6102,G__6103,G__6104,G__6105,G__6106,G__6107,G__6108,G__6109,G__6110));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6111 = a;
var G__6112 = b;
var G__6113 = c;
var G__6114 = d;
var G__6115 = e;
var G__6116 = f;
var G__6117 = g;
var G__6118 = h;
var G__6119 = i;
var G__6120 = j;
var G__6121 = k;
var G__6122 = l;
var G__6123 = m;
var G__6124 = n;
var G__6125 = o;
var G__6126 = p;
var G__6127 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__6111,G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123,G__6124,G__6125,G__6126,G__6127) : target_fn.call(null,G__6111,G__6112,G__6113,G__6114,G__6115,G__6116,G__6117,G__6118,G__6119,G__6120,G__6121,G__6122,G__6123,G__6124,G__6125,G__6126,G__6127));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6128 = a;
var G__6129 = b;
var G__6130 = c;
var G__6131 = d;
var G__6132 = e;
var G__6133 = f;
var G__6134 = g;
var G__6135 = h;
var G__6136 = i;
var G__6137 = j;
var G__6138 = k;
var G__6139 = l;
var G__6140 = m;
var G__6141 = n;
var G__6142 = o;
var G__6143 = p;
var G__6144 = q;
var G__6145 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__6128,G__6129,G__6130,G__6131,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145) : self__.dispatch_fn.call(null,G__6128,G__6129,G__6130,G__6131,G__6132,G__6133,G__6134,G__6135,G__6136,G__6137,G__6138,G__6139,G__6140,G__6141,G__6142,G__6143,G__6144,G__6145));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6146 = a;
var G__6147 = b;
var G__6148 = c;
var G__6149 = d;
var G__6150 = e;
var G__6151 = f;
var G__6152 = g;
var G__6153 = h;
var G__6154 = i;
var G__6155 = j;
var G__6156 = k;
var G__6157 = l;
var G__6158 = m;
var G__6159 = n;
var G__6160 = o;
var G__6161 = p;
var G__6162 = q;
var G__6163 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__6146,G__6147,G__6148,G__6149,G__6150,G__6151,G__6152,G__6153,G__6154,G__6155,G__6156,G__6157,G__6158,G__6159,G__6160,G__6161,G__6162,G__6163) : target_fn.call(null,G__6146,G__6147,G__6148,G__6149,G__6150,G__6151,G__6152,G__6153,G__6154,G__6155,G__6156,G__6157,G__6158,G__6159,G__6160,G__6161,G__6162,G__6163));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6164 = a;
var G__6165 = b;
var G__6166 = c;
var G__6167 = d;
var G__6168 = e;
var G__6169 = f;
var G__6170 = g;
var G__6171 = h;
var G__6172 = i;
var G__6173 = j;
var G__6174 = k;
var G__6175 = l;
var G__6176 = m;
var G__6177 = n;
var G__6178 = o;
var G__6179 = p;
var G__6180 = q;
var G__6181 = r;
var G__6182 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__6164,G__6165,G__6166,G__6167,G__6168,G__6169,G__6170,G__6171,G__6172,G__6173,G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181,G__6182) : self__.dispatch_fn.call(null,G__6164,G__6165,G__6166,G__6167,G__6168,G__6169,G__6170,G__6171,G__6172,G__6173,G__6174,G__6175,G__6176,G__6177,G__6178,G__6179,G__6180,G__6181,G__6182));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6183 = a;
var G__6184 = b;
var G__6185 = c;
var G__6186 = d;
var G__6187 = e;
var G__6188 = f;
var G__6189 = g;
var G__6190 = h;
var G__6191 = i;
var G__6192 = j;
var G__6193 = k;
var G__6194 = l;
var G__6195 = m;
var G__6196 = n;
var G__6197 = o;
var G__6198 = p;
var G__6199 = q;
var G__6200 = r;
var G__6201 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189,G__6190,G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198,G__6199,G__6200,G__6201) : target_fn.call(null,G__6183,G__6184,G__6185,G__6186,G__6187,G__6188,G__6189,G__6190,G__6191,G__6192,G__6193,G__6194,G__6195,G__6196,G__6197,G__6198,G__6199,G__6200,G__6201));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__6202 = a;
var G__6203 = b;
var G__6204 = c;
var G__6205 = d;
var G__6206 = e;
var G__6207 = f;
var G__6208 = g;
var G__6209 = h;
var G__6210 = i;
var G__6211 = j;
var G__6212 = k;
var G__6213 = l;
var G__6214 = m;
var G__6215 = n;
var G__6216 = o;
var G__6217 = p;
var G__6218 = q;
var G__6219 = r;
var G__6220 = s;
var G__6221 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__6202,G__6203,G__6204,G__6205,G__6206,G__6207,G__6208,G__6209,G__6210,G__6211,G__6212,G__6213,G__6214,G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221) : self__.dispatch_fn.call(null,G__6202,G__6203,G__6204,G__6205,G__6206,G__6207,G__6208,G__6209,G__6210,G__6211,G__6212,G__6213,G__6214,G__6215,G__6216,G__6217,G__6218,G__6219,G__6220,G__6221));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__6222 = a;
var G__6223 = b;
var G__6224 = c;
var G__6225 = d;
var G__6226 = e;
var G__6227 = f;
var G__6228 = g;
var G__6229 = h;
var G__6230 = i;
var G__6231 = j;
var G__6232 = k;
var G__6233 = l;
var G__6234 = m;
var G__6235 = n;
var G__6236 = o;
var G__6237 = p;
var G__6238 = q;
var G__6239 = r;
var G__6240 = s;
var G__6241 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__6222,G__6223,G__6224,G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231,G__6232,G__6233,G__6234,G__6235,G__6236,G__6237,G__6238,G__6239,G__6240,G__6241) : target_fn.call(null,G__6222,G__6223,G__6224,G__6225,G__6226,G__6227,G__6228,G__6229,G__6230,G__6231,G__6232,G__6233,G__6234,G__6235,G__6236,G__6237,G__6238,G__6239,G__6240,G__6241));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});
/**
 * Given a multimethod, return it's default-dispatch-val.
 */
cljs.core.default_dispatch_val = (function cljs$core$default_dispatch_val(multifn){
return cljs.core._default_dispatch_val(multifn);
});
/**
 * Given a multimethod, return it's dispatch-fn.
 */
cljs.core.dispatch_fn = (function cljs$core$dispatch_fn(multifn){
return cljs.core._dispatch_fn(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 2048;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
var G__6243 = self__.uuid;
var G__6244 = other.uuid;
return goog.array.defaultCompare(G__6243,G__6244);
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__6245 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__6245);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4172__auto__,writer__4173__auto__,opt__4174__auto__){
return cljs.core._write(writer__4173__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__6253 = x;
var G__6254 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__6253,G__6254) : pred.call(null,G__6253,G__6254));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__6255 = y;
var G__6256 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__6255,G__6256) : pred.call(null,G__6255,G__6256));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
