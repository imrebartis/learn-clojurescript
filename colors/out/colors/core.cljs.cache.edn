;; Analyzed by ClojureScript 0.0-3169
{:use-macros nil, :excludes #{}, :name colors.core, :imports nil, :requires {color goog.color, goog.color goog.color, reagent reagent.core, reagent.core reagent.core, clojure.browser.repl clojure.browser.repl, repl clojure.browser.repl}, :uses {atom reagent.core}, :defs {percentfield {:protocol-inline nil, :meta {:file nil, :arglists (quote ([rgb-part val])), :end-column 19, :end-line 73, :column 7, :line 73}, :name colors.core/percentfield, :variadic false, :file "src/colors/core.cljs", :end-column 19, :method-params ([rgb-part val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rgb-part val])), :test true}, hex-change {:protocol-inline nil, :meta {:file nil, :arglists (quote ([event])), :end-column 17, :end-line 27, :column 7, :line 27}, :name colors.core/hex-change, :variadic false, :file "src/colors/core.cljs", :end-column 17, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 1}), :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, everything {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 17, :end-line 80, :column 7, :line 80}, :name colors.core/everything, :variadic false, :file "src/colors/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, hex-input {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 16, :end-line 34, :column 7, :line 34}, :name colors.core/hex-input, :variadic false, :file "src/colors/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 34, :end-line 34, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, conn {:file "src/colors/core.cljs", :meta {:file nil, :end-column 14, :end-line 6, :column 10, :line 6}, :line 6, :column 1, :end-line 6, :end-column 14, :test true, :name colors.core/conn}, color-square {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :doc "This component is a rectangle whose background color\n  is controlled by the value of the :hex key in the rgbh atom", :end-column 19, :end-line 14, :column 7, :line 14}, :name colors.core/color-square, :variadic false, :file "src/colors/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 0}), :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "This component is a rectangle whose background color\n  is controlled by the value of the :hex key in the rgbh atom", :test true}, rgbfield {:protocol-inline nil, :meta {:file nil, :arglists (quote ([rgb-part val])), :end-column 15, :end-line 59, :column 7, :line 59}, :name colors.core/rgbfield, :variadic false, :file "src/colors/core.cljs", :end-column 15, :method-params ([rgb-part val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 2}), :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rgb-part val])), :test true}, rgb-change {:protocol-inline nil, :meta {:file nil, :arglists (quote ([event rgb-part])), :end-column 17, :end-line 50, :column 7, :line 50}, :name colors.core/rgb-change, :variadic false, :file "src/colors/core.cljs", :end-column 17, :method-params ([event rgb-part]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event rgb-part])), :test true}, in-range {:protocol-inline nil, :meta {:file nil, :arglists (quote ([value minval maxval])), :doc "Restrict a value to a minimum and maximum; the empty string\n  remains unchanged", :end-column 15, :end-line 41, :column 7, :line 41}, :name colors.core/in-range, :variadic false, :file "src/colors/core.cljs", :end-column 15, :method-params ([value minval maxval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 41, :end-line 41, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value minval maxval])), :doc "Restrict a value to a minimum and maximum; the empty string\n  remains unchanged", :test true}, rgbh {:file "src/colors/core.cljs", :meta {:file nil, :end-column 14, :end-line 12, :column 10, :line 12}, :line 12, :column 1, :end-line 12, :end-column 14, :test true, :name colors.core/rgbh}, percent-change {:protocol-inline nil, :meta {:file nil, :arglists (quote ([event rgb-part])), :end-column 21, :end-line 66, :column 7, :line 66}, :name colors.core/percent-change, :variadic false, :file "src/colors/core.cljs", :end-column 21, :method-params ([event rgb-part]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any}, :variadic false, :max-fixed-arity 2}), :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event rgb-part])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:r :g :b :hex :div :style :width :margin-left :margin-right :height :background-color :border :input :type :size :value :on-change :label :br], :seen #{:r :margin-left :value :background-color :width :type :size :style :div :g :hex :label :b :br :input :margin-right :on-change :border :height}}, :doc nil}