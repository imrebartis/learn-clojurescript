;; Analyzed by ClojureScript 0.0-3169
{:use-macros nil, :excludes #{}, :name conditionals.core, :imports nil, :requires {clojure.browser.repl clojure.browser.repl, repl clojure.browser.repl}, :uses nil, :defs {status {:protocol-inline nil, :meta {:file nil, :arglists (quote ([age])), :end-column 13, :end-line 9, :column 7, :line 9}, :name conditionals.core/status, :variadic false, :file "src/conditionals/core.cljs", :end-column 13, :method-params ([age]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag string, :variadic false, :max-fixed-arity 1}), :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([age])), :test true}, conn {:file "src/conditionals/core.cljs", :meta {:file nil, :end-column 14, :end-line 4, :column 10, :line 4}, :line 4, :column 1, :end-line 4, :end-column 14, :test true, :name conditionals.core/conn}}, :require-macros nil, :cljs.analyzer/constants {:order [:else], :seen #{:else}}, :doc nil}