;; Analyzed by ClojureScript 0.0-3169
{:use-macros nil, :excludes #{}, :name discount.core, :imports nil, :requires {ev domina.events, domina.events domina.events, dom domina, domina domina, clojure.browser.repl clojure.browser.repl, repl clojure.browser.repl}, :uses nil, :defs {calculate {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 16, :end-line 31, :column 7, :line 31}, :name discount.core/calculate, :variadic false, :file "src/discount/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 0}), :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, currency {:protocol-inline nil, :meta {:file nil, :arglists (quote ([amount])), :end-column 15, :end-line 28, :column 7, :line 28}, :name discount.core/currency, :variadic false, :file "src/discount/core.cljs", :end-column 15, :method-params ([amount]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([amount])), :test true}, discount-total {:protocol-inline nil, :meta {:file nil, :arglists (quote ([qty price percent])), :end-column 21, :end-line 25, :column 7, :line 25}, :name discount.core/discount-total, :variadic false, :file "src/discount/core.cljs", :end-column 21, :method-params ([qty price percent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 3}), :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([qty price percent])), :test true}, discount-percent {:protocol-inline nil, :meta {:file nil, :arglists (quote ([qty])), :end-column 23, :end-line 17, :column 7, :line 17}, :name discount.core/discount-percent, :variadic false, :file "src/discount/core.cljs", :end-column 23, :method-params ([qty]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 1}), :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([qty])), :test true}, extra-discount {:protocol-inline nil, :meta {:file nil, :arglists (quote ([])), :end-column 21, :end-line 14, :column 7, :line 14}, :name discount.core/extra-discount, :variadic false, :file "src/discount/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 0}), :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, field-value {:protocol-inline nil, :meta {:file nil, :arglists (quote ([field])), :end-column 18, :end-line 11, :column 7, :line 11}, :name discount.core/field-value, :variadic false, :file "src/discount/core.cljs", :end-column 18, :method-params ([field]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([field])), :test true}, conn {:file "src/discount/core.cljs", :meta {:file nil, :end-column 14, :end-line 6, :column 10, :line 6}, :line 6, :column 1, :end-line 6, :end-column 14, :test true, :name discount.core/conn}}, :require-macros nil, :cljs.analyzer/constants {:order [:else], :seen #{:else}}, :doc nil}