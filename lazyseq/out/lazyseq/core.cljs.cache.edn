;; Analyzed by ClojureScript 0.0-3169
{:defs {list-item {:protocol-inline nil, :meta {:file nil, :arglists (quote ([text])), :end-column 16, :end-line 40, :column 7, :line 40}, :name lazyseq.core/list-item, :variadic false, :file "src/lazyseq/core.cljs", :end-column 16, :method-params ([text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([text])), :test true}, animals {:file "src/lazyseq/core.cljs", :meta {:file nil, :end-column 13, :end-line 38, :column 6, :line 38}, :line 38, :column 1, :end-line 38, :end-column 13, :test true, :name lazyseq.core/animals}, the-list {:file "src/lazyseq/core.cljs", :meta {:file nil, :end-column 14, :end-line 36, :column 6, :line 36}, :line 36, :column 1, :end-line 36, :end-column 14, :test true, :name lazyseq.core/the-list}, square {:protocol-inline nil, :meta {:file nil, :arglists (quote ([x])), :end-column 13, :end-line 9, :column 7, :line 9}, :name lazyseq.core/square, :variadic false, :file "src/lazyseq/core.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag number, :variadic false, :max-fixed-arity 1}), :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, conn {:file "src/lazyseq/core.cljs", :meta {:file nil, :end-column 14, :end-line 6, :column 10, :line 6}, :line 6, :column 1, :end-line 6, :end-column 14, :test true, :name lazyseq.core/conn}}, :imports nil, :requires {ev domina.events, domina.events domina.events, dom domina, domina domina, clojure.browser.repl clojure.browser.repl, repl clojure.browser.repl}, :uses nil, :require-macros nil, :use-macros nil, :excludes #{}, :doc nil, :name lazyseq.core}